/****************************************************************************/
/*  File    : ms_task.h                                                     */
/*--------------------------------------------------------------------------*/
/*  Scope   : Mservices task internal definitions                           */
/*                                                                          */
/*                                                                          */
/****************************************************************************/
/*
* --------------------------------------------------------------------------
*  Date     | Author | Revision       | Description
* ----------+--------+----------------+-------------------------------------
*/

#ifndef __MS_TASK_H__
#define __MS_TASK_H__

#ifdef __MSERVICES__

#include "sys_sys_bootinit.h"

/****************************************************************************/
/*                                                                          */
/*                                                                          */
/*                            CONSTANTS                                     */
/*                                                                          */
/*                                                                          */
/****************************************************************************/


/****************************************************************************/
/*  Constant :      I_MSERV_GARBAGE_THRESHOLD                               */
/*--------------------------------------------------------------------------*/
/*  Scope    : Threshold for garbage                                        */
/*                                                                          */
/****************************************************************************/
#define I_MSERV_GARBAGE_THRESHOLD 75


/****************************************************************************/
/*  typedef enum :  Mserv_ObjectId_t                                        */
/*--------------------------------------------------------------------------*/
/*                                                                          */
/*  Scope     : determine the User Agent                                    */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Value                      |      Description                           */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_ALL	       | all user agent                             */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_BROWSER_UA     | browser user agent                     */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_PUSH_UA	       | push user agent		                */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_PUSH_SECURE_UA | push secure user agent                 */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_PARSERXML_UA   | parser XML user agent                  */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_PARSERSMIL_UA  | parser smil user agent                 */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_OBJECT_MMS_HTTPCLIENT_UA  | http user agent for mms            */
/*-----------------------------+--------------------------------------------*/
/****************************************************************************/
typedef enum
{
    MSERV_MIC_OBJECT_ALL = 0,
        MSERV_MIC_OBJECT_BROWSER_UA,
        MSERV_MIC_OBJECT_PUSH_UA,
        MSERV_MIC_OBJECT_PUSH_SECURE_UA,
        MSERV_MIC_OBJECT_PARSERXML_UA,
        MSERV_MIC_OBJECT_PARSERSMIL_UA,
        MSERV_MIC_OBJECT_MMS_HTTPCLIENT_UA,
        MSERV_SYNCML_HTTPCLIENT_UA,
        MSERV_MIC_OBJECT_HTTPCLIENT_UA,
        MSERV_MIC_OBJECT_SOCKET_UA
        
} Mserv_ObjectId_t;



/****************************************************************************/
/*                                                                          */
/*                                                                          */
/*                            FUNCTIONS                                     */
/*                                                                          */
/*                                                                          */
/****************************************************************************/


/****************************************************************************/
/*  Function  : cus_MSERV_Init()                                            */
/*--------------------------------------------------------------------------*/
/*  Scope     : Initialisation of MSERV task                                */
/*                                                                          */
/*                                                                          */
/*  Return    : None                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*  None                                                                    */
/****************************************************************************/

__ONCE_CALL_ON_BOOT__ void cus_MSERV_Init (void);



/****************************************************************************/
/*  Function  : cus_MSERV_Parse()                                           */
/*--------------------------------------------------------------------------*/
/*  Scope     : Compute the messages in the MSERV mailbox                   */
/*                                                                          */
/*                                                                          */
/*  Return    : None                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*  PtrMsgRec         | x |   |   |  Pointer on the message                 */
/****************************************************************************/

void cus_MSERV_Parse (const void *PtrMsgRec);



/****************************************************************************/
/*  Function  : Mserv_Mic_RunningMic()                                      */
/*--------------------------------------------------------------------------*/
/*  Scope     : Process the MIC internal events                             */
/*                                                                          */
/*                                                                          */
/*  Return    : None                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void Mserv_Mic_RunningMic(void);



/****************************************************************************/
/*  Function  : Mserv_Mic_StartMic()                                        */
/*--------------------------------------------------------------------------*/
/*  Scope     : Start the MIC browser                                       */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void Mserv_Mic_StartMic(void);



/****************************************************************************/
/*  Function  : Mserv_Mic_StopMic()                                         */
/*--------------------------------------------------------------------------*/
/*  Scope     : Stop the MIC browser                                        */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/* cause              | X |   |   | Cause of the stop                       */
/****************************************************************************/

void Mserv_Mic_StopMic(iMserv_Mic_TaskStopCause_t cause);



/****************************************************************************/
/*  Function  : Mserv_Mic_LoadConfigUA()                                    */
/*--------------------------------------------------------------------------*/
/*  Scope     : Load configuration User Agent variables                     */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void Mserv_Mic_LoadConfigUA(void);



/****************************************************************************/
/*  Function  : Mserv_Mic_LoadConfigChannel()                               */
/*--------------------------------------------------------------------------*/
/*  Scope     : Load configuration channel variables                        */
/*                                                                          */
/*                                                                          */
/*  Return    : TRUE if all is configured                                   */
/*              FALSE if the profile is empty                               */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*   object_id        | X |   |   | Config for the specified object id      */
/****************************************************************************/

bool Mserv_Mic_LoadConfigChannel(int object_id);


/****************************************************************************/
/*  Function  : Mserv_Mic_SendStopInd()                                     */
/*--------------------------------------------------------------------------*/
/*  Scope     : M-Services task sends the stop indication message to the    */
/*              MMI task                                                    */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/* cause              | X |   |   | Cause of the stop                       */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void Mserv_Mic_SendStopInd(iMserv_Mic_TaskStopCause_t cause);


#ifdef __SYNCML__

/****************************************************************************/
/*  Function  : Mserv_Syncml_StartMic()                                     */
/*--------------------------------------------------------------------------*/
/*  Scope     : Init and start the SyncML Client                            */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/****************************************************************************/

void Mserv_Syncml_StartMic(void);



/****************************************************************************/
/*  Function  : Mserv_Syncml_StopMic()                                      */
/*--------------------------------------------------------------------------*/
/*  Scope     : Stop the MIC for the SyncML client                          */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/****************************************************************************/

void Mserv_Syncml_StopMic(void);



/****************************************************************************/
/*  Function  : Mserv_Syncml_EnableObex()                                   */
/*--------------------------------------------------------------------------*/
/*  Scope     : Enter Obex SyncML state                                     */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/****************************************************************************/

void Mserv_Syncml_EnableObex(void);



/****************************************************************************/
/*  Function  : Mserv_Syncml_DisableObex()                                  */
/*--------------------------------------------------------------------------*/
/*  Scope     : Exit Obex SyncML state                                      */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/****************************************************************************/

void Mserv_Syncml_DisableObex(void);
#endif /* __SYNCML__ */

#endif /* __MSERVICES__ */
#endif /* __MS_TASK_H__ */

