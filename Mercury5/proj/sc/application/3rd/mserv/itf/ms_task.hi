/****************************************************************************/
/*  File    : ms_task.hi                                                    */
/*--------------------------------------------------------------------------*/
/*  Scope   : M-SERVICES task entry point                                   */
/*                                                                          */
/*  Contents:                                                               */
/*                                                                          */
/****************************************************************************/
/*
 * --------------------------------------------------------------------------
 *  Date     | Author | Revision       | Description
 * ----------+--------+----------------+-------------------------------------
 */

#ifndef __MS_TASK_HI__
#define __MS_TASK_HI__

        #ifdef __MSERVICES__
                #include "ms_stmsg.hi"  /* Mservices message structure definition */
                #include "sys_rtk_vmrtkho.h"


/****************************************************************************/
/*                                                                          */
/*                                                                          */
/*                            CONSTANTS                                     */
/*                                                                          */
/*                                                                          */
/****************************************************************************/


/****************************************************************************/
/*  typedef enum :  iMserv_Mic_TaskState_t                                  */
/*--------------------------------------------------------------------------*/
/*                                                                          */
/*  Scope     : define the state of the browser                             */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Value                      |      Description                           */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_IDLE        | browser is idle                                */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_WAP_SESSION     | browser is in session                      */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_MMS             |                                            */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_WAP_SYNCML_SESSION  |                                        */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_LOCAL_SYNCML_SESSION|                                        */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_WAP_PUSH        | Push ua is started                         */
/*-----------------------------+--------------------------------------------*/
/* I_MSERV_MIC_SUSPEND         | browser is suspended                       */
/*-----------------------------+--------------------------------------------*/
/****************************************************************************/
typedef enum
{
    I_MSERV_MIC_IDLE,
    I_MSERV_MIC_WAP_SESSION,
    I_MSERV_MIC_MMS,
    I_MSERV_MIC_WAP_SYNCML_SESSION,
    I_MSERV_MIC_LOCAL_SYNCML_SESSION,
    I_MSERV_MIC_WAP_PUSH,
    I_MSERV_MIC_SUSPEND,
    I_MSERV_OBEX_SYNCML
}iMserv_Mic_TaskState_t;

/****************************************************************************/
/*  typedef enum :  iMserv_Mic_Net_ComState_t                               */
/*--------------------------------------------------------------------------*/
/*                                                                          */
/*  Scope     : determine the state of a wtai call in csd mode              */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Value                      |      Description                           */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_NET_DISCONNECTED  |                                            */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_NET_CONNECTING    |                                            */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_NET_DISCONNECTING |                                            */
/*-----------------------------+--------------------------------------------*/
/* MSERV_MIC_NET_CONNECTED     |                                            */
/*-----------------------------+--------------------------------------------*/
/****************************************************************************/
typedef enum
{
   MSERV_MIC_NET_DISCONNECTED,    /* Idle state */
   MSERV_MIC_NET_CONNECTING,      /* Data link connection in progress */
   MSERV_MIC_NET_DISCONNECTING,   /* Disconnection in progress */
   MSERV_MIC_NET_CONNECTED        /* Data link and socket created */
}iMserv_Mic_Net_ComState_t;

/****************************************************************************/
/*                                                                          */
/*                                                                          */
/*                            FUNCTIONS                                     */
/*                                                                          */
/*                                                                          */
/****************************************************************************/

/****************************************************************************/
/*  Function  : iMserv_Mic_GetState()                                       */
/*--------------------------------------------------------------------------*/
/*  Scope     : Return the M-Services task state                            */
/*                                                                          */
/*                                                                          */
/*  Return    : Mserv task state                                            */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

iMserv_Mic_TaskState_t iMserv_Mic_GetState(void);

/****************************************************************************/
/*  Function  : iMserv_Mic_SendStartMicMsg()                                */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser start message to Mservices task            */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*  StartUrl          | X |   |   |  Specified the start Url                */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void iMserv_Mic_SendStartMicMsg(iMserv_Mic_StartUrl_t *StartUrl);



/****************************************************************************/
/*  Function  : iMserv_Mic_SendStopMicMsg()                                 */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser stop message to Mservices task             */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void iMserv_Mic_SendStopMicMsg(void);

/****************************************************************************/
/*  Function  : iMserv_Mic_SendStopMicAuthMsg()                                 */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser stop message to Mservices task             */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void iMserv_Mic_SendStopMicAuthMsg(void);

/****************************************************************************/
/*  Function  : iMserv_Mic_BatLowAutoOff()                                  */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser that the battery is very very low          */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void iMserv_Mic_BatLowAutoOff(void);

/****************************************************************************/
/*  Function  : Mserv_Mic_shutdownCall()                                    */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser a shutdown indication                      */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*                    |   |   |   |                                         */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void Mserv_Mic_shutdownCall(void);

/****************************************************************************/
/*  Function  : iMserv_Mic_SendClearMemMsg()                                */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC browser clear memory message to Mservices task     */
/*                                                                          */
/*                                                                          */
/*  Return    : void                                                        */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*      ClearMemType  |X  |   |   | indicate the type of memory to clear    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

void iMserv_Mic_SendClearMemMsg(iMserv_Mic_ClearMemType_t ClearMemType );

/****************************************************************************/
/*  Function  : iMserv_Mic_SendStoreCustoSettings()                         */
/*--------------------------------------------------------------------------*/
/*  Scope     : Send MIC store custo settings if needed to the Mserv task   */
/*                                                                          */
/*                                                                          */
/*  Return    : TRUE if treatment is need                                   */
/*              FALSE                                                       */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/

bool iMserv_Mic_SendStoreCustoSettings(u16 Lang_idx);

#ifdef __RELEASE_FOR_3RD_VENDOR__
/****************************************************************************/
/*  Function  : iVendor_SndExitReq()                                */
/*--------------------------------------------------------------------------*/
/*  Scope     : send stop request message to MSERV                          */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void iVendor_SndExitReq(void);

/****************************************************************************/
/*  Function  : iVendor_SndSuspendReq()                                */
/*--------------------------------------------------------------------------*/
/*  Scope     : send suspend request message to MSERV                          */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void iVendor_SndSuspendReq(void);

/****************************************************************************/
/*  Function  : iVendor_SndResumeReq()                                */
/*--------------------------------------------------------------------------*/
/*  Scope     : send suspend request message to MSERV                          */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void iVendor_SndResumeReq(void);
#endif

/****************************************************************************/
/*  Function  : iMserv_SndStartApplicationReq()                             */
/*--------------------------------------------------------------------------*/
/*  Scope     : send start request message to MSERV                         */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*      type          |X  |   |   | indicate the type of application    */
/*--------------------+---+---+---+-----------------------------------------*/
/*      data          |X  |   |   | a pointer indicated to the structure which will pass to the application   */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void iMserv_SndStartApplicationReq(iMserv_3rd_Application_Type_t type, void *data);

/****************************************************************************/
/*  Function  : iMserv_SndStopApplicationReq()                             */
/*--------------------------------------------------------------------------*/
/*  Scope     : send stop request message to MSERV                         */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*      type          |X  |   |   | indicate the type of application    */
/*--------------------+---+---+---+-----------------------------------------*/
/*      status        |X  |   |   | indicate the status which will pass to the application   */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void iMserv_SndStopApplicationReq(iMserv_3rd_Application_Type_t type, u32 status);

/****************************************************************************/
/*  Function  : sVendor_InitialScreen()                             */
/*--------------------------------------------------------------------------*/
/*  Scope     : Initial screen of vendor                        */
/*                                                                          */
/*                                                                          */
/*  Return    :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/ 
void sVendor_InitialScreen(void);



#endif /* __MSERVICES__ */
#endif /* __MS_TASK_HI__ */


