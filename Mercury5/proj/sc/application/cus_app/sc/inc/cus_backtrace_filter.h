/**
 *
 * @file    cus_backtrace_filter.h
 *
 * @brief   This file defines debug message filter table, the file should not be included except cus_backtrace.c.
 *
 * @author  Xavier Fan
 * @version $Id: cus_backtrace_filter.h 19556 2008-12-30 07:19:26Z roger.lai $
 *
 */

#ifndef __CUS_BACKTRACE_FILTER_H__
#define __CUS_BACKTRACE_FILTER_H__

/*--------------------------------------------------------------------------*/
/* INCLUDE FILE                                                             */
/*--------------------------------------------------------------------------*/
#include "sys_Rtk_Backtrace.h" /* This include file should not be removed */


/*--------------------------------------------------------------------------*/
/* PREPROCESSOR CONSTANT DEFINITION                                         */
/*--------------------------------------------------------------------------*/


/*--------------------------------------------------------------------------*/
/* PREPROCESSOR MACRO DEFINITION                                            */
/*--------------------------------------------------------------------------*/


/*--------------------------------------------------------------------------*/
/* TYPE DEFINITION                                                          */
/*--------------------------------------------------------------------------*/

#undef BTMSG_DECL
#define BTMSG_DECL(type) u8 type:1;

/**
 * @brief  The structure used to define the debug message arbiter table.
 */
typedef struct
{
  rtk_Exception_e expType;
 	struct BitField_t {
 		BTMSG_COL
  } isMsgDump;
} rtk_BtMsgArbiter;



/*--------------------------------------------------------------------------*/
/* GLOBAL VARIABLE DEFINITION                                               */
/*--------------------------------------------------------------------------*/

/**
 * @brief  This table is used to decide which debug info will be show in backtrace.
 *         If the rtk_BtMsgType_e modified, the table should be modified simultaneously.
 */
static  const   rtk_BtMsgArbiter arbiterTable[] =
{
/*
                                        B   M   M   M   M   M   M   M   M   T   S   M   T   T   S   S   S   H
                                        A   E   E   E   E   E   E   B   B   S   E   M   O   O   Y   Y   Y   /
                                        S   M   M   M   M   M   M   X   X   K   M   K   O   O   S   S   S   W
                                        I   |   |   |   |   |   |   |   |   |   |   I   L   L   |   |   |   |
                                        C   P   P   H   H   M   T   U   H   I   I   U   |   |   I   A   D   W
                                            O   O   E   E   U   A   S   I   N   N   S   M   T   N   R   E   A
                                            O   O   A   A   R   S   A   S   F   F   E   S   O   S   M   B   T
                                            L   L   P   P   D   K   G   T   O   O   R   G   O   E   |   U   C
      EXCEPTION-TYPE                        |   |   |   |   E   |   E   O           |       L   N   I   G   H
                                            M   U   M   U   R   U       R           D       |   C   N   |   D
                                            A   S   A   S       S       Y           E       I   E   F   I   O
                                            P   A   P   A       A                   F       N   |   O   N   G
                                                G       G       G                   I       F   I       F
                                                E       E       E                   N       O   N       O
                                                                                    E           F
                                                                                    D           O
 */
 #if defined(__RTK_OVER_R2__)
   {R2_BUS_ERROR,                      {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_DATA_PAGE_FAULT,                {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_INSTRUCTION_PAGE_FAULT,         {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_ALIGNMENT_FAULT,                {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_ILLEGAL_INSTRUCTION,            {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_DTLB_MISS,                      {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_ITLB_MISS,                      {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_UNKNOWN_VECTOR,                 {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
   {R2_DBB_ASSERT,                     {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0}},
#endif
  {RTK_NO_TIMER_AVAIL,                 {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_CLEAR_TIMER,                    {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_TASK_STATE,                 {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_TASK_NUMBER,                {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_PRIORITY,                   {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_TASK_NOT_INITIALIZED,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_TASK_ALREADY_STARTED,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_TASK_IN_NON_OPSTATE,            {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MBX_NON_ALLOWED_OPBGT,          {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_NON_ALLOWED_OPBGT,          {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_COUNTER_OVERFLOW,               {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_COUNTER_UNDERFLOW,              {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_SEM_NUMBER,                 {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_OVERFLOW,                   {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_UNDERFLOW,                  {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_TIMEOUT,                    {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_TIMER_ERROR,                {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_TIMER_USED_ERROR,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SEM_STOP_TIMER_ERROR,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_MAILBOX_NUMBER,             {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_OBJECT_OVERFLOW,                {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_POOL_ID_ERROR,                  {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_OUT_OF_MEMORY_WITH_SIZE,        {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_OUT_OF_MEMORY_WITH_POOL_ID,     {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_DESTROYED_MEMORY,               {0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_NO_MEMORY_AVAILLABLE,           {0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_NULL_PTR_RELEASE,               {0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_DESTROYED_POOL,                 {0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MEMORY_SIZE_ERROR_WITH_SIZE,    {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MEMORY_SIZE_ERROR_WITH_POOL_ID, {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_DESTROYED_CLUSTER,              {0,  1,  1,  0,  0,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_DESTROYED_HEAP,                 {0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_HEAP_RELEASE,               {0,  0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_REL_MEMGLB_FAIL,                {0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_REL_MEMORY_FAIL,                {0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_UNKNOWN_REGION,                 {0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_TIMER_PERIOD,               {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_EXTRACTION_TIMER,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MEMORY_HANDLE_FATAL,            {0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MEMORY_HANDLE_INVALID,          {0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_EMI_PROTECT_POOL_DESTROYED,     {0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_NULL_PTR_SEND,                  {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_STACK_OVERFLOW,                 {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {TASK_STACK_CORRUPT,                 {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {ISR_STACK_CORRUPT,                  {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {SUV_STACK_CORRUPT,                  {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {FIQ_STACK_CORRUPT,                  {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_NO_STARTABLE_TASK,              {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {SW_WATCHDOG_TIMEOUT,                {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {IDLE_SCHEDULE_INTERRUPT_CORRUPT,    {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {ISR_INTERRUPT_CORRUPT,              {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {SYSCALL_INTERRUPT_CORRUPT,          {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {DISABLE_INTERRUPT_TIME_OUT,         {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_MAILBOX_OVERFLOW,               {0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {MMP_COMMAND_TIMEOUT,                {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {MMI_KERNEL_FATAL_ERROR,             {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {SYSTEM_ASSERT,                      {0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {HW_WATCHDOG_TIMEOUT,                {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1}},
  /* ** Note **
   * Because Branch Zero is raised after the target reset completed, and the power-cut cased by
   * hardware timeout will not be happened, the other debug information is not correct. We suggest
   * not to modified the line of Branch Zero
   */
  {RTK_BRANCH_ZERO,                    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0}},
  {RTK_DATA_ABORT,                     {0,  0,  0,  1,  1,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  1,  1,  0}},
  {RTK_PREFETCH_ABORT,                 {0,  0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  1,  1,  0}},
  {RTK_UNDEFINED_INSTRUCTION,          {0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_BAD_MUTEX_EXCEPTION,            {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  0,  0,  0,  1,  0}},
  {RTK_SLDLM_DATA_ABORT,               {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0}},
  {RTK_SLDLM_PREFETCH_ABORT,           {0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0}},

  /* ** Note **
   * The below line is system used, don't remove or modify!!
   */
  {RTK_UNDEFINED_EXCEPTION,            {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1}}
/*
                                        B   M   M   M   M   M   M   M   M   T   S   M   T   T   S   S   S   H
                                        A   E   E   E   E   E   E   B   B   S   E   M   O   O   Y   Y   Y   /
                                        S   M   M   M   M   M   M   X   X   K   M   K   O   O   S   S   S   W
                                        I   |   |   |   |   |   |   |   |   |   |   I   L   L   |   |   |   |
                                        C   P   P   H   H   M   T   U   H   I   I   U   |   |   I   A   D   W
                                            O   O   E   E   U   A   S   I   N   N   S   M   T   N   R   E   A
                                            O   O   A   A   R   S   A   S   F   F   E   S   O   S   M   B   T
                                            L   L   P   P   D   K   G   T   O   O   R   G   O   E   |   U   C
      EXCEPTION-TYPE                        |   |   |   |   E   |   E   O           |       L   N   I   G   H
                                            M   U   M   U   R   U       R           D       |   C   N   |   D
                                            A   S   A   S       S       Y           E       I   E   F   I   O
                                            P   A   P   A       A                   F       N   |   O   N   G
                                                G       G       G                   I       F   I       F
                                                E       E       E                   N       O   N       O
                                                                                    E           F
                                                                                    D           O
*/
};

/**
 * @brief  This table is used to decide the mail box size.
 *         If the value is 0 the mailbox overflow exception will always be raised
 */
static const u8 cusMboxSize[] =
#ifdef __MSTAR_DUAL_SIM__
{
/* 50:BATT   */ 30,
/* 51:EMA    */ 60,
/* 52:MMI    */ 90,
/* 53:RIL    */ 30,
#ifdef __FEATURE_IPTV__
/* 54:       */ 120,
#else //__FEATURE_IPTV__
/* 54:       */ 30,
#endif //__FEATURE_IPTV__
/* 55:BT     */ 30,
/* 56:MSERV  */ 90,
/* 57:VOC    */ 60,
/* 58:DSR    */ 30,
/* 59:GPD    */ 30,
/* 60:       */ 30,
/* 61:       */ 30,
/* 62:       */ 30,
/* 63:       */ 30,
/* 64:       */ 30,
/* 65:ResMgr */ 60,
/* 66:FileMgr*/ 30,
/* 67:       */ 30,
/* 68:       */ 30,
/* 69:       */ 30,
/* 70:       */ 30,
/* 71:       */ 30,
/* 72:       */ 30,
/* 73:       */ 30,
/* 74:       */ 30,
/* 75:       */ 30,
/* 76:       */ 30,
/* 77:       */ 30,
/* 78:       */ 30,
/* 79:       */ 30,
/* 80        */ 30,
/* 81        */ 30,
/* 82        */ 30,
/* 83        */ 30,
/* 84        */ 30,
/* 85        */ 30,
/* 86        */ 30,
/* 87        */ 30,
/* 88        */ 30,
/* 89        */ 30,
/* 90        */ 30,
/* 91        */ 30,
/* 92        */ 30,
/* 93        */ 30,
/* 94        */ 30,
/* 95        */ 30,
/* 96        */ 30,
/* 97        */ 30,
/* 98        */ 30,
/* 99        */ 30,
/* 100       */ 30,
/* 101       */ 30,
/* 102       */ 30,
/* 103       */ 30,
/* 104       */ 60, // SD1
/* 105       */ 60, // SD2
/* 106       */ 30,
/* 107       */ 30,
/* 108       */ 30,
/* 109       */ 30,
/* 110       */ 30,
/* 111       */ 30,
/* 112       */ 30,
/* 113       */ 30,
/* 114       */ 30,
/* 115       */ 30,
/* 116       */ 30,
/* 117       */ 30,
/* 118       */ 30,
/* 119       */ 30,
/* 120       */ 30,
/* 121       */ 30,
/* 122       */ 30,
/* 123       */ 30,
/* 124       */ 30,
/* 125       */ 30,
/* 126       */ 30,
/* 127       */ 30,
/* 128       */ 60,//RTSP
/* 129       */ 60,
/* 130       */ 60,
/* 131       */ 60,
/* 132       */ 60,
/* 133       */ 60,
/* 134       */ 30,
/* 135       */ 30,
/* 136       */ 30,
/* 137       */ 30,
/* 138       */ 30,
/* 139       */ 30,
/* 140       */ 30,
/* 141       */ 30,
/* 142       */ 30,
/* 143       */ 30,
/* 144       */ 30,
/* 145       */ 30,
/* 146       */ 30,
/* 147       */ 30,
/* 148       */ 30,
/* 149       */ 30,
/* 150       */ 30,
/* 151       */ 30,
/* 152       */ 30,
/* 153       */ 30,
/* 154       */ 30,
/* 155       */ 30,
/* 156       */ 30,
/* 157       */ 30,
/* 158       */ 30,
/* 159       */ 30,
/* 160       */ 30,
/* 161       */ 30,
/* 162       */ 30,
/* 163       */ 30,
/* 164       */ 30,
/* 165       */ 30,
/* 166       */ 30,
/* 167       */ 30,
/* 168       */ 30,
/* 169       */ 30,
/* 170       */ 30,
/* 171       */ 30,
/* 172       */ 30,
/* 173       */ 30,
/* 174       */ 30,
/* 175       */ 30,
/* 176       */ 30,
/* 177       */ 30,
/* 178       */ 30,
/* 179       */ 30,
/* 180       */ 30,
/* 181       */ 30,
/* 182       */ 30,
/* 183       */ 30,
/* 184       */ 30,
/* 185       */ 30,
/* 186       */ 30,
/* 187       */ 30,
/* 188       */ 30,
/* 189       */ 30,
/* 190       */ 30,
/* 191       */ 30,
/* 192       */ 30,
/* 193       */ 30,
/* 194       */ 30,
/* 195       */ 30,
/* 196       */ 30,
/* 197       */ 30,
/* 198       */ 30,
/* 199       */ 30,
/* 200       */ 30,
/* 201       */ 30,
/* 202       */ 30,
/* 203       */ 30,
/* 204       */ 30,
/* 205       */ 30,
/* 206       */ 30,
/* 207       */ 30,
/* 208       */ 30,
/* 209       */ 30,
/* 210       */ 30,
/* 211       */ 30,
/* 212       */ 30,
/* 213       */ 30,
/* 214       */ 30,
/* 215       */ 30,
/* 216       */ 30,
/* 217       */ 30,
/* 218       */ 30,
/* 219       */ 30,
/* 220       */ 30,
/* 221       */ 30,
/* 222       */ 30,
/* 223       */ 30,
/* 224       */ 30,
/* 225       */ 30,
/* 226       */ 30,
/* 227       */ 30,
/* 228       */ 30,
/* 229       */ 30,
/* 230       */ 30,
/* 231       */ 30,
/* 232       */ 30,
/* 233       */ 30,
/* 234       */ 30,
/* 235       */ 30,
/* 236       */ 30,
/* 237       */ 30,
/* 238       */ 30,
/* 239       */ 30,
/* 240       */ 30,
/* 241       */ 30,
/* 242       */ 30,
/* 243       */ 30,
/* 244       */ 30,
/* 245       */ 30,
/* 246       */ 30,
/* 247       */ 30,
/* 248       */ 30,
/* 249       */ 30
};
#else
{
/* 40:BATT   */ 30,
/* 41:EMA    */ 60,
/* 42:MMI    */ 90,
/* 43:RIL    */ 30,
#ifdef __FEATURE_IPTV__
/* 44:       */ 120,
#else //__FEATURE_IPTV__
/* 44:       */ 30,
#endif //__FEATURE_IPTV__

/* 45:BT     */ 30,
/* 46:MSERV  */ 90,
/* 47:VOC    */ 60,
/* 48:DSR    */ 30,
/* 49:GPD    */ 30,
/* 50:       */ 30,
/* 51:       */ 30,
/* 52:       */ 30,
/* 53:       */ 30,
/* 54:       */ 30,
/* 55:       */ 30,
/* 56:       */ 30,
/* 57:       */ 30,
/* 58:       */ 30,
/* 59:       */ 30,
/* 60:       */ 30,
/* 61:       */ 30,
/* 62:       */ 30,
/* 63:       */ 30,
/* 64:       */ 30,
/* 65:       */ 30,
/* 66:       */ 30,
/* 67:       */ 30,
/* 68:       */ 30,
/* 69:       */ 30,
/* 70:       */ 30,
/* 71:       */ 30,
/* 72:       */ 30,
/* 73:       */ 30,
/* 74:       */ 30,
/* 75:       */ 30,
/* 76:       */ 30,
/* 77:       */ 30,
/* 78:       */ 30,
/* 79:       */ 30,
/* 80        */ 30,
/* 81        */ 30,
/* 82        */ 30,
/* 83        */ 30,
/* 84        */ 30,
/* 85        */ 30,
/* 86        */ 30,
/* 87        */ 30,
/* 88        */ 30,
/* 89        */ 30,
/* 90        */ 30,
/* 91        */ 30,
/* 92        */ 30,
/* 93        */ 30,
/* 94        */ 30,
/* 95        */ 30,
/* 96        */ 30,
/* 97        */ 30,
/* 98        */ 30,
/* 99        */ 30,
/* 100       */ 30,
/* 101       */ 30,
/* 102       */ 30,
/* 103       */ 30,
/* 104       */ 60, // SD1
/* 105       */ 60, // SD2
/* 106       */ 30,
/* 107       */ 30,
/* 108       */ 30,
/* 109       */ 30,
/* 110       */ 30,
/* 111       */ 30,
/* 112       */ 30,
/* 113       */ 30,
/* 114       */ 30,
/* 115       */ 30,
/* 116       */ 30,
/* 117       */ 30,
/* 118       */ 30,
/* 119       */ 30,
/* 120       */ 30,
/* 121       */ 30,
/* 122       */ 30,
/* 123       */ 30,
/* 124       */ 30,
/* 125       */ 30,
/* 126       */ 30,
/* 127       */ 30,
/* 128       */ 60,//RTSP
/* 129       */ 60,
/* 130       */ 60,
/* 131       */ 60,
/* 132       */ 60,
/* 133       */ 60,
/* 134       */ 30,
/* 135       */ 30,
/* 136       */ 30,
/* 137       */ 30,
/* 138       */ 30,
/* 139       */ 30,
/* 140       */ 30,
/* 141       */ 30,
/* 142       */ 30,
/* 143       */ 30,
/* 144       */ 30,
/* 145       */ 30,
/* 146       */ 30,
/* 147       */ 30,
/* 148       */ 30,
/* 149       */ 30,
/* 150       */ 30,
/* 151       */ 30,
/* 152       */ 30,
/* 153       */ 30,
/* 154       */ 30,
/* 155       */ 30,
/* 156       */ 30,
/* 157       */ 30,
/* 158       */ 30,
/* 159       */ 30,
/* 160       */ 30,
/* 161       */ 30,
/* 162       */ 30,
/* 163       */ 30,
/* 164       */ 30,
/* 165       */ 30,
/* 166       */ 30,
/* 167       */ 30,
/* 168       */ 30,
/* 169       */ 30,
/* 170       */ 30,
/* 171       */ 30,
/* 172       */ 30,
/* 173       */ 30,
/* 174       */ 30,
/* 175       */ 30,
/* 176       */ 30,
/* 177       */ 30,
/* 178       */ 30,
/* 179       */ 30,
/* 180       */ 30,
/* 181       */ 30,
/* 182       */ 30,
/* 183       */ 30,
/* 184       */ 30,
/* 185       */ 30,
/* 186       */ 30,
/* 187       */ 30,
/* 188       */ 30,
/* 189       */ 30,
/* 190       */ 30,
/* 191       */ 30,
/* 192       */ 30,
/* 193       */ 30,
/* 194       */ 30,
/* 195       */ 30,
/* 196       */ 30,
/* 197       */ 30,
/* 198       */ 30,
/* 199       */ 30,
/* 200       */ 30,
/* 201       */ 30,
/* 202       */ 30,
/* 203       */ 30,
/* 204       */ 30,
/* 205       */ 30,
/* 206       */ 30,
/* 207       */ 30,
/* 208       */ 30,
/* 209       */ 30,
/* 210       */ 30,
/* 211       */ 30,
/* 212       */ 30,
/* 213       */ 30,
/* 214       */ 30,
/* 215       */ 30,
/* 216       */ 30,
/* 217       */ 30,
/* 218       */ 30,
/* 219       */ 30,
/* 220       */ 30,
/* 221       */ 30,
/* 222       */ 30,
/* 223       */ 30,
/* 224       */ 30,
/* 225       */ 30,
/* 226       */ 30,
/* 227       */ 30,
/* 228       */ 30,
/* 229       */ 30,
/* 230       */ 30,
/* 231       */ 30,
/* 232       */ 30,
/* 233       */ 30,
/* 234       */ 30,
/* 235       */ 30,
/* 236       */ 30,
/* 237       */ 30,
/* 238       */ 30,
/* 239       */ 30,
/* 240       */ 30,
/* 241       */ 30,
/* 242       */ 30,
/* 243       */ 30,
/* 244       */ 30,
/* 245       */ 30,
/* 246       */ 30,
/* 247       */ 30,
/* 248       */ 30,
/* 249       */ 30
};
#endif

#endif // __CUS_BACKTRACE_FILTER_H__

