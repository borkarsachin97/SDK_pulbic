/**
 * @file    mmi_common_inttbl.h
 * @brief   The document describes the interrupt table of applets,
 * this file will be included both in mmi_common_intmgr.h and applet's .c
 *
 *
 * @author  mark.yang@mstarsemi.com
 * @version $Id: mmi_common_inttbl.h 37336 2009-08-06 08:57:11Z christoph.kuo $
 */

#ifndef __MMI_COMMON_INTTBL_H__
#define __MMI_COMMON_INTTBL_H__

#include "mmi_mae_common_def.h"
#include "mmi_class.h"
#include "mmi_common_intmgr.h"

/*#ifndef __MMI_ALLOW_INTERRUPT__
#define __MMI_ALLOW_INTERRUPT__
#endif*/
/*-------------------------------------------------------------------------*/

// Notes: Here descibe the AP priority which is triggered by sheduler service(alarm event).
// Auto Power-On > Alarm > To-Do > Calendar > Auto Power-Off > FM Schedule Record/Play
// AP Class ID: Dialog_Top App is for Auto Power-On
//              Dialog_Alarm App is for Alarm, To-Do, Calendar
//              Off App is for Auto Power-Off
//              FMRadio App is for FM Schedule Record/Playing

/**
 * Here lists all predefined applet and their class id which will generate interruption
 * The Max. number of applet supported here is 32.
 * Note: INTAPP_MAPPING is only used in mmi_common_intmgr.c
 */
#define INTAPP_NONE			(0)
#define INTAPP_CCAPP		(1 << 0)
#define INTAPP_CALENDARAPP	(1 << 1)
#define INTAPP_CAMAPP		(1 << 2)
#define INTAPP_SECAPP		(1 << 3)
#define INTAPP_IDLEAPP		(1 << 4)
#define INTAPP_OFFAPP		(1 << 5)
#define INTAPP_CCMTA		(1 << 6)
#define INTAPP_USSDAPP		(1 << 7)
#define INTAPP_DIALOGAPP	(1 << 8)
#define INTAPP_STKAPP		(1 << 9)
#define INTAPP_STKAPP2		(1 << 10)
#define INTAPP_BTNOTIFY		(1 << 11)
#define INTAPP_BTAP			(1 << 12)
#define INTAPP_KEYGUARDAPP	(1 << 13)
//#ifdef __WAP_MMI_CDWAP__
#define INTAPP_CDWAPAPP		(1 << 14)
#define INTAPP_USBAPP		(1 << 15)
#define INTAPP_COUNTDOWN	(1 << 16)
#define INTAPP_JAVAAMSAPP   (1 << 17)
#define INTAPP_JAVAAPP      (1 << 18)
#define INTAPP_SWITCHMODEAPP	(1 << 19)
//#endif//__WAP_MMI_CDWAP__
#define INTAPP_DIALOGAPP_TOP	(1 << 20)
#define INTAPP_DIALOGAPP_ALARM	(1 << 21)
#define INTAPP_FMRADIOAPP       (1 << 22)
#define INTAPP_SCREENSAVER	    (1 << 23)
#define INTAPP_CHECKDISKAPP	(1 << 24)
#define INTAPP_EMAPP	    (1 << 25)
#define INTAPP_SGUPDATE	    (1 << 26)
#define INTAPP_PRIVATEPROTECTPWAPP	(1 << 27)
#define INTAPP_SECREMOTECONTROLAPP	(1 << 28)

#define INTAPP_RESERVED     (1 << 31)
#define INTAPP_ALL			(0xFFFFFFFF)

#ifdef __MMI_COMMON_INTMGR_C__

//The sequence in this table must be matched the above definition.
//The maximum number of the class id in this table is 31, not 32.
//because the bit-31(INTAPP_RESERVED) is used for checking allow or deny action.
static const MAE_ClsId INTAPP_MAPPING[] =
{
	CLSID_CCAPP,
	CLSID_CALENDARAPP,
	CLSID_CAMAPP,
	CLSID_SECAPP,
#ifdef __UI_STYLE_MMI_ANDROID_IDLE__
    CLSID_ANDROID_IDLEAPP,
#else
	CLSID_IDLEAPP,
#endif
	CLSID_OFFAPP,
	CLSID_CCMTA,
	CLSID_USSDAPP,
	CLSID_DIALOGAPP,
	CLSID_STKAPP,
	CLSID_STKAPP2,
	CLSID_BTNOTIFYAPP,
	CLSID_BTAPP,
#ifdef __UI_STYLE_MMI_ANDROID_KEYGUARD__
	CLSID_ANDROID_KEYGUARDAPP,
#else
	CLSID_KEYGUARDAPP,
#endif
//#ifdef __WAP_MMI_CDWAP__
	CLSID_CDWAPAPP,
	CLSID_USBAPP,
	CLSID_COUNTDOWNTIMER,
	CLSID_JAVAAMSAPP,
	CLSID_JAVAAPP,
//#endif//__WAP_MMI_CDWAP__
	CLSID_SWITCHMODE,
        CLSID_DIALOGAPP_TOP,
        CLSID_DIALOGAPP_ALARM,
	CLSID_FMRADIOAPP,
	CLSID_SCREENSAVERAPP,
	CLSID_CHECKDISKAPP,
	CLSID_EMAPP,
	CLSID_SOHUUPDATERAPP,
    CLSID_PRIVATEPROTECTPW,
    CLSID_SECREMOTECONTROLAPP,
    /* Add for New Feature #437 */
    CLSID_DIALOGAPP_BTSTATUS,
    CLSID_LABYRINTHGAME,
};
#endif
/*-------------------------------------------------------------------------*/
/**
 * Use MAKE_INTAPP_TABLE(name of applet) and INTAPP_LEVEL(level name, type, apps)
 * to define interrupt table of applet,
 * every row of INTAPP_LEVEL indicate a level for applet, the first parameter is the name of this level
 * the name will be generated as a enum. the 2nd parameter is the type of this level which indicate
 * if the application listed in 3rd parameter can or cannot interrupt this applet.
 * e.g.
 * MAKE_INTAPP_TABLE(DEMO_CAL) {
 *	INTAPP_LEVEL(DEMO_CAL_INIT,       LEVEL_DENY,  INTAPP_NONE),
 *	INTAPP_LEVEL(DEMO_CAL_IDLE,       LEVEL_ALLOW, INTAPP_CCAPP | INTAPP_CALENDARAPP),
 *	INTAPP_LEVEL(DEMO_CAL_PROCESSING, LEVEL_DENY,  INTAPP_CAMAPP | INTAPP_DEMO_SCR),
 *	INTAPP_LEVEL(DEMO_CAL_LOCKED,     LEVEL_ALLOW, INTAPP_NONE)
 * };
 *
 * DEMO_CAL has four level, the first level is DEMO_CAL_INIT and DEMO_CAL do not deny any applet for interruption
 * (that means DEMO_CAL allow interruption from all other applet at this level).
 * And the second level is DEMO_CAL_IDLE, the applet will only allow CCAPP and CALENDARAPP to interrupt it and deny
 * all other applets.
 * The 3rd level is DEMO_CAL_PROCESSING, which allows all interruptions except from CAMAPP and DEMO_SCR.
 * The last level is DEMO_CAL_LOCKED, this level deny all interruptions.
 *
 * Tips:
 *  LEVEL_ALLOW, INTAPP_NONE = LEVEL_DENY, INTAPP_ALL
 *
 * We recommend you add the applet name as the level name prefix. You can assign the level to a suitable varriable
 * (e.g. u8 level)
 *
 */

/* Common interrupt table that can be used in all applets */
MAKE_INTAPP_TABLE(COMMON) {
	INTAPP_LEVEL(COMMON_DENYALL,       LEVEL_DENY,  INTAPP_ALL),
	INTAPP_LEVEL(COMMON_ALLOWALL,      LEVEL_ALLOW, INTAPP_ALL)
};


/* BT Enhancement */
MAKE_INTAPP_TABLE(BTNOTIFYAPP) {
    INTAPP_LEVEL(BTNOTIFYAPP_CC,               LEVEL_DENY,  INTAPP_CCAPP),    
    INTAPP_LEVEL(BTNOTIFYAPP_ALLOWALL,         LEVEL_ALLOW, INTAPP_ALL)
};


/* Interrupt table for ONAPP */
MAKE_INTAPP_TABLE(ONAPP) {
	INTAPP_LEVEL(ONAPP_IDLE,     LEVEL_ALLOW,  INTAPP_IDLEAPP|INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(ONAPP_CALENDAR,     LEVEL_ALLOW,  INTAPP_DIALOGAPP_ALARM|INTAPP_DIALOGAPP_TOP|INTAPP_FMRADIOAPP),
	INTAPP_LEVEL(ONAPP_SECAPP,     LEVEL_ALLOW,  INTAPP_SECAPP|INTAPP_DIALOGAPP_TOP), //no use
	INTAPP_LEVEL(ONAPP_CCAPP,     LEVEL_ALLOW,  INTAPP_CCAPP|INTAPP_CCMTA|INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(ONAPP_OFFAPP,     LEVEL_ALLOW,  INTAPP_OFFAPP|INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(ONAPP_EMAPP,     LEVEL_ALLOW,  INTAPP_EMAPP),
	INTAPP_LEVEL(ONAPP_DENYALL,     LEVEL_DENY,  INTAPP_ALL)
};

/* Interrupt table for OFFAPP */
MAKE_INTAPP_TABLE(OFFAPP) {
	INTAPP_LEVEL(OFFAPP_ACTIVATE_SIM,     LEVEL_ALLOW,  INTAPP_SECAPP|INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(OFFAPP_POWEROFF,     LEVEL_DENY,  INTAPP_ALL),
	INTAPP_LEVEL(OFFAPP_ALLOWALL,     LEVEL_DENY,  INTAPP_FMRADIOAPP)
};

MAKE_INTAPP_TABLE(SWITCHMODEAPP){
	INTAPP_LEVEL(SWITCHMODEAPP_ACTIVATE_SIM,     LEVEL_ALLOW,  INTAPP_SECAPP|INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(SWITCHMODEAPP_ALLOWALL,     LEVEL_ALLOW,  INTAPP_ALL)
};

/* Interrupt table for KEYGUARDAPP */
MAKE_INTAPP_TABLE(KEYGUARDAPP) {
	INTAPP_LEVEL(KEYGUARDAPP_DIALOG, LEVEL_DENY, INTAPP_DIALOGAPP),
#ifdef __APP_MMI_SOHU_UPDATER__
	INTAPP_LEVEL(KEYGUARDAPP_CCAPP, LEVEL_ALLOW,  INTAPP_BTNOTIFY|INTAPP_CCAPP|INTAPP_CCMTA|INTAPP_OFFAPP|INTAPP_USBAPP|INTAPP_DIALOGAPP_ALARM|INTAPP_DIALOGAPP_TOP|INTAPP_SCREENSAVER|INTAPP_COUNTDOWN|INTAPP_EMAPP|INTAPP_SGUPDATE|INTAPP_PRIVATEPROTECTPWAPP), //INTAPP_OFFAPP is for Auto power off dialog.
#else
	INTAPP_LEVEL(KEYGUARDAPP_CCAPP, LEVEL_ALLOW,  INTAPP_BTNOTIFY|INTAPP_CCAPP|INTAPP_CCMTA|INTAPP_OFFAPP|INTAPP_USBAPP|INTAPP_DIALOGAPP_ALARM|INTAPP_DIALOGAPP_TOP|INTAPP_SCREENSAVER|INTAPP_COUNTDOWN|INTAPP_EMAPP|INTAPP_PRIVATEPROTECTPWAPP), //INTAPP_OFFAPP is for Auto power off dialog.
#endif
};

#ifdef __APP_MMI_SCREENSAVER__
/* Interrupt table for SCREENSAVERAPP */
MAKE_INTAPP_TABLE(SCREENSAVERAPP) {
	INTAPP_LEVEL(SCREENSAVER_IDLE, LEVEL_DENY, INTAPP_KEYGUARDAPP) //Allow all interrupt except INTAPP_KEYGUARDAPP
};
#endif

/* Interrupt table for CCMTA */

/* BT Enhancement */
MAKE_INTAPP_TABLE(CCMTA) {
	INTAPP_LEVEL(CCMTA_DENYALL,    LEVEL_ALLOW,  INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_DIALOGAPP_TOP | INTAPP_CCAPP),
    INTAPP_LEVEL(CCMTA_POWEROFF,   LEVEL_ALLOW,  INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_OFFAPP | INTAPP_DIALOGAPP_TOP | INTAPP_CCAPP)
};



/* Interrupt table for CCAPP */
MAKE_INTAPP_TABLE(CCAPP) {
#ifdef    __MMI_ALLOW_INTERRUPT__
	INTAPP_LEVEL(CCAPP_PROCESSING,    LEVEL_ALLOW,  INTAPP_ALL),
	INTAPP_LEVEL(CCAPP_POWEROFF,    LEVEL_ALLOW,  INTAPP_ALL)
#else
	INTAPP_LEVEL(CCAPP_PROCESSING,    LEVEL_ALLOW,  INTAPP_CCMTA | INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_BTNOTIFY | INTAPP_DIALOGAPP_TOP | INTAPP_PRIVATEPROTECTPWAPP | INTAPP_DIALOGAPP_ALARM),
	INTAPP_LEVEL(CCAPP_POWEROFF,    LEVEL_ALLOW,  INTAPP_CCMTA | INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_BTNOTIFY | INTAPP_OFFAPP | INTAPP_DIALOGAPP_TOP |INTAPP_DIALOGAPP_ALARM)
#endif
};

/* Interrupt table for SECAPP */
MAKE_INTAPP_TABLE(SECAPP) {
	INTAPP_LEVEL(SECAPP_POWERON,    LEVEL_ALLOW,  INTAPP_CCMTA | INTAPP_OFFAPP | INTAPP_DIALOGAPP_TOP),
	INTAPP_LEVEL(SECAPP_ALLOWALL,    LEVEL_ALLOW,  INTAPP_ALL)
};
MAKE_INTAPP_TABLE(SECREMOTECONTROLAPP) {
	INTAPP_LEVEL(SECREMOTECONTROLAPP_POWEROFF,    LEVEL_ALLOW,  INTAPP_OFFAPP)
};

/* Interrupt table for BTAPP */
MAKE_INTAPP_TABLE(BTAPP) {
	INTAPP_LEVEL(BTAPP_SENDFILE,    LEVEL_DENY,  INTAPP_DIALOGAPP)
};

//#ifdef __WAP_MMI_CDWAP__

/* Interrupt table for CDWAP APP */
MAKE_INTAPP_TABLE(CDWAPAPP) {
	INTAPP_LEVEL(CDWAPAPP_ALLOWALL,    LEVEL_ALLOW,  INTAPP_ALL),
	INTAPP_LEVEL(CDWAPAPP_DENYALL,    LEVEL_DENY,  INTAPP_ALL),
	INTAPP_LEVEL(CDWAPAPP_DOWNLOAD_ALLOW,    LEVEL_ALLOW,  INTAPP_CCMTA|INTAPP_DIALOGAPP_TOP),
#ifdef __EVTCENTERSRV_FLUSH_APPSTACK__
	INTAPP_LEVEL(CDWAPAPP_NORMAL,    LEVEL_ALLOW,  INTAPP_DIALOGAPP|INTAPP_DIALOGAPP_TOP|INTAPP_OFFAPP|INTAPP_USBAPP |
													INTAPP_CCMTA | INTAPP_BTNOTIFY | INTAPP_COUNTDOWN)
#else
	INTAPP_LEVEL(CDWAPAPP_NORMAL,    LEVEL_ALLOW,INTAPP_ALL)
#endif
};
//#endif//__WAP_MMI_CDWAP__

/* Interrupt table for USBAPP */
MAKE_INTAPP_TABLE(USBAPP) {
	INTAPP_LEVEL(USBAPP_LOCK_ALLOW, LEVEL_ALLOW,  INTAPP_CCMTA|INTAPP_CCAPP|INTAPP_DIALOGAPP_TOP)
    //else allow all
};

/* Interrupt table for DIALOGAPP */
MAKE_INTAPP_TABLE(DIALOGAPP) {
	INTAPP_LEVEL(DIALOGAPP_IDLE, LEVEL_DENY,  INTAPP_SCREENSAVER)
};

/* Interrupt table for JAVAAMSAPP */
MAKE_INTAPP_TABLE(JAVAAMSAPP) {
	INTAPP_LEVEL(JAVAAMSAPP_ALLOWALL, LEVEL_ALLOW,  INTAPP_ALL),
	INTAPP_LEVEL(JAVAAMSAPP_INSTALL, LEVEL_DENY,  INTAPP_JAVAAPP | INTAPP_USBAPP)
};

/* Interrupt table for VIDEOTELEPHONYAPP */
MAKE_INTAPP_TABLE(VIDEOTELEPHONYAPP) {
#ifdef    __MMI_ALLOW_INTERRUPT__
	INTAPP_LEVEL(VIDEOTELEPHONYAPP_PROCESSING,    LEVEL_ALLOW,  INTAPP_ALL),
	INTAPP_LEVEL(VIDEOTELEPHONYAPP_POWEROFF,    LEVEL_ALLOW,  INTAPP_ALL)
#else
	INTAPP_LEVEL(VIDEOTELEPHONYAPP_PROCESSING,    LEVEL_ALLOW,  INTAPP_CCMTA | INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_BTNOTIFY),
	INTAPP_LEVEL(VIDEOTELEPHONYAPP_POWEROFF,    LEVEL_ALLOW,  INTAPP_CCMTA | INTAPP_USSDAPP | INTAPP_STKAPP | INTAPP_STKAPP2 | INTAPP_BTNOTIFY | INTAPP_OFFAPP)
#endif
};

/* Interrupt table for DIALOGAPP_ALARM */
MAKE_INTAPP_TABLE(DIALOGAPP_ALARM) {
#ifdef  __APP_MMI_SCREENSAVER__
    INTAPP_LEVEL(DIALOGAPP_ALARM_DENY_DIALOGAPP, LEVEL_DENY,  INTAPP_DIALOGAPP|INTAPP_KEYGUARDAPP|INTAPP_SCREENSAVER|INTAPP_FMRADIOAPP|INTAPP_OFFAPP)
#else
    INTAPP_LEVEL(DIALOGAPP_ALARM_DENY_DIALOGAPP, LEVEL_DENY,  INTAPP_DIALOGAPP|INTAPP_KEYGUARDAPP|INTAPP_FMRADIOAPP|INTAPP_OFFAPP)
#endif
};

/* Interrupt table for DIALOGAPP_TOP */
MAKE_INTAPP_TABLE(DIALOGAPP_TOP) {
    INTAPP_LEVEL(DIALOGAPP_TOP_ALLOWALL, LEVEL_ALLOW,  INTAPP_ALL),
    INTAPP_LEVEL(DIALOGAPP_TOP_AUTOPOWERON, LEVEL_DENY, INTAPP_DIALOGAPP_ALARM | INTAPP_FMRADIOAPP)
};

/* Interrupt table for CALIBRATIONAPP */
MAKE_INTAPP_TABLE(CALIBRATIONAPP) {
	INTAPP_LEVEL(CALIBRATIONAPP_NORMAL, LEVEL_DENY,  INTAPP_SCREENSAVER|INTAPP_KEYGUARDAPP)
};

/* Interrupt table for CHECKDISKAPP */
MAKE_INTAPP_TABLE(CHECKDISKAPP) {
	INTAPP_LEVEL(CHECKDISKAPP_NORMAL, LEVEL_ALLOW, INTAPP_ALL),
    INTAPP_LEVEL(CHECKDISKAPP_CHECKDISK_LOCK_ALLOW, LEVEL_DENY,  INTAPP_BTNOTIFY|INTAPP_JAVAAPP|INTAPP_USBAPP|INTAPP_SCREENSAVER|INTAPP_KEYGUARDAPP),
	INTAPP_LEVEL(CHECKDISKAPP_FORMAT_LOCK_ALLOW, LEVEL_DENY,  INTAPP_BTNOTIFY|INTAPP_JAVAAPP|INTAPP_USBAPP|INTAPP_OFFAPP|INTAPP_SCREENSAVER|INTAPP_KEYGUARDAPP)
	//else allow all
};
/*-------------------------------------------------------------------------*/

#endif /* __MMI_COMMON_INTTBL_H__ */
