/**
 * @file mmi_mae_rfidreader.h
 *
 * Service without using State Machine  - rfidreader
 * Generated by AP Designer v0.14, 2007-28-09 10:05
 *
 * Class Id: CLSID_rfidreader
 * Interface Id: IID_rfidreader
 *
 * @version $Id: mmi_mae_rfidreader.h 1 2009-01-02 07:44:58Z kenny.wu $
 */

#ifdef __RFID__

#ifndef __MMI_MAE_RFIDREADER_H__
#define __MMI_MAE_RFIDREADER_H__

#include "mmi_mae_common_def.h"
#include "mmi_mae_handler.h"
#include "mmi_mae_class.h"
#include "mdl_rfid_msg.h"
#include "esl_rfid_itf.h"

// Constants definition

// Enumeration definition

// Callback data definition
typedef struct
{
	MAE_EventId			EvtCode;
	esl_RFID_ErrCode_e	eErrCode;
	esl_RFID_Info_t		tRfidInfo;
} MAERfidReaderCallbackData_t;

// Callback function definition
typedef void (*PFNRFIDREADERCALLBACK)(void *, MAERfidReaderCallbackData_t *);

/**
 * IRfidReader Interfaces
 */
#define INHERIT_IRFIDREADER(IName) \
	INHERIT_IHandler(IName); \
	MAE_Ret		(*Register)				(IName *, void *, PFNRFIDREADERCALLBACK); \
	MAE_Ret		(*UnRegister)				(IName *, void *); \
	MAE_Ret		(*Cmd)				(IName *, void *, esl_RFID_driver_Req_t *)

DEFINE_INTERFACE(IRFIDREADER);

#define IRfidReader_QueryInterface(pICntlr, id, pp, po)			GET_FUNCTBL((pICntlr), IRFIDREADER)->QueryInterface(pICntlr, id, pp, po)
#define IRfidReader_HandleEvent(pICntlr, e, p1, p2)				GET_FUNCTBL((pICntlr), IRFIDREADER)->HandleEvent(pICntlr, e, p1, p2)
#define IRfidReader_SetHandler(pICntlr, pHd)					GET_FUNCTBL((pICntlr), IRFIDREADER)->SetHandler(pICntlr, pHd)
#define IRfidReader_Register(pICntlr, p1, p2)					GET_FUNCTBL((pICntlr), IRFIDREADER)->Register(pICntlr, p1, p2)
#define IRfidReader_UnRegister(pICntlr, p1)					GET_FUNCTBL((pICntlr), IRFIDREADER)->UnRegister(pICntlr, p1)
#define IRfidReader_Cmd(pICntlr, p1, p2)					GET_FUNCTBL((pICntlr), IRFIDREADER)->Cmd(pICntlr, p1, p2)


/**
 * Functions
 */
void RfidReader_Init(void);

MAE_Ret MAERfidReader_New(MAE_ClsId id, void **ppObj);

/*-------------------------------------------------------------------------*/
/* Epilogue */
/* User Code Begin */
typedef struct Mae_Rfid_Cmd_Req_s
{
	esl_RFID_Cb_t    *pRfidCb;
	esl_RFID_driver_Req_t Request;
}Mae_Rfid_Cmd_Req_t;

typedef struct Mae_Rfid_Rsp_s
{
	u32						UserData;
	esl_RFID_ErrCode_e		eErrCode;
	esl_RFID_Info_t 		tRFIDInfo;
} Mae_Rfid_Rsp_t;

typedef struct Mae_Rfid_Msg_Body_s
{
	Mae_Rfid_Cmd_Req_t	Reader_Req;
	Mae_Rfid_Rsp_t	Reader_Rsp;	//RFID handset
}Mae_Rfid_Msg_Body_t;

typedef struct Mae_Rfid_Msg_Header_s
{
    u8  MbxSrc;
    u8  ModuleID;
    u16  MbxDst;
    s16  Length;
    u16  TypMsg;
} Mae_Rfid_Msg_Header_t;

/* Structure of the Message */
typedef struct Mae_Rfid_Msg_s
{
    Mae_Rfid_Msg_Header_t   	Header;
    Mae_Rfid_Msg_Body_t  		Body;
} Mae_Rfid_Msg_t;

/* User Code End */
/*-------------------------------------------------------------------------*/
#endif /* __MMI_MAE_RFIDREADER_H__ */

#endif	//__RFID__
