/**
* @file mmi_clsrv.h
*
* Service without using State Machine - CLSRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_CLSRV
* Interface Id: IID_CLSRV
*
* @version $Id$
*/
#ifndef __MMI_CLSRV_H__
#define __MMI_CLSRV_H__

/*-------------------------------------------------------------------------*/
#include "mmi_mae_common_def.h"
#include "mmi_mae_applet.h"
#include "mmi_mae_class.h"
/*-------------------------------------------------------------------------*/
/* Foreword */
/* User Code Begin */

#include "mmi_cus_clsrv.h"
#include "mmi_accessorysrv.h"

#ifndef __CALLER_LOCATION_USE_STATIC_DB__
#include "mmi_common_storage_mgr.h"
#include "mmi_mae_common_def.h"
#include "mmi_mae_helper.h"
#endif

/* User Code End */
/*-------------------------------------------------------------------------*/
#ifndef CL_ZONEID_UNKNOW
#define CL_ZONEID_UNKNOW 	0
#endif

#define CL_MAX_SEGMENT_LEN 	7
#define CL_MAX_LEVEL_NUM 	8
#define MAX_CALLER_LOCATION_SIZE 20

/*String ID*/
enum CLSRV_RESULT_TAG
{
    CLSRV_RESULT_UNKNOW,
    CLSRV_RESULT_NO_TCARD,
    CLSRV_RESULT_NOT_FOUND_FILE,
    CLSRV_RESULT_SUCCESS,
    CLSRV_RESULT_FAILED,
    CLSRV_RESULT_NOT_SUPPORT_LANG,
};

typedef enum
{
	CLSRV_STROAGE_TYPE_FILE,
	CLSRV_STROAGE_TYPE_STATIC
} CLSRV_StroageType_e;

typedef struct
{
	CLSRV_StroageType_e	eStroageType;
	boolean bIsStorageAvailable;
	boolean bIsDbFileExist;
	ACCDeviceType_e eDbFileLocation;
} ClSrvStatus_t;

/**
 * ICLSRV Interfaces
 */
#define INHERIT_ICLSRV(IName) \
    INHERIT_IHandler(IName); \
	MAE_WChar *	(*GetZoneName)   ( IName * , s8* codestr, u32 * msgidOut);\
	MAE_Ret     (*GetZoneNameEx) ( IName * , s8* pCodestr, MAE_WChar **pString);\
    MAE_Ret     (*GetDbFileStatus)     ( IName *, ClSrvStatus_t *pStatus )
DEFINE_INTERFACE(ICLSRV);


#define ICLSRV_QueryInterface(pICntlr, id, pp, po) GET_FUNCTBL((pICntlr), ICLSRV)->QueryInterface(pICntlr, id, pp, po)
#define ICLSRV_HandleEvent(pICntlr, e, p1, p2)     GET_FUNCTBL((pICntlr), ICLSRV)->HandleEvent(pICntlr, e, p1, p2)
/**
* @brief: Get Zone name by number
* @param[in]  pICLSRV  Pointer to the pICLSRV interface
* @param[in]  codestr  Pointer to the search number buffer
* @param[in]  msgidOut Pointer to the _CLSRV_TEXTID_TAG
* @return     caller location
*/
#define ICLSRV_GetZoneName(pICntlr, p1, p2)        GET_FUNCTBL((pICntlr), ICLSRV)->GetZoneName( pICntlr, p1, p2)

/**
* @brief: Get Zone name by number Ex
* @param[in]  pICLSRV  Pointer to the pICLSRV interface
* @param[in]  codestr  Pointer to the search number buffer
* @param[out] pString Pointer to the search return string

* @return MAE_RET_SUCCESS			If successful.
* @return MAE_RET_FAILED				If an error happen.
* @return MAE_RET_NOT_SUPPORT		If not support this feature
*/
#define ICLSRV_GetZoneNameEx(pICntlr, p1, p2)        GET_FUNCTBL((pICntlr), ICLSRV)->GetZoneNameEx( pICntlr, p1, p2)

/**
* @brief: Get CLSRV Status
* @param[in]  pICLSRV  Pointer to the pICLSRV interface
* @param[out]  pStatus  Pointer to ClSrvStatus_t structure to get status

* @return MAE_RET_SUCCESS			If successful.
* @return MAE_RET_FAILED				If an error happen.
* @return MAE_RET_NOT_SUPPORT		If not support this feature
*/
#define ICLSRV_GetDbFileStatus(pICntlr, p1)        GET_FUNCTBL((pICntlr), ICLSRV)->GetDbFileStatus( pICntlr, p1)


/**
 * Functions
 */

void CLSRV_Init(void);

MAE_Ret CLSRV_New(MAE_ClsId id, void **ppObj);

/*-------------------------------------------------------------------------*/
/* Epilogue */
/* User Code Begin */

/* User Code End */
/*-------------------------------------------------------------------------*/
#endif /* __MMI_CLSRV_H__ */
