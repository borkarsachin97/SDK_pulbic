/**
* @file mmi_atsyncsrv.h
*
* State Machine Service - ATSYNCSRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_ATSYNCSRV
*
*
* @version $Id: mmi_atsyncsrv.h 32684 2009-06-05 08:15:35Z johnson.yeh $
*/
#ifndef __MMI_ATSYNCSRV_H__
#define __MMI_ATSYNCSRV_H__

#include "mmi_mae_common_def.h"
#include "mmi_mae_applet.h"
#include "mmi_mae_class.h"
#include "mmi_filemgr.h"

/*--------------- PART 0. Include -----------------*/
#include "mmi_common_sms.h"
/*--------------- PART I. Type define -----------------*/

//--------------------------------
// A. return code
//--------------------------------
enum
{
    ATSYNCSRV_START_SUCCESS,            /**< Function complete successfully */
    ATSYNCSRV_START_FAILED              /**< Function common fail */
};
typedef u32 ATSYNC_START_RESULT_e;


//-------------------------------
// B. enum
//-------------------------------
/* General */
enum
{
    ITEMTYPE_VALUE = 0,
    ITEMTYPE_INDEX_VALUE,
};
typedef u8 ATSYNCSRV_ItemType_e;

enum
{
    GROUP_NONE = 0,
    GROUP_NOTEPAD = 1,
    GROUP_CALENDAR,
    GROUP_TO_DO_LIST,
};
typedef u8 ATSYNCSRV_Group_e;

enum
{
    ITEM_VALUE_TYPE_NUMBER = 0,
    ITEM_VALUE_TYPE_STRING,
    ITEM_VALUE_TYPE_NO_COLON_STRING,
};
typedef u8 ATSYNCSRV_ItemValueType_e;

enum
{
    ATSYNCSRV_STORAGE_ME = 0,
    ATSYNCSRV_STORAGE_SIM1,
    ATSYNCSRV_STORAGE_SIM2,
    ATSYNCSRV_STORAGE_MAX
};
typedef u8 ATSYNCSRV_StorageType_e;

enum
{
    //Common Resp			(000~099)
    ATSYNCSRV_RESPONSE_SUCCESS = 0,
    ATSYNCSRV_RESPONSE_NOT_SUPPORT,
    ATSYNCSRV_RESPONSE_ABORTED,
    ATSYNCSRV_RESPONSE_FAILED,    // Not Support
    ATSYNCSRV_RESPONSE_NOT_READY, // Not Ready
    ATSYNCSRV_RESPONSE_STORAGE_FULL,

    //Message Specific Resp	(100~199)
    ATSYNCSRV_RESPONSE_SEND_FAILED = 100,

    //Phone Book Specific Resp (200~299)
    ATSYNCSRV_RESPONSE_PHB_START = 200,
    ATSYNCSRV_RESPONSE_PHB_EMPTY_NUMBER = ATSYNCSRV_RESPONSE_PHB_START,
    ATSYNCSRV_RESPONSE_PHB_INVALID_NUMBER,

    //Calendar Specific Resp	   (300~399)

    //Todo Specific Resp			   (400~499)

    //NotePad Specific Resp 	   (500~599)

    //Calllog Specific Resp 		  (600~699)

};
typedef u8 ATSYNCSRV_Response_e;

enum
{
    ATSYNCSRV_SMS_SEND_RSP = 0,
    ATSYNCSRV_SMS_WRITE_RSP
};
typedef u8 ATSYNCSRV_SMS_Rsp_Evt_e;



/* Calendar */
enum
{
    ATSYNCSRV_CALENDAR_FIELD_UID = 0,
    ATSYNCSRV_CALENDAR_FIELD_SUBJECT,
    ATSYNCSRV_CALENDAR_FIELD_LOCATION,
    ATSYNCSRV_CALENDAR_FIELD_REPEAT,
    ATSYNCSRV_CALENDAR_FIELD_STARTDATE,
    ATSYNCSRV_CALENDAR_FIELD_STARTTIME,
    ATSYNCSRV_CALENDAR_FIELD_ENDDATE,
    ATSYNCSRV_CALENDAR_FIELD_ENDTIME,
    ATSYNCSRV_CALENDAR_FIELD_ALARM,
    ATSYNCSRV_CALENDAR_FIELD_DESCRIPTION,
    ATSYNCSRV_CALENDAR_FIELD_CATEGORY,
    ATSYNCSRV_CALENDAR_FIELD_MAX

};
typedef u8 ATSYNCSRV_CALENDAR_FieldName_e;

/* TodoList */
enum
{
    ATSYNCSRV_TODOLIST_FIELD_UID = 0,
    ATSYNCSRV_TODOLIST_FIELD_CONTENT,
    ATSYNCSRV_TODOLIST_FIELD_PRIORITY,
    ATSYNCSRV_TODOLIST_FIELD_STATUS,
    ATSYNCSRV_TODOLIST_FIELD_REMINDER,
    ATSYNCSRV_TODOLIST_FIELD_DATE,
    ATSYNCSRV_TODOLIST_FIELD_TIME,
    ATSYNCSRV_TODOLIST_FIELD_MODIFYDATE,
    ATSYNCSRV_TODOLIST_FIELD_MODIFYTIME,
	ATSYNCSRV_TODOLIST_FIELD_DESCRIPTION, // For __APP_MMI_TODOLIST_VTODO__
	ATSYNCSRV_TODOLIST_FIELD_LOCATION,    // For __APP_MMI_TODOLIST_VTODO__
	
    ATSYNCSRV_TODOLIST_FIELD_MAX
};
typedef u8 ATSYNCSRV_TODOLIST_FieldName_e;


/* PhoneBook */
typedef enum
{
    ATSYNCSRV_PHB_DELETE_SINGLE = 0,
    ATSYNCSRV_PHB_DELETE_ALL    = 1
}ATSYNCSRV_PHB_DeleteType_e;
//Mapping to Mrl_WCUS_PHB_DeleteType_e



//--------------------------------------
// C. value definition
//--------------------------------------
#define ATSYNCSRV_HASH_LEN 16
#define ATSYNCSRV_PHB_NAME_LEN      41
#define ATSYNCSRV_PHB_NUMBER_LEN    40
#define ATSYNCSRV_PHB_COMPANY_LEN   40
#define ATSYNCSRV_PHB_DEPARTMENT_LEN 40
#define ATSYNCSRV_PHB_POSITION_LEN  40
#define ATSYNCSRV_PHB_HOME_ADDRESS_LEN  100
#define ATSYNCSRV_PHB_OFFICE_ADDRESS_LEN 100
#define ATSYNCSRV_PHB_EMAIL_LEN 100
#define ATSYNCSRV_PHB_URL_LEN 100
#define ATSYNCSRV_PHB_NOTE_LEN 100
//For definition of each bit, please refer to Mrl_WCUS_PHB_FieldType_e in api_mrl_wcus.h
#define ATSYNCSRV_PHB_SUPPORTED_FIELD_MASK_SIM (7) // 0000000000000000111  (For Tool, SIM card supports "Mobile Number Field"
#ifdef __SMALL_PHB_MMI__
#define ATSYNCSRV_PHB_SUPPORTED_FIELD_MASK_PHONE (1799) // 0000000011100000111
#else
#define ATSYNCSRV_PHB_SUPPORTED_FIELD_MASK_PHONE (262071) // 0111111111110110111
#endif

#define ATSYNCSRV_TDL_DATEIME_LEN 20

#define ATSYNCSRV_TDL_CONTENT_LEN (TODOLIST_CONTENTSTR_MAX_CHARS*3*3)
#define ATSYNCSRV_TDL_DESCRIPTION_LEN (TODOLIST_DESCRIPTIONSTR_MAX_CHARS*3*3) // For __APP_MMI_TODOLIST_VTODO__
#define ATSYNCSRV_TDL_LOCATION_LEN (TODOLIST_LOCATIONSTR_MAX_CHARS*3*3)       // For __APP_MMI_TODOLIST_VTODO__
#define ATSYNCSRV_TDL_DATEIME_LEN 20

#define ATSYNCSRV_SMS_SCTS_LEN  7

#define ATSYNCSRV_TIME_FMT_YEAR_BASE    1970    // when use a two digits year representation, it's range is 1970 ~ 2069

#define ATSYNCSRV_SMS_IMSI_LEN  16  // Origianlly IMSI is only 15. However we have to record the additional garbage byte in SIMSRV
/*-------------------------------------------------------------------------*/

/**
* External Events
*/
#define ATSYNCSRV_EVT_START_STATUS          (CLSID_ATSYNCSRV << 16 | 1)
#define ATSYNCSRV_EVT_INIT_FAIL             (CLSID_ATSYNCSRV << 16 | 2)
#define ATSYNCSRV_EVT_STOPPED               (CLSID_ATSYNCSRV << 16 | 3)
#ifdef ATSYNC_ATCMD_AUTOTEST
#define ATSYNCSRV_EVT_AT_RSP_FOR_UT         (CLSID_ATSYNCSRV << 16 | 4)
#endif

/**
* IATSYNCSRV Interfaces
*/
#define INHERIT_IATSYNCSRV(IName) \
    INHERIT_IHandler(IName); \
    MAE_Ret     (*StartATSync)      ( IName * , IHandler* pClient);  \
    MAE_Ret     (*StopATSync)       ( IName * , IHandler* pClient)

DEFINE_INTERFACE(IATSYNCSRV);


#define IATSYNCSRV_QueryInterface(pICntlr, id, pp, po)          GET_FUNCTBL((pICntlr), IATSYNCSRV)->QueryInterface(pICntlr, id, pp, po)
#define IATSYNCSRV_HandleEvent(pICntlr, e, p1, p2)              GET_FUNCTBL((pICntlr), IATSYNCSRV)->HandleEvent(pICntlr, e, p1, p2)
#define IATSYNCSRV_StartATSync(pICntlr, p1) GET_FUNCTBL((pICntlr), IATSYNCSRV)->StartATSync( pICntlr, p1)
#define IATSYNCSRV_StopATSync(pICntlr, p1)  GET_FUNCTBL((pICntlr), IATSYNCSRV)->StopATSync( pICntlr, p1)



/**
* Functions
*/

void ATSYNCSRV_Init(void);

MAE_Ret ATSYNCSRV_New(MAE_ClsId id, void **ppObj);

/*------------------------- PART II. Struct define -----------------------*/

//---------------------------------------------------------
//                  A. General
//---------------------------------------------------------
typedef struct
{
    ATSYNCSRV_ItemType_e eItemType;
    ATSYNCSRV_ItemValueType_e eItemValueType;
    u32 nIndex;
    u32 nItemValue; /*necessary*/
    u32 nItemLen;   /*For ITEM_VALUE_TYPE_STRING*/
    void *pNext;
}ATSYNCSRV_MultiSegmentCmd_Item_t;

typedef struct
{
    u32 nPortID;
    u8 nModuleID;
    ATSYNCSRV_Group_e nGroupID;
    u8 nCmdID;  //refer to Item Index in doc.
    u8 nFunID;
    u8 nStatus;
    u8 nTotalCnt;
    u8 nCntIdx;
    ATSYNCSRV_MultiSegmentCmd_Item_t *pItem;
}ATSYNCSRV_MultiSegmentCmd_t;

typedef struct
{
    u8 PortId;
    u8 ModuleID;

} ATSYNCSRV_PHB_QueryStorageInd_t,
ATSYNCSRV_PHB_QueryTotalInd_t,
ATSYNCSRV_PHB_QueryUsedInd_t,
ATSYNCSRV_ATI_Src_t; // the last one is referenced by SMS, so, move it to common area..

typedef struct{
    u8 WriteMultiple;    /*write concatenated command*/
    u8 MutipleTotal;
}ATSYNCSRV_MultiSegInfo_t;

//---------------------------------------------------------
//                  B. Phonebook
//---------------------------------------------------------
typedef struct
{
    ATSYNCSRV_Response_e Result;
    u8 PortId;
}ATSYNCSRV_PHB_SetStorageRsp_t;


typedef struct
{
    ATSYNCSRV_Response_e Result;
    ATSYNCSRV_StorageType_e Storage;
    u8 PortId;
} ATSYNCSRV_PHB_QueryStorageRsp_t;


typedef struct
{
    ATSYNCSRV_StorageType_e Storage;
    u8 PortId;
    u8 ModuleID;

}ATSYNCSRV_PHB_SetStorageInd_t,
ATSYNCSRV_PHB_QuerySupportFieldInd_t;

typedef struct
{
    ATSYNCSRV_Response_e Result;
    u32 FieldMask;
    u8 PortId;
}ATSYNCSRV_PHB_QuerySupportFieldRsp_t;


typedef struct
{
    ATSYNCSRV_Response_e Result;
    u16 size;
    u8 PortId;

} ATSYNCSRV_PHB_QueryTotalRsp_t,
ATSYNCSRV_PHB_QueryUsedRsp_t;


typedef struct
{
    u16 index;
    u8 PortId;
    u8 ModuleID;

}ATSYNCSRV_PHB_ReadAllFieldsInd_t,
ATSYNCSRV_PHB_QueryNextIndexInd_t;

typedef struct
{
    u16 index;						//This is used in delete one entry.
    u16 TotalEntry;				//This is used in delete all command.
    u8  PortId;
    u8  ModuleID;
    ATSYNCSRV_PHB_DeleteType_e DelType;
}ATSYNCSRV_PHB_DeleteEntryInd_t;
//Mapping to Mrl_WCUS_PHB_DeleteEntryInd_t

typedef struct
{
    ATSYNCSRV_Response_e Result;
    u16 index;
    u8 PortId;
}ATSYNCSRV_PHB_QueryNextIndexRsp_t;


typedef struct
{
    ATSYNCSRV_Response_e Result;
    u8 PortId;
    ATSYNCSRV_StorageType_e CurrentStorage;

    u16 EntryIndex;

    u8 nNameLen;
    u8 Name[ATSYNCSRV_PHB_NAME_LEN];

    u8 nNum_MobileLen;
    u8 Num_Mobile[ATSYNCSRV_PHB_NUMBER_LEN];
#ifndef __SMALL_PHB_MMI__   
    u8 nNum_HomeLen;
    u8 Num_Home[ATSYNCSRV_PHB_NUMBER_LEN];

    u8 nNum_WorkLen;
    u8 Num_Work[ATSYNCSRV_PHB_NUMBER_LEN];

    u8 nNum_OtherLen;
    u8 Num_Other[ATSYNCSRV_PHB_NUMBER_LEN];
#endif // #ifndef __SMALL_PHB_MMI__   

    u32 Group;                               //Group Id
    u8 PicId[ATSYNCSRV_HASH_LEN];        //128-bit hash value
    u8 RingId[ATSYNCSRV_HASH_LEN];      // 128-bit hash value

#ifndef __SMALL_PHB_MMI__   
    u8 nCompanyNameLen;
    u8 CompanyName[ATSYNCSRV_PHB_COMPANY_LEN];

    u8 nDepartmentLen;
    u8 Department[ATSYNCSRV_PHB_DEPARTMENT_LEN];

    u8 nJobPositionLen;
    u8 JobPosition[ATSYNCSRV_PHB_POSITION_LEN];

    u8 nHomeAddrLen;
    u8 HomeAddr[ATSYNCSRV_PHB_HOME_ADDRESS_LEN];

    u8 nEmailLen;
    u8 Email[ATSYNCSRV_PHB_EMAIL_LEN];

    u8 nUrlStrLen;
    u8 UrlStr[ATSYNCSRV_PHB_URL_LEN];

    u8 nCommentLen;
    u8 Comment[ATSYNCSRV_PHB_NOTE_LEN];

    u8 nOfficeAddrLen;
    u8 OfficeAddr[ATSYNCSRV_PHB_OFFICE_ADDRESS_LEN];
#endif // #ifndef __SMALL_PHB_MMI__   

    u32 FieldMask;        /* Inform MRL which fields are valid and available*/
}ATSYNCSRV_PHB_ReadAllFieldsRsp_t;


typedef struct
{
    u8 PortId;
    u8 ModuleID;
    u8 WriteMultiple;    /*write concatenated command*/
    u8 MutipleTotal;

    u16 EntryIndex;

    u8 nNameLen;
    u8 Name[ATSYNCSRV_PHB_NAME_LEN];

    u8 nNum_MobileLen;
    u8 Num_Mobile[ATSYNCSRV_PHB_NUMBER_LEN];
    
#ifndef __SMALL_PHB_MMI__   
    u8 nNum_HomeLen;
    u8 Num_Home[ATSYNCSRV_PHB_NUMBER_LEN];

    u8 nNum_WorkLen;
    u8 Num_Work[ATSYNCSRV_PHB_NUMBER_LEN];

    u8 nNum_OtherLen;
    u8 Num_Other[ATSYNCSRV_PHB_NUMBER_LEN];
#endif // #ifndef __SMALL_PHB_MMI__   

    u32 Group;                               //Group Id
//     u8 PicId[ATSYNCSRV_HASH_LEN];       //128-bit hash value
//     u8 RingId[ATSYNCSRV_HASH_LEN];      // 128-bit hash value

    u32 uPicId;
    u32 uRingId;

#ifndef __SMALL_PHB_MMI__   
    u8 nCompanyNameLen;
    u8 CompanyName[ATSYNCSRV_PHB_COMPANY_LEN];

    u8 nDepartmentLen;
    u8 Department[ATSYNCSRV_PHB_DEPARTMENT_LEN];

    u8 nJobPositionLen;
    u8 JobPosition[ATSYNCSRV_PHB_POSITION_LEN];

    u8 nHomeAddrLen;
    u8 HomeAddr[ATSYNCSRV_PHB_HOME_ADDRESS_LEN];

    u8 nEmailLen;
    u8 Email[ATSYNCSRV_PHB_EMAIL_LEN];

    u8 nUrlStrLen;
    u8 UrlStr[ATSYNCSRV_PHB_URL_LEN];

    u8 nCommentLen;
    u8 Comment[ATSYNCSRV_PHB_NOTE_LEN];

    u8 nOfficeAddrLen;
    u8 OfficeAddr[ATSYNCSRV_PHB_OFFICE_ADDRESS_LEN];
#endif // #ifndef __SMALL_PHB_MMI__       
}ATSYNCSRV_PHB_WriteAllFieldsInd_t;


typedef struct
{
    ATSYNCSRV_Response_e Result;
    u16 EntryIndex;
    u8 PortId;
    u8 WriteMultiple;    /*write concatenated command*/
    u8 MutipleTotal;
}ATSYNCSRV_PHB_WriteAllFieldsRsp_t;

typedef struct
{
    ATSYNCSRV_Response_e Result;
    u16 EntryIndex;
    u8 PortId;
    ATSYNCSRV_PHB_DeleteType_e DelType;
} ATSYNCSRV_PHB_DeleteEntryRsp_t;


//---------------------------------------------------------
//                  C. SMS
//---------------------------------------------------------
typedef struct
{
    MAE_DateTime_t tTime;
    ATSYNCSRV_ATI_Src_t tAtiSrc;
    ATSYNCSRV_MultiSegInfo_t tMultiSeg;

    SMS_MsgRecipLst tRecipLst;
    MAE_WChar *pText;

    u16 EntryIndex;
    u8 SmsStatus;

    u8 BoxType;
    SMS_MsgRecipSize ReceiverCount;
    u8 SmsEncoding;
    boolean bComplete;
    boolean bLock;

    u8  IMSI[ATSYNCSRV_SMS_IMSI_LEN +1];

}ATSYNCSRV_SMS_Entry_t;
//---------------------------------------------------------
//                  D. Calendar
//---------------------------------------------------------


//---------------------------------------------------------
//                  E. To-do List
//---------------------------------------------------------
typedef struct
{
    u32 nPortID;
    u8 nModuleID;
    u8 nGroupID;
    u8 u8CommandId;
    u8 u8FunctionId;
    //  u8 u8ParameterCount;
    u8 nTotalCnt;
    u8 nCntIdx;

    u32 u32Index;
    u8 pu8Content[ATSYNCSRV_TDL_CONTENT_LEN + 1];
#ifdef __APP_MMI_TODOLIST_VTODO__
	u8 pu8Description[ATSYNCSRV_TDL_DESCRIPTION_LEN+1];
	u8 pu8Location[ATSYNCSRV_TDL_LOCATION_LEN+1];
#endif
    u8 u8Priority;
    u8 u8Status;
    u8 u8Reminder;
    u8 pu8Date[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8Time[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8ModifyDate[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8ModifyTime[ATSYNCSRV_TDL_DATEIME_LEN + 1];
} ATSYNCSRV_TODDLIST_PREDATA_t;

typedef struct
{
    u32 nPortID;
    u8 nModuleID;
    u8 nGroupID;
    u8 u8CommandId;
    u8 u8FunctionId;
    //  u8 u8ParameterCount;
    u8 nTotalCnt;
    u8 nCntIdx;

    u32 u32Index;
    MAE_WChar pwszContent[TODOLIST_CONTENTSTR_MAX_CHARS + 1];
#ifdef __APP_MMI_TODOLIST_VTODO__
	MAE_WChar pwszDescription[ATSYNCSRV_TDL_DESCRIPTION_LEN+1];
	MAE_WChar pwszLocation[ATSYNCSRV_TDL_LOCATION_LEN+1];
#endif
    u8 u8Priority;
    u8 u8Status;
    u8 u8Reminder;
    u8 pu8Date[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8Time[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8ModifyDate[ATSYNCSRV_TDL_DATEIME_LEN + 1];
    u8 pu8ModifyTime[ATSYNCSRV_TDL_DATEIME_LEN + 1];
} ATSYNCSRV_TODDLIST_DATA_t;

/*--------------- PART III. Function define -----------------*/
void mmi_ATSYNCSRV_MsgEntry_MAEFree(void *pData, IBase *pOwner);

#endif /* __MMI_ATSYNCSRV_H__ */
