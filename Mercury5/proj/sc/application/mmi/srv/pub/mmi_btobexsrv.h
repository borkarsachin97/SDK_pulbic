/**
* @file mmi_btobexsrv.h
*
* State Machine Service - BTOBEXSRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_BTOBEXSRV
*
*
* @version $Id: mmi_btobexsrv.h 36867 2009-07-30 12:23:11Z sho.ding $
*/
#ifndef __MMI_BTOBEXSRV_H__
#define __MMI_BTOBEXSRV_H__

#include "mmi_mae_common_def.h"
#include "mmi_mae_applet.h"
#include "mmi_mae_class.h"

#ifdef __BLUETOOTH_OBEX_MMI__

#include "mmi_mae_filemgr.h"

#include "mmi_btsrv_def.h"

#define BTOBEXSRV_FILE_NAME_FOR_DIALOG_MAX 16
#define BTOBEXSRV_DEV_NAME_FOR_DIALOG_MAX 10

typedef enum
{
    BTOBEXSRV_MASK_TRANS_PROGRESS = 1 << 0
,
    /*
        Events:
        BTOBEXSRV_EVT_TRANS_PROGRESS_IND : param1 = current trans file size, param2 = total file size
    */

    BTOBEXSRV_MASK_TRANS_STATUS = 1 << 1,

    /*
        Events:
        BTOBEXSRV_EVT_SEND_STATUS_IND : param1 = receive file, start(0), success (1),  fail (2)
        BTOBEXSRV_EVT_RECV_STATUS_IND : param1 = receive file, start(0), success (1),  fail (2); param2 = file name
        BTOBEXSRV_EVT_IMPORT_STATUS_IND : param1 = import file, start(0), success (1),  fail (2)
        BTOBEXSRV_EVT_RECV_REQ_IND : param2 = file name
    */

    BTOBEXSRV_MASK_TRANS_INTERACTIVE = 1 << 2,
    /*
        (Used to notify AP to close itself if the AP function conflicts with BT receiving)
        Events:
        BTOBEXSRV_EVT_TRANS_INTERACTIVE_IND
    */

    BTOBEXSRV_MASK_ALLMask = -1
} BTOBEXSRV_NOTIFY_MASK_e;

typedef enum
{
    BTOBEXSRV_COPY_SUCCESS = 0
   ,BTOBEXSRV_COPY_FAIL,
} BTOBEXSRV_COPY_STATUS_e;

typedef enum
{
    BTOBEXSRV_ReceivingStatus_NONE
    ,BTOBEXSRV_ReceivingStatus_INIT
    ,BTOBEXSRV_ReceivingStatus_START

}BTOBEXSRV_ReceivingStatus_e;

/**
 * External Events
 */
#define BTOBEXSRV_EVT_TRANS_PROGRESS_IND                (CLSID_BTOBEXSRV << 16 | 1)
#define BTOBEXSRV_EVT_SEND_STATUS_IND               (CLSID_BTOBEXSRV << 16 | 2)
#define BTOBEXSRV_EVT_RECV_STATUS_IND               (CLSID_BTOBEXSRV << 16 | 3)
#define BTOBEXSRV_EVT_IMPORT_STATUS_IND             (CLSID_BTOBEXSRV << 16 | 4)
#define BTOBEXSRV_EVT_TRANS_INTERACTIVE_IND             (CLSID_BTOBEXSRV << 16 | 5)
#define BTOBEXSRV_EVT_RECV_REQ_IND              (CLSID_BTOBEXSRV << 16 | 6)

/**
 * IBTOBEXSRV Interfaces
 */
#define INHERIT_IBTOBEXSRV(IName) \
    INHERIT_IHandler(IName); \
    MAE_Ret     (*RegisterNotification)     ( IName * , void *pInstance, BTSRV_NOTIFY_MASK_e mask);  \
    MAE_Ret     (*DeRegisterNotification)       ( IName * , void *pInstance, BTSRV_NOTIFY_MASK_e mask);  \
    MAE_Ret     (*SendFileReq)      ( IName * , u8 *pAddr, MAE_WChar *pwFileName);  \
    void        (*AbortTransFile)       ( IName * );  \
    void        (*AcceptRsp)        ( IName * , boolean bIsAccept);  \
    boolean        (*IsOPPActive)        ( IName * );  \
    boolean        (*IsSending)        ( IName * );  \
    boolean     (*IsReceiving)      ( IName * ); \
    void (*DisconObexLink) ( IName * )

DEFINE_INTERFACE(IBTOBEXSRV);


#define IBTOBEXSRV_QueryInterface(pICntlr, id, pp, po)          GET_FUNCTBL((pICntlr), IBTOBEXSRV)->QueryInterface(pICntlr, id, pp, po)
#define IBTOBEXSRV_HandleEvent(pICntlr, e, p1, p2)              GET_FUNCTBL((pICntlr), IBTOBEXSRV)->HandleEvent(pICntlr, e, p1, p2)
/**

 */
#define IBTOBEXSRV_RegisterNotification(pICntlr, p1, p2)    GET_FUNCTBL((pICntlr), IBTOBEXSRV)->RegisterNotification( pICntlr, p1, p2)
/**

 */
#define IBTOBEXSRV_DeRegisterNotification(pICntlr, p1, p2)  GET_FUNCTBL((pICntlr), IBTOBEXSRV)->DeRegisterNotification( pICntlr, p1, p2)
/**

 */
#define IBTOBEXSRV_SendFileReq(pICntlr, p1, p2) GET_FUNCTBL((pICntlr), IBTOBEXSRV)->SendFileReq( pICntlr, p1, p2)
/**

 */
#define IBTOBEXSRV_AbortTransFile(pICntlr)  GET_FUNCTBL((pICntlr), IBTOBEXSRV)->AbortTransFile( pICntlr)
/**

 */
#define IBTOBEXSRV_AcceptRsp(pICntlr, p1)   GET_FUNCTBL((pICntlr), IBTOBEXSRV)->AcceptRsp( pICntlr, p1)
/**

 */
#define IBTOBEXSRV_IsOPPActive(pICntlr) GET_FUNCTBL((pICntlr), IBTOBEXSRV)->IsOPPActive( pICntlr)
/**

 */
#define IBTOBEXSRV_IsSending(pICntlr) GET_FUNCTBL((pICntlr), IBTOBEXSRV)->IsSending( pICntlr)
/**

 */
#define IBTOBEXSRV_IsReceiving(pICntlr) GET_FUNCTBL((pICntlr), IBTOBEXSRV)->IsReceiving( pICntlr)
/**

 */
#define IBTOBEXSRV_DisconObexLink(pICntlr) GET_FUNCTBL((pICntlr), IBTOBEXSRV)->DisconObexLink( pICntlr)


/**
 * Functions
 */

void BTOBEXSRV_Init(void);

MAE_Ret BTOBEXSRV_New(MAE_ClsId id, void **ppObj);

void mmi_BTOBEXSRV_SetRecvFileInteractiveMode(IBTOBEXSRV *pIBTOBEXSRV, boolean isActive);
void mmi_BTOBEXSRV_InteractiveRecvFileRsp(IBTOBEXSRV *pIBTOBEXSRV, boolean isAccept);

boolean mmi_BTOBEXSRV_IsWaitingStorageSelection(IBTOBEXSRV *pIBTOBEXSRV);
BTOBEXSRV_ReceivingStatus_e mmi_BTOBEXSRV_GetReceivingStatus(IBTOBEXSRV *pIBTOBEXSRV);

#endif /* #ifdef __BLUETOOTH_OBEX_MMI__ */

#endif /* __MMI_BTOBEXSRV_H__ */
