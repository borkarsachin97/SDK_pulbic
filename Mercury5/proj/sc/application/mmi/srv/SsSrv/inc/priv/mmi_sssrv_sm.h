/**
* @file mmi_sssrv_sm.h
*
* State Machine Service - SSSRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_SSSRV
*
*
* @version $Id$
*/
#ifndef __MMI_SSSRV_SM_H__
#define __MMI_SSSRV_SM_H__

#include "mmi_mae_sm.h"
#include "mmi_class.h"

/**
 * Mode Tree Properties
 */
#define cSSSRV_ModeNumbers              15
#define cSSSRV_DependencyNumbers                33

/**
 * Modes (index should begin from 0 and increase continuously)
 */
#define cSSSRV_MODE_SsSrv               0
#define cSSSRV_MODE_Init                1
#define cSSSRV_MODE_Active              2
#define cSSSRV_MODE_Active_Idle             3
#define cSSSRV_MODE_Active_CallBarring              4
#define cSSSRV_MODE_Active_CallDivert               5
#define cSSSRV_MODE_Active_CallWaiting              6
#define cSSSRV_MODE_Active_UserGroup                7
#define cSSSRV_MODE_Active_AoC              8
#define cSSSRV_MODE_Active_ACM              9
#define cSSSRV_MODE_Active_AMM              10
#define cSSSRV_MODE_Active_PUC              11
#define cSSSRV_MODE_Active_USSD             12
#define cSSSRV_MODE_Active_BarringPwdChange             13
#define cSSSRV_MODE_Active_LineIdentity             14


/**
 * Internal Events
 */
#define SSSRV_IEVT_Initial_Done             (CLSID_SSSRV << 16 | 33)
#define SSSRV_IEVT_ActionCancel             (CLSID_SSSRV << 16 | 34)


/**
 * Macros for triggering internal events
 */
#define TRIGGER_EVT_SSSRV_IEVT_Initial_Done(pSM, p1, p2)    MAE_TriggerEvent(pSM, SSSRV_IEVT_Initial_Done, p1, p2)
#define TRIGGER_EVT_SSSRV_IEVT_ActionCancel(pSM, p1, p2)    MAE_TriggerEvent(pSM, SSSRV_IEVT_ActionCancel, p1, p2)


/*-------------------------------------------------------------------------*/
extern const SM_Mode_t SSSRV_modeTree[];
extern const SM_Transition_t SSSRV_transition[];
extern const SM_TransitionForEvent_t SSSRV_transForEvent[];
extern const SM_EventDep_t SSSRV_eventDependency[];

#endif /* __MMI_SSSRV_SM_H__ */
