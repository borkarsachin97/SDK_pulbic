/**
* @file mmi_cphssrv_sm.h
*
* State Machine Service - CPHSSRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_CPHSSRV
*
*
* @version $Id$
*/
#ifndef __MMI_CPHSSRV_SM_H__
#define __MMI_CPHSSRV_SM_H__

#include "mmi_mae_sm.h"
#include "mmi_class.h"

/**
 * Mode Tree Properties
 */
#define cCPHSSRV_ModeNumbers                12
#define cCPHSSRV_DependencyNumbers              21

/**
 * Modes (index should begin from 0 and increase continuously)
 */
#define cCPHSSRV_MODE_cphssrv               0
#define cCPHSSRV_MODE_Init              1
#define cCPHSSRV_MODE_Active                2
#define cCPHSSRV_MODE_Active_CheckFncQueue              3
#define cCPHSSRV_MODE_Active_Idle               4
#define cCPHSSRV_MODE_Active_ProcessReq             5
#define cCPHSSRV_MODE_Active_ProcessReq_QueryVMStatus               6
#define cCPHSSRV_MODE_Active_ProcessReq_QueryLine               7
#define cCPHSSRV_MODE_Active_ProcessReq_QueryMailBoxReq             8
#define cCPHSSRV_MODE_Active_ProcessReq_SetMailBoxNumber                9
#define cCPHSSRV_MODE_Active_ProcessReq_SetRequest              10
#define cCPHSSRV_MODE_Active_ProcessReq_ReadFunctionalityReq                11


/**
 * Internal Events
 */
#define CPHSSRV_IEVT_READY              (CLSID_CPHSSRV << 16 | 8)
#define CPHSSRV_IEVT_QUERY_VM_STATUS                (CLSID_CPHSSRV << 16 | 9)
#define CPHSSRV_IEVT_INIT               (CLSID_CPHSSRV << 16 | 10)
#define CPHSSRV_IEVT_DONE               (CLSID_CPHSSRV << 16 | 11)
#define CPHSSRV_IEVT_CHECK_QUEUE                (CLSID_CPHSSRV << 16 | 12)
#define CPHSSRV_IEVT_QUERY_LINE             (CLSID_CPHSSRV << 16 | 13)
#define CPHSSRV_IEVT_QUERY_MAIL_BOX             (CLSID_CPHSSRV << 16 | 14)
#define CPHSSRV_IEVT_SET_MAIL_BOX_NUMBER                (CLSID_CPHSSRV << 16 | 15)
#define CPHSSRV_IEVT_SET_REQUEST                (CLSID_CPHSSRV << 16 | 16)
#define CPHSSRV_IEVT_READ_FUNCTIONALITY             (CLSID_CPHSSRV << 16 | 17)
#define CPHSSRV_IEVT_QUEUE_EMPTY                (CLSID_CPHSSRV << 16 | 18)


/**
 * Macros for triggering internal events
 */
#define TRIGGER_EVT_CPHSSRV_IEVT_READY(pSM, p1, p2) MAE_TriggerEvent(pSM, CPHSSRV_IEVT_READY, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_QUERY_VM_STATUS(pSM, p1, p2)   MAE_TriggerEvent(pSM, CPHSSRV_IEVT_QUERY_VM_STATUS, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_INIT(pSM, p1, p2)  MAE_TriggerEvent(pSM, CPHSSRV_IEVT_INIT, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_DONE(pSM, p1, p2)  MAE_TriggerEvent(pSM, CPHSSRV_IEVT_DONE, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_CHECK_QUEUE(pSM, p1, p2)   MAE_TriggerEvent(pSM, CPHSSRV_IEVT_CHECK_QUEUE, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_QUERY_LINE(pSM, p1, p2)    MAE_TriggerEvent(pSM, CPHSSRV_IEVT_QUERY_LINE, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_QUERY_MAIL_BOX(pSM, p1, p2)    MAE_TriggerEvent(pSM, CPHSSRV_IEVT_QUERY_MAIL_BOX, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_SET_MAIL_BOX_NUMBER(pSM, p1, p2)   MAE_TriggerEvent(pSM, CPHSSRV_IEVT_SET_MAIL_BOX_NUMBER, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_SET_REQUEST(pSM, p1, p2)   MAE_TriggerEvent(pSM, CPHSSRV_IEVT_SET_REQUEST, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_READ_FUNCTIONALITY(pSM, p1, p2)    MAE_TriggerEvent(pSM, CPHSSRV_IEVT_READ_FUNCTIONALITY, p1, p2)
#define TRIGGER_EVT_CPHSSRV_IEVT_QUEUE_EMPTY(pSM, p1, p2)   MAE_TriggerEvent(pSM, CPHSSRV_IEVT_QUEUE_EMPTY, p1, p2)


/*-------------------------------------------------------------------------*/
extern const SM_Mode_t CPHSSRV_modeTree[];
extern const SM_Transition_t CPHSSRV_transition[];
extern const SM_TransitionForEvent_t CPHSSRV_transForEvent[];
extern const SM_EventDep_t CPHSSRV_eventDependency[];

#endif /* __MMI_CPHSSRV_SM_H__ */
