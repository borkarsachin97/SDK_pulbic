/**
* @file mmi_profilesrv_priv.h
*
* Service without using State Machine - PROFILESRV
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_PROFILESRV
* Interface Id: IID_PROFILESRV
*
* @version $Id: mmi_profilesrv_priv.h 28768 2009-04-17 08:19:25Z william.lien $
*/
#ifndef __MMI_PROFILESRV_PRIV_H__
#define __MMI_PROFILESRV_PRIV_H__

#include "mmi_mae_common_def.h"
#include "mmi_profilesrv.h"
#include "mmi_cfgsrv.h"
#ifdef __BLUETOOTH_MMI__
#include "mmi_btsrv.h"
#endif
#include "mmi_accessorysrv.h"

#ifdef __POWER_SAVING_PROFILE_MMI__
#include "mmi_coresrv.h"
#endif
#define PROFILESRV_PREVIOUS_PROFILE_SETTING_ITEM (1)
#define PROFILESRV_RELATED_PROFILE_ID_NUMBER (3)

/**
 * Application structure
 */
typedef struct MMI_PROFILESRV_TAG
{
    DECLARE_FUNCTBL(IPROFILESRV); // function table pointer
    u32 refCnt;     // reference count
    /* Add custom fields below */
    ICFGSrv *pICFGSrv;
    IModel *pProfileModel;
#ifdef __BLUETOOTH_MMI__
    IBTSRV *pIBTSrv;
#endif
#ifdef __POWER_SAVING_PROFILE_MMI__
	ICORESRV *pICoreSrv;
#endif
    IACCESSORYSRV *pIAccessorySrv;
    ModelListener_t AccessoryMdlLsn;
    boolean bTerminated;
    boolean bBTHeadsetConnected;
    boolean bHeadsetConnected;
    boolean bMapBTHeadsetToHeadset;

    ProfileID_e eCurrentProfileID;
    ProfileID_e ePreviousProfileID;
    ProfileID_e ePreviousNormalProfileID;   //Mean not headset, silent profile

    boolean bInactivateSilentModeByHotKey;
    boolean bApplyNormalProviousProfileIdWhenHeadsetPlugOut;
    boolean bHeadsetPlugInOutInd;

    //pProfileSrvModel
} MMI_PROFILESRV;

#endif /* __MMI_PROFILESRV_PRIV_H__ */
