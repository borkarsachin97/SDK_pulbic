/**
* @file mmi_vcalstoresrv_priv.h
*
* Service without using State Machine - VCALSTORESRV
* Generated by XFSM v1.0, CodeVer=v0.24  2008-21-11, 22:16:39
*
* Class Id: CLSID_VCALSTORESRV
* Interface Id: IID_VCALSTORESRV
*
* @version $Id: mmi_vcalstoresrv_priv.h 30633 2009-05-12 12:40:03Z johnson.yeh $
*/
#ifndef __MMI_VCALSTORESRV_PRIV_H__
#define __MMI_VCALSTORESRV_PRIV_H__

/*=============================================================*/
// Include files
/*=============================================================*/

#include "mmi_mae_common_def.h"
#include "mmi_vcalstoresrv.h"
#include "mmi_cfgsrv.h"
#include "mmi_alarmsrv.h"
#include "mmi_common_calendar.h"
#include "mmi_common_custom.h"

///MAE Pub Header
#include "mmi_mae_forward.h"
/*=============================================================*/
// Macro definition
/*=============================================================*/

/**
 * Constant value definition
 */

#define VCALSTORESRV_ARRAY_SIZE_INIT 10
#define VCALSTORESRV_ARRAY_SIZE_GROW 10

#define VCALSTORESRV_MONTH_MAX_DAYS 31

/*=============================================================*/
// Data type definition
/*=============================================================*/

/**
 * Enum value definition
 */

typedef enum
{
    CAL_EVENT_CREATION
   ,CAL_EVENT_UPDATION
   ,CAL_EVENT_DELETION
} VCALEventChange_e;

/**
 * Object structure definition
 */

/**
 * Application structure
 */
typedef struct MMI_VCALSTORESRV_TAG
{
    DECLARE_FUNCTBL(IVCALSTORESRV);   // function table pointer
    u32 refCnt;     // reference count
    /* Add custom fields below */
    u32 nExceptionUID; /* The cuurent event uid that owns the pExceptionList. */
    boolean bIsListAllOccurrence;

    IALARMSRV *pIAlarmSrv;
    ICFGSrv *pICFGSrv;
    IEVENTDB *pIEventDB;
    IARRAYMODEL *pIQueryList; /* List of enum events. */
    ArrayClass_t *pExceptionList; /* List of repeat exceptions for a specified event uid. */
    ICLOCK *pIClock; /* Access IClock for localtime */

    /* The following are variables used for enum events. */
    s32 nCurrentIndex; /* Current index in enum cache. */
    s32 nStartIndex; /* Current index in enum cache. */
    s32 nEndIndex; /* Last index in enum cache. */

    DateRange_t stDateRange; /* Date range for the enumeration. */
    DateRange_t stShortDateRange;
	boolean EventIndicator[VCALSTORESRV_MONTH_MAX_DAYS]; /* Array of monthly view event indicator indication. */
} MMI_VCALSTORESRV;

#ifndef MEMCMP
#define MEMCMP(s,t,n) memcmp(s,t,n)
#endif

/*=============================================================*/
// Local function prototype declaration and definition
/*=============================================================*/

#endif /* __MMI_VCALSTORESRV_PRIV_H__ */
