/**
* @file mmi_messageviewerapp_priv.h
*
* State Machine Application - SVA
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_SVA
*
*
* @version $Id$
*/
#ifndef __MMI_MESSAGEVIEWERAPP_PRIV_H__
#define __MMI_MESSAGEVIEWERAPP_PRIV_H__

/*-------------------------------------------------------------------------*/
#include "mmi_baseapplet.h"
#include "mmi_common_sms.h"
#include "mmi_phbapp.h"
#include "mmi_common_mms.h"
#include "mmi_messagecenterapp.h"
#include "mmi_srv_header.h"
#include "mmi_common_storage_mgr.h"
#if defined(__MMS_MMI_CDMMS__) && defined(__USER_FILE_DELETER__)
#include "mmi_filemgrapp.h"
#endif
#ifdef __WAP_MMI_CDWAP__
#include "mmi_cdwapapp.h"
#endif
#include "mmi_messageviewerapp_id.h"
#include "messageviewerapp_resource.h"
#ifdef __MMI_VIEW_MSG_IN_OUTBOX_SUPPORT__
#include "messagecenterapp_resource.h"
#include "mmi_common_vtm.h"
#endif


#define __WAP_MMI_CDWAP_URL_HANDLER__
#define SVA_IEVT_INIT_Fail				(CLSID_SVA << 16 | 39)
#define SVA_SENING_CLOSE_DIALOG_TIMER    2000
#define SVA_DIALOG_TIMER    1000
#define SVA_FOCUS_IDX_INIT	-1
#define SVA_COPY_DEFAULT_REUSLT 0xFF
#define SVA_SMS_IDX_TOTAL_STR           L"%d/%d"
#define SVA_SMS_IDX_TOTAL_STR_MAX_LEN   8    //include the null terminator e.g "(500/500)"
#define SVA_MAX_SENDER_RECIPIENT_STRLEN  1000
#define SVA_MMS_RECIPIENT_SEP 0x3B

/* Focused Object Type */
enum
{
    SVA_FO_UNKNOWN,
    SVA_FO_SENDERRECIPIENT,
    SVA_FO_NUMBER,
    SVA_FO_EMAIL,
    SVA_FO_URL,
    SVA_FO_PICTURE,
    SVA_FO_AUDIO,
    SVA_FO_VIDEO,
    SVA_FO_BOOKMARK
};

typedef enum
{
	SVA_REPLY_SMS,
	SVA_REPLY_MMS,
}SVA_Reply_TYPE_e;

#ifdef __MMS_MMI_CDMMS__
/* Option Menu Level Control */
#define SVA_MENU_L1                         0x01
#define SVA_MENU_L2                         0x02
#define SVA_OPT_MENU_L1                     0x10
#define SVA_OPT_MENU_L2                     0x20

/* Update Area */
#define SVA_MMS_UA_TITLE                    0x01
#define SVA_MMS_UA_SENDER                   0x02
#define SVA_MMS_UA_SLIDE_SWITCH             0x04
#define SVA_MMS_UA_SLIDE_CONTENT            0x08

/* Object List Index */
#define SVA_MMS_OLIDX_IMAGE                 0x80
#define SVA_MMS_OLIDX_AUDIO                 0x40
#define SVA_MMS_OLIDX_VIDEO                 0x20

/* Viewer Mode */
enum
{
    SVA_MMS_VM_SELECT,
    SVA_MMS_VM_PLAY,
    SVA_MMS_VM_RETRIEVE_CONFIRM,
    SVA_MMS_VM_PLAY_AUDIO,
};



typedef struct SVA_FOCUSED_OBJECT_TAG
{
    MAE_WChar *pName;
    u8        *pData;
    u32       DataByteSize;
    u32       EndPos;
    u32       StartPos;
    u8        Type;
} SVA_FocusedObject_t;

typedef struct SVA_OBJECT_DBINFO_TAG
{
    u32 ImageID;
    u32 AudioID;
    u32 VideoID;
} SVA_ObjectDBInfo_t;

typedef struct SVA_SEA_MMS_SlideObj_Tag
{
    u32 nSlideIdx;
    u32 nContentID;
    u8  eType;
} SVA_SEA_MMS_SlideObj_t;

typedef enum
{
    SVA_RECIPIENT_NAME,
    SVA_RECIPIENT_NUMBER,
    SVA_RECIPIENT_EMAIL,
    SVA_RECIPIENT_UNKNOWN,
}SVA_Recipient_TYPE_e;


typedef struct
{
    MAE_WChar *pDisplayContent;                  // the specific string
    MAE_WChar *pNumber;
    SVA_Recipient_TYPE_e  objType;                // number, email, url
    u32  nStartIdx;                              //the start location at the content
    u32  nEndIdx;                                //the end location at the content
}SVA_RecipientInfo;

#endif

typedef struct
{
    u32 nStartPos;
    u32 nEndPos;
    //IModel *pTextModel;
    ModelListener_t viewMdlLsn;
    s32 nFocusIdx;
    u32 nObjItemNum;
    u32 currentPage; // mms:slide
}SVA_MainView_t;

typedef enum
{
    Call_Unknow =0,
    Call_Master,
    Call_Slave,
}SVA_Call_TYPE_e;

typedef enum
{
    Call_Def_Normal_Call =0,
    Call_Def_IP_Call
}SVA_Call_DEFINE_e;


enum
{
    SVA_VIEWER_TYPE_SMS =0,
    SVA_VIEWER_TYPE_MMS_SUBJECT,
    SVA_VIEWER_TYPE_MMS_CONTENT,
};

enum
{
    SVA_VIEWER_INIT_REQ_NONE = 0,
    SVA_VIEWER_INIT_REQ_GET_ALL_SLIDES,
    SVA_VIEWER_INIT_REQ_GET_ATTACHES,
    SVA_VIEWER_INIT_REQ_GET_RECVLIST,
    SVA_VIEWER_INIT_REQ_GET_SENDER,
    SVA_VIEWER_INIT_REQ_CREATE_TEMP_FILES_FOR_SLIDE_OBJECTS = 20,
    SVA_VIEWER_INIT_REQ_CREATE_TEMP_FILES_FOR_ATTACHMENTS = 40,
};

typedef struct SVA_MMS_Slide_Tag
{
    u32 nIdx ;     // the index of slide
    IBitmap *pIBitmap;  // iBMP buffer ,image / first frame of vedio for display

}SVA_MMS_SLIDE_t;

typedef enum
{
    SVA_CLOSE_DIALOG_AND_BACK_TO_VIEWER,
    SVA_CLOSE_DIALOG_AND_BACK_TO_LIST,
    SVA_CLOSE_DIALOG_AND_BACK_TO_PREVIOUS_MODE,
}SVA_Close_Dialog_Method_TYPE_e;

typedef struct SVA_POST_EVENT_DATA_TAG {
    MAE_EventId Event;
    u32 Param1;
    u32 Param2;
} SVA_PostEvent_Data_t;

typedef struct
{
	SimID_e eSimId;
	MAE_WChar wStrUrl[FILEMGR_MAX_FILEPATH_SIZE];
}SVA_WapStart_Data_t;

#ifdef __MMI_VIEW_MSG_IN_OUTBOX_SUPPORT__
typedef struct DualSimMenuWndData_t_
{
	SimSelectionWdgList_t tWdgList;
} DualSimMenuWndData_t;
#endif

typedef enum MsgvwActionStatus_e_
{
    MSGVW_ACTION_NONE,
	MSGVW_ACTION_MessagePlaying,
	MSGVW_ACTION_StopMessagePlaying,
	MSGVW_ACTION_WaitChangeMessage,
	MSGVW_ACTION_ViewImage,
	MSGVW_ACTION_PlaySound,
	MSGVW_ACTION_PlayVideo,
    MSGVW_ACTION_Delete,
	MSGVW_ACTION_Call,
	MSGVW_ACTION_IPCall,
	MSGVW_ACTION_SaveObjects,

    MSGVW_ACTION_MarkasUnread,
    MSGVW_ACTION_Move,
	MSGVW_ACTION_Copy,
	MSGVW_ACTION_SaveMsg

}MsgvwActionStatus_e;

typedef struct SMS_VIEWER_VIEW_WdgList_tag
{
    //IWidget *pSMS_VIEWER_MAINCONTAINER;
    IWidget *pSMS_VIEWER_TITLE_CONTAINER;
    IWidget *pSMS_VIEWER_TITLE_TXTWDG;
    IWidget *pSMS_VIEWER_MESSAGE_SWITCH_CONTNR;
    IWidget *pSMS_VIEWER_MESSAGE_SWITCH_LEFT_ARROW_BTNWDG;
    IWidget *pSMS_VIEWER_MESSAGE_SWITCH_INFO_TXTWDG;
    IWidget *pSMS_VIEWER_MESSAGE_SWITCH_RIGHT_ARROW_BTNWDG;
    IWidget *pSMS_VIEWER_AREA_SCROLLBARWDG;
    IWidget *pSMS_VIEWER_INPUTWIDGET;
#ifdef __TOUCH_SCREEN_MMI__
	IWidget *pSMS_VIEWER_AREA_VPTWDG;
#endif
}SMS_VIEWER_VIEW_WdgList;

typedef struct MMS_VIEWER_VIEW_WdgList_tag
{
    IWidget *pMMS_VIEWER_MAINCONTAINER;
    IWidget *pMMS_VIEWER_TITLE_CONTAINER;
    IWidget *pMMS_VIEWER_TITLE_TXTWDG;
    IWidget *pMMS_VIEWER_SUB_TITLE_TXTWDG;
    IWidget *pMMS_VIEWER_MESSAGE_SWITCH_CONTNR;
    IWidget *pMMS_VIEWER_MESSAGE_SWITCH_LEFT_ARROW_BTNWDG;
    IWidget *pMMS_VIEWER_MESSAGE_SWITCH_INFO_TXTWDG;
    IWidget *pMMS_VIEWER_MESSAGE_SWITCH_RIGHT_ARROW_BTNWDG;
    IWidget *pMMS_VIEWER_SENDER_WDG;
#ifdef __CALLER_LOCATION__
	IWidget *pMMS_VIEWER_CALLER_LOCATION_WDG;
#endif
    IWidget *pMMS_VIEWER_ATTACH_ICON_IMGWDG;
    IWidget *pMMS_VIEWER_SLIDE_SWITCH_CONTNR;
    IWidget *pMMS_VIEWER_SLIDE_SWITCH_LEFT_ARROW_BTNWDG;
    IWidget *pMMS_VIEWER_SLIDE_SWITCH_INFO_TXTWDG;
    IWidget *pMMS_VIEWER_SLIDE_SWITCH_RIGHT_ARROW_BTNWDG;
    IWidget *pMMS_VIEWER_AREA_SCROLLBARWDG;
    IWidget *pMMS_VIEWER_AREA_VPTWDG;
    IWidget *pMMS_VIEWER_AREA_PROPCONTAINER;
    IWidget *pMMS_VIEWER_PROPCONTAINER_ICON_LIST;
    IWidget *pMMS_VIEWER_AUDIO_ICON_IMGWDG;
    IWidget *pMMS_VIEWER_VIDEO_ICON_IMGWDG;
    IWidget *pMMS_VIEWER_SLIDE_TEXT_TXTWDG;
    IWidget *pMMS_VIEWER_SLIDE_IMAGE_CONTNR;
    IWidget *pMMS_VIEWER_SLIDE_IMAGE_IMGWDG;
}MMS_VIEWER_VIEW_WdgList;

typedef struct MMS_VIEWER_DetailViewWdgList_tag
{
	IWidget *pTitleWdg;
    IWidget *pScrollbarWdg;
    IWidget *pViewportWdg;
    IWidget *pMainContainer;
    IWidget *pSubjectTextWdg;
    IWidget *pTypeTextWdg;
    IWidget *pDateTextWdg;
    IWidget *pTimeTextWdg;
    IWidget *pSizeTextWdg;
    IWidget *pFromTextWdg;
    IWidget *pToTextWdg;
    IWidget *pCcTextWdg;
    IWidget *pBccTextWdg;
} MMS_VIEWER_DetailViewWdgList;

/**
 * Application structure
 */
typedef struct MMI_SVA_TAG {
	APPLET_BASE_ELEMENTS;

    boolean bActionControl;
    boolean bCloseAP;
    boolean bDelayClose;

    IView                  *pIView;
    //IMedia                 *pAudMedia; // for audio playback

    SVA_MainView_t tMainView;
    // option menu
    ModelListener_t optMainMdlListener;
    ModelListener_t optL2MdlListener;
    IWidget *pOptMenuWdg;
    // copy to phone
    SMI_MsgMgrStatus_e eCopyResult;
    //releated infor
    SMI_MsgID_t             MsgID;
    SMS_VIEWER_TYPE_e       MsgType;
    SMI_MsgLocation_e       eMsgLoc;
#ifdef __MMI_SMS_WAPPUSH__
	SMI_MsgType_e           eMsgMtType;
#endif
    MAE_WChar* pSenderRecipient;             //store the phone number of sender or recipient
    MAE_WChar* pSenderRecipientName;        //store the name of sender of recipient
    MAE_WChar* pMsgCnt;
#if defined(__EMS_MMI_SUPPORT__) || defined(__SMART_MESSAGING_MMI_SUPPORT__)
	u8 *pExtObjData;
#endif
#ifdef __SMS_MMI_SIM_MESSAGE_BOX_SUPPORT__
	SMI_SmsSimMsgBox_e RecentClass0SMSSimBox;
#endif
    IVectorModel *pObjCntList; // store MCI MCI_SMObjCnt_t
    SVA_Call_TYPE_e eCallType;
    SMI_MsgFlag msgFlag;
    SMI_TimeStamp_t timestamp;
    /*process dialog handler*/
    WidgetHandler_t DialogViewHdlData;
    ModelListener_t dialogMdlListener;

    IVectorModel            *pClass0MsgStack;
    u32 nWaitEventID;

    McaChangeMessage_t *pChangeMessage;
    IDataModel *pProcessNewMsgIdMdl;
    IDataModel *pGetNewMsgIdReqMdl;
    ModelListener_t ProcessNewMsgIdMdlListener;
    ModelListener_t GetNewMsgIdReqMdlListener;
    boolean                 MoveToPrevious;

	PhoneBookSaveContactRecord_t tSaveContactData;

    /*Message Index Info Listener*/
    ModelListener_t MsgInfoDataMdlListener;

    ModelListener_t         MessageSwitchLButtonMdLsn;
    ModelListener_t         MessageSwitchRButtonMdLsn;
    WidgetHandler_t         CommonDialogHandler;
     /************MMS*********/
#ifdef __MMS_MMI_CDMMS__
    SVA_MainView_t          tRecipientListView;
    IImage                  *pCurrentSlideImage;
    IVectorModel            *pFocusedObjects;
    IVectorModel            *pRecipientList;

    MMI_MMS_Composer_Cntx   *pMMSData;
    MMI_MMS_Slide_Link_t    *pCurrentSlide;
    MAE_WChar               *pSelectedFileName;
    MAE_WChar               *pRecipientInfo;
    MAE_WChar               TempURL[FILEMGR_MAX_FILEPATH_SIZE];
    ModelListener_t         MenuL1MdlListener;
    ModelListener_t         OptMenuL1MdlListener;
    ModelListener_t         OptMenuL2MdlListener;
    ModelListener_t         SlideSwitchLButtonMdLsn;
    ModelListener_t         SlideSwitchRButtonMdLsn;
    ModelListener_t         SlideTextMdlListener;
    SVA_FocusedObject_t     *pCurrentFocusedObject;
    SVA_PostEvent_Data_t    PostEventData;
    WidgetHandler_t         MainWdgHandler;
    u8                      *pSelectedFileData;
    u8                      *pSelectedFileType;
    s32                     FocusedObjectIndex;
    u32                     SelectedFileSize;
	u32                     ScrollbarCurrentPos;
    u16                     PlayingTimeRemains;
    u16                     PlayingTimeSecs;    
    u16                     TotalPlayingTimeSecs;
    u8                      AttachmentIdx;
    u8                      InitReq;
    u8                      InitUnCfn;
    u8                      MenuLevel;
    u8                      ObjectListFocusIndex;
    u8                      PlayingTimeMins;
    u8                      SlideIdx;
    u8                      SlideNum;
    u8                      TotalPlayingTimeMins;
    u8                      ViewerMode;
    u8                      NumOfRecipient;
    boolean                 Initializing;
    boolean                 TextAlignTop;
    boolean                 bRecipientListMode;

    ModelListener_t         tVolumeMdlListener;
    boolean                 bVolumeViewShow;
    boolean                 bKeyguardDisabled;
//-----------------------------------------------------------------------------
// Workaround solution: wait for the input widget to provide a new interface
//                      to get current line index at a specified wchar position
//-----------------------------------------------------------------------------
    u32                     *pFocusedObjectsScrollBarStartPosOffset;
    u32                     *pFocusedObjectsScrollBarEndPosOffset;
#ifdef __MMI_OMA_DRM_V1__
    u8                      *pDrmAudioBuffer;
#endif    
#endif //__MMS_MMI_CDMMS__
#ifdef __WAP_MMI_CDWAP__
#ifdef __WAP_MMI_CDWAP_URL_HANDLER__
    SVA_WapStart_Data_t     *pStartWapData;
#endif
#endif

	MsgvwActionStatus_e		eActionStatus;
	boolean					bSuspend;

	u32						nEmbApID;
	StorageInfo_t			tStorageInfo;

} MMI_SVA;

///////////////////////////////////////////////////////////////////////////////////////
//Total scen.


const WdgStaticMenuItem_t ViewerFormOptionMenuTable[] =
{
#ifdef __MMI_VIEW_MSG_IN_OUTBOX_SUPPORT__
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_RESEND},{TXT_OIL1_N_RESEND}},
#endif
    {{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIEW_IMAGE},{TXT_OIL1_N_VIEW_IMAGE}},
    {{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_PLAY_SOUND},{TXT_OIL1_N_PLAY_SOUND}},
#ifdef __MMS_SUPPORT_PLAY_VIDEO__
    {{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_PLAY_VIDEO},{TXT_OIL1_N_PLAY_VIDEO}},
#endif
    {{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIEW_SENDER},{TXT_OIL1_N_VIEW_SENDER}},
    {{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIEW_RECIPIENTS},{TXT_OIL1_N_VIEW_RECIPIENTS}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_REPLY},{TXT_OIL1_N_REPLY}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_FORWARD},{TXT_OIL1_N_FORWARD}},
#ifdef __WAP_MMI_CDWAP__
#ifdef __WAP_MMI_CDWAP_URL_HANDLER__
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_OPEN_LINK},{TXT_OIL1_N_OPEN_LINK}},
#endif
#endif
    {{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_INSTALL},{TXT_OIL1_N_INSTALL}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_DELETE},{TXT_OIL1_N_DELETE}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_CALL_SENDER},{TXT_OIL1_N_CALL_SENDER}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_CALL_RECIPIENT},{TXT_OIL1_N_CALL_RECIPIENT}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_CALL_NUMBER},{TXT_OIL1_N_CALL_NUMBER}},
#ifdef __APP_VIDEO_TELEPHONY__
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIDEO_CALL_SENDER},{TXT_OIL1_N_VIDEO_CALL}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIDEO_CALL_RECIPIENT},{TXT_OIL1_N_VIDEO_CALL}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIDEO_CALL_NUMBER},{TXT_OIL1_N_VIDEO_CALL}},	
#endif	
#ifdef __IP_CALL_MMI__
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_IP_CALL},{TXT_OIL1_N_IP_CALL}},
#else
	{{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_IP_CALL},{TXT_OIL1_N_IP_CALL}},
#endif
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_PLAY_MESSAGE},{TXT_OIL1_N_PLAY_MESSAGE}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_JUMP_TO},{TXT_OIL1_N_JUMP_TO}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_SENDER},{TXT_OIL1_N_SAVE_SENDER}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_RECIPIENT},{TXT_OIL1_N_SAVE_RECIPIENT}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_NUMBER},{TXT_OIL1_N_SAVE_NUMBER}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_EMAIL},{TXT_OIL1_N_SAVE_EMAIL}},
	{{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_URL},{TXT_OIL1_N_SAVE_URL}},
	{{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_OBJECTS},{TXT_OIL1_N_SAVE_OBJECTS}},
	{{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_COPY_TO_PHONE},{TXT_OIL1_N_COPY_TO_PHONE}},
	{{WDG_MENU_ITEM_FLAG_HIDE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_COPY_TO_SIM},{TXT_OIL1_N_COPY_TO_SIM}},
#ifdef __MMI_VIEW_MSG_IN_OUTBOX_SUPPORT__
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_MOVE_TO_DRAFT},{TXT_OIL1_N_MOVE_TO_DRAFT}},
#endif
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_OBJECTS},{TXT_OIL1_N_OBJECTS}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_VIEW_DETAILS},{TXT_OIL1_N_VIEW_DETAILS}}
};
#define ViewerFormOptionMenuSize sizeof(ViewerFormOptionMenuTable)/sizeof(WdgStaticMenuItem_t)

const WdgStaticMenuItem_t ObjectsListOptionMenuTable[] =
{
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_OPEN},{TXT_OIL1_N_OPEN}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE},{TXT_OIL1_N_SAVE}},
	{{WDG_MENU_ITEM_FLAG_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SEND},{TXT_OIL1_N_SEND}}
};
#define ObjectsListOptionMenuSize sizeof(ObjectsListOptionMenuTable)/sizeof(WdgStaticMenuItem_t)

const WdgStaticMenuItem_t ViewerFormOptionMenuReplyL2Table[]=
{
    {{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_REPLY_SMS},{TXT_OIL2_N_SMS}},
    {{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_REPLY_MMS},{TXT_OIL2_N_MMS}}
};
#define ViewerFormOptionMenuReplyL2Size sizeof(ViewerFormOptionMenuReplyL2Table)/sizeof(WdgStaticMenuItem_t)

const WdgStaticMenuItem_t ViewerFormOptionMenuSaveUrlL2Table[]=
{
    {{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_AS_CONTACT},{TXT_OIL2_N_CONTACT}}
#ifdef __WAP_MMI_CDWAP__
#ifdef __WAP_MMI_CDWAP_URL_HANDLER__
    ,{{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_SAVE_AS_BOOKMARK},{TXT_LIL_N_BOOKMARKS}}
#endif
#endif
};
#define ViewerFormOptionMenuSaveUrlL2Size sizeof(ViewerFormOptionMenuSaveUrlL2Table)/sizeof(WdgStaticMenuItem_t)

const WdgStaticMenuItem_t ViewerFormOptionMenuCopyToSimL2Table[]=
{
    {{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_COPY_TO_SIM_MASTER},{TXT_OIL2_N_MASTER_SIM}},
    {{MENUMODEL_ITEM_VISABLE,{DEFAULT_SK,DEFAULT_SK,DEFAULT_SK},MNU_SVA_COPY_TO_SIM_SLAVE},{TXT_OIL2_N_SLAVE_SIM}}
};
#define ViewerFormOptionMenuCopyToSimL2Size sizeof(ViewerFormOptionMenuCopyToSimL2Table)/sizeof(WdgStaticMenuItem_t)

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
//AP Entry function.

MAE_Ret MsgvwConstructor(IApplet *pApplet, u32 nEvt, u32 Param1, u32 Param2);
MAE_Ret MsgvwDestructor(IApplet *pApplet, u32 nEvt, u32 Param1, u32 Param2);

MAE_Ret MsgvwWndCreate(void *pCusHandle, MAE_WndId nWndId, void *pWndData, u32 nWndInitParam);
MAE_Ret MsgvwWndDestroy(void* pCusHandle,MAE_WndId nWndId,void* pWndData);
MAE_Ret MsgvwWndShow(void* pCusHandle,MAE_WndId nWndId,void* pWndData);
MAE_Ret MsgvwWndHide(void* pCusHandle,MAE_WndId nWndId,void* pWndData);

// SMS viewer form
static MAE_Ret _MsgvwWndCreateSmsViewerForm(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroySmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowSmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideSmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetSmsViewerForm(void* pCusHandle,void* pWndData);

// Class0 SMS viewer form
static MAE_Ret _MsgvwWndCreateClass0SmsViewerForm(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyClass0SmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowClass0SmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideClass0SmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetClass0SmsViewerForm(void* pCusHandle,void* pWndData);

// MMS viewer form
static MAE_Ret _MsgvwWndCreateMmsViewerForm(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyMmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowMmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideMmsViewerForm(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetMmsViewerForm(void* pCusHandle,void* pWndData);

// MMS slide selection view
static MAE_Ret _MsgvwWndCreateMmsSlideSelectionView(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyMmsSlideSelectionView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowMmsSlideSelectionView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideMmsSlideSelectionView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetMmsSlideSelectionView(void* pCusHandle,void* pWndData);

// View recipients
static MAE_Ret _MsgvwWndCreateViewRecipients(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyViewRecipients(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowViewRecipients(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideViewRecipients(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetViewRecipients(void* pCusHandle,void* pWndData);

// Objects list
static MAE_Ret _MsgvwWndCreateObjectsList(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyObjectsList(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowObjectsList(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideObjectsList(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetObjectsList(void* pCusHandle,void* pWndData);

// Objects list option menu
static MAE_Ret _MsgvwWndCreateObjectsListOptionMenu(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyObjectsListOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowObjectsListOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideObjectsListOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetObjectsListOptionMenu(void* pCusHandle,void* pWndData);

// Show option menu
static MAE_Ret _MsgvwWndCreateShowOptionMenu(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyShowOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowShowOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideShowOptionMenu(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetShowOptionMenu(void* pCusHandle,void* pWndData);

// View detail
static MAE_Ret _MsgvwWndCreateViewDetail(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyViewDetail(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowViewDetail(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHideViewDetail(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetViewDetail(void* pCusHandle,void* pWndData);

// Play audio view
static MAE_Ret _MsgvwWndCreatePlayAudioView(void *pCusHandle, void *pWndData, u32 nWndInitParam);
static MAE_Ret _MsgvwWndDestroyPlayAudioView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndShowPlayAudioView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndHidePlayAudioView(void* pCusHandle,void* pWndData);
static MAE_Ret _MsgvwWndSetPlayAudioView(void* pCusHandle,void* pWndData);

// Install Provision Profile view
#if 0 
static MAE_Ret _MsgvwWndCreateInstallProvisionProfileView( void *pCusHandle, void *pWndData, u32 nWndInitParam );
static MAE_Ret _MsgvwWndDestroyInstallProvisionProfileView( void *pCusHandle, void *pWndData );
static MAE_Ret _MsgvwWndSetInstallProvisionProfileView( void *pCusHandle, void *pWndData );
#endif

//////////////////////////////////////////////////////////////////////////
// Call back functions

//For AP level
boolean MsgvwStartCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwKeyPressCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwSuspendCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwResumeCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwEmbbeddedCloseCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwVerifyOTAPWCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwGetPropertyCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );
boolean MsgvwSetPropertyCB( IApplet *pApplet, MAEEvent_t nEvt, u32 lparam, u32 dparam );

//For Dialog Callback
MAE_Ret MsgvwConfirmDialogCB(void *pData, MAEEvent_t nEvt, u32 param1, u32 param2);
MAE_Ret MsgvwDialogTimeOutWithExitEvtCB(void *pData, MAEEvent_t nEvt, u32 param1, u32 param2);
#ifdef __MMI_OMA_DRM_V1__
void MsgvwLaunchCdWapDownloadDrmRightsFileCb(void *pvUserData, MAE_Ret nRspCode, void *pvRspData, CmnRspDataFreeCb pfnRspFreeCb);
#endif

//For MMSTX Callback
#ifdef __MMS_MMI_CDMMS__
#if defined(__MMS_MMI_CDMMS__) && defined(__USER_FILE_DELETER__)
MAE_Ret MsgvwCloseDialogAndFileManagerDeleteApp(void *pApplet, MAEEvent_t nEvt, u32 nParam1, u32 nParam2);
void _MsgvwOptSendDeleteFile(MMI_SVA *pThis);
static void _MsgvwMmsListFilesGetOptionMenuCb(void *pUserData, u32 nFolderLevel, void *pFileInfo, u32 *pOptonMeneuItemNum, const WdgStaticMenuItem_t **pOptionMeneuItemList, PfnFileMgrOptMenuSelectCb *pfnSelectCb);
static void _MsgvwMmsLaunchFileMangerGetVirtualVolumeListCb(void *pUserData, u32 *pNumber, const FileMgrVirtualVolumeItem_t **pVirtualVolumeList);
static void _MsgvwMmsCommonLaunchFileMangerGetL1SoftkeyCb(void *pUserData, u32 nFileNumber, u32 *pnLSKVal, u32 *pnCSKVal, u32 *pnRSKVal, PfnFileMgrL1SoftKeySelectCb *pfnLiselectCb);
MAE_Ret _MsgvwMmsLaunchFileMangerDeleteApp(MMI_SVA *pThis, FileMgrApp_FilterType_e nFilterType);
#endif
void MsgvwGetMmsAllSlidesCB(void *ps, MMI_GetMmsAllSlidesCnf_t *pGetMmsAllSlidesCnf);
void MsgvwGetMmsSubjectCB(void *ps, MMI_GetMmsSubjectInfoCnf_t *pMmsGetSubjectInfoCnf);
void MsgvwGetMmsAllAttachmentsCB(void *ps, MMI_GetMmsAllAttachesCnf_t *pGetMmsAllAttachesCnf);
void MsgvwGetMmsReceiverListCB(void *ps, MMI_GetMmsReceiverListCnf_t *pMmsGetRecvLstCnf);
void MsgvwGetMmsSenderCB(void *ps, MMI_GetMmsSenderAddrCnf_t *pMmsGetSenderAddrCnf);
#endif

//For MSGMGR Callback
void MsgvwCopyMsgCB(void *ps, SMI_MsgMgrStatus_e param1, u32 param2);
void MsgvwCopyPhoneMsgToSimCB(void *ps, SMI_MsgMgrStatus_e eOpResult, SMI_MsgID_t nMsgID);
void MsgvwCopySimMsgToPhoneCB(void *ps, SMI_MsgMgrStatus_e eResult, SMI_SIMData_t *pSIMData);
void MsgvwDelMsgByIdCB(void *ps, SMI_MsgMgrStatus_e Result);
void MsgvwModifyMsgCB(void *ps, SMI_MsgMgrStatus_e Result);
void MsgvwOperationNotBusyNotifyCB(void *ps);
void MsgvwRetrvMsgDataFromSimCB(void *ps, SMI_MsgMgrStatus_e Result, SMI_SIMData_t *pSIMData);

void MsgvwUpdateHeaderNotifyCB(void *ps, SMI_LIST_PARAM ListParam, IArrayModel *pArrayModel);

//For SMS Callback
void MsgvwSIMChangeReadyCB(void *ps, COMMON_SIM_CARD_STATUS_e eSIMCardStatus);
//void MsgvwSIMRetrieveMsgOKCB(void *ps);
//void MsgvwSIMDeactiveOKCB(void *ps, u8 nSimModule);

//For MMS Callback
void MsgvwMessageReSyncStartIndCB(void *ps);

//For CC service Callback
void MsgvwCCAcceptCallCB(void *ps, boolean bResult, u32 nCause);

//For Widget

/* sva_MessageSwitchLButtonMdlListener
 */
static void sva_MessageSwitchLButtonMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 dwParam,IWidget *pWidget);

/* sva_MessageSwitchRButtonMdlListener
 */
static void sva_MessageSwitchRButtonMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 dwParam,IWidget *pWidget);

static void _MMS_SliderList_MenuMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);

//For EVT_VIEWMDL_MULTILINE_DISPLAY_CHANGE callback
static void MsgvwViewerFormMultilineDisplayChangeCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, MultiLineViewData_t *pMultiLineData, IWidget *pWidget);

//For EVT_VIEWMDL_SCROLL_CHANGE_BY_TOUCH callback
static void MsgvwViewerFormScrollChangeByTouchCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 nReserve, IWidget *pWidget);

//For EVT_VIEWMDL_Viewport_SCROLL_CHANGE_BY_TOUCH callback
#ifdef __TOUCH_SCREEN_MMI__
static void MsgvwViewportScrollChangeCb (void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, ScrollData_t *pScrollData, IWidget *pIWidget);
#endif

//For EVT_VIEWMDL_TOUCHED_POS callback
static void MsgvwViewerFormTouchPositionCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 nTouchedPos, IWidget *pWidget);
//static void MsgvwSlideTextTouchPositionCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 nTouchedPos, IWidget *pWidget);

#ifdef __MMS_MMI_CDMMS__

static void MsgvwObjectListMenuOnFocusCB(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, FocusInfo_t *pFocusInfo, IWidget *pWidget);
static void MsgvwRecipientListMultilineDisplayChangeCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, MultiLineViewData_t *pMultiLineData, IWidget *pWidget);
static void MsgvwRecipientListScrollChangeByTouchCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 nReserve, IWidget *pWidget);
static void MsgvwRecipientListTouchPositionCb(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 nTouchedPos, IWidget *pWidget);

#endif

//For View Template
static void sva_MessageCallOptionMenu_InitItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType, IWidget *pMenu, u32 u32Index);
static void sva_MessageCallOptionMenu_FreeItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType);

/* sva_mms_InitObjectListItem
 */
static void sva_mms_InitObjectListItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType, IWidget *pMenu, u32 u32Index);
/* sva_mms_FreeObjectListItem
 */
static void sva_mms_FreeObjectListItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType);


//////////////////////////////////////////////////////////////////////////
// Internal functions

static boolean _MsgvwViewerFormEvtKeyPressHandle(MMI_SVA* pThis, u32 param1, u32 param2);
static boolean _MsgvwViewRecipientsEvtKeyPressHandle(MMI_SVA* pThis, u32 param1, u32 param2);
static boolean _MsgvwObjectsListEvtKeyPressHandle(MMI_SVA* pThis, u32 param1, u32 param2);
#ifdef __MMS_MMI_CDMMS__
static boolean _MsgvwPlayAudioViewEvtKeyPressHandle(MMI_SVA* pThis, u32 param1, u32 param2);
#endif
static void _MsgvwWaitChangeMessage(MMI_SVA* pThis);



//static void _MsgvwPlaySoundEntry(MMI_SVA* pThis);
//static void _MsgvwPlaySoundExit(MMI_SVA* pThis);

static void _MsgvwForward(MMI_SVA* pThis);
static void _MsgvwReply(MMI_SVA* pThis, SVA_Reply_TYPE_e replyType);
#ifdef __MMS_MMI_CDMMS__
static void _MsgvwOpenLink(MMI_SVA* pThis);
#endif
static void _MsgvwCall(MMI_SVA* pThis, u32 param1, u32 param2);
#ifdef __APP_VIDEO_TELEPHONY__
static void _MsgvwVTCall(MMI_SVA* pThis, u32 param1, u32 param2);
#endif
static void _MsgvwSaveObjects(MMI_SVA* pThis, u32 param1, u32 param2);
#ifdef MSG_PRIVATE_FOLDER
static void _MsgvwMove(MMI_SVA* pThis, SMI_MsgLocation_e dLocation);
#endif
static void _MsgvwCopy(MMI_SVA* pThis, u32 param1, u32 param2);
static void _MsgvwSaveMsg(MMI_SVA* pThis);

static void _MsgvwSuspend(MMI_SVA* pThis);

static void _MsgvwExit(MMI_SVA* pThis);

static void _MsgvwDeregisterButtonClick(MMI_SVA *pThis);

static void _MsgVwOptUpdateMenu(MMI_SVA *pThis, IWidget *pOptMenu, boolean bIsActionKeyPressed);
static void _MsgVwSetOptionItem(MMI_SVA* pThis,MCI_SMCntObjType_e type, IWidget *pOptMenu, u32 idx );

static u8   sva_MessageCallOptionMenuItemSize(MMI_SVA *pThis);

static MAE_Ret _MsgvwGetDetailView(SMI_MsgID_t MsgID, SMI_MsgLocation_e location, SMI_MsgHdr_t **pMsgHeader, HWIN hWin, MMS_VIEWER_DetailViewWdgList *pWdgList, MAE_WChar *pDetail, IBase * pOwner);
static MAE_Ret _MsgvwCreateDetailView(HWIN hWin, MMS_VIEWER_DetailViewWdgList *pWdgList);
static MAE_Ret _MsgvwUpdateDetailView(IWidget *pTextWdg, IWidget *pViewPort, MAE_WChar *pDetail, IBase *pOwner, boolean bMultiNumber);

//static void SVA_LoadViewerView(MMI_SVA* pThis);
static void SVA_FreeVectorItem(void* pData, IBase* pOwner);
static s32 SVA_Check_ModifyConfirm(SMI_MsgMgrStatus_e Result, boolean bSuccess);
static s32 SVA_Check_KeyPress(u32 key1, u32 key2);
static void SVA_CloseDialog(MMI_SVA* pThis);
static void SVA_CloseDialogWithExitEvt(void* pData);
static void SVA_CloseDialogWithBackEvt(void* pData);
#if defined(__MMS_MMI_CDMMS__) && defined(__USER_FILE_DELETER__)
MAE_Ret SVA_CloseDialogAndFileManagerDeleteApp(void *pApplet, MAEEvent_t nEvt, u32 nParam1, u32 nParam2);
#endif
static void SVA_ProgressMainWidgetHandlerFree(MMI_SVA* pThis);
static boolean SVA_ProgressMainWidgetHandler(MMI_SVA* pThis, MAE_EventId evt, u32 Parm1, u32 Parm2);
//void SVA_ProgressListener(MMI_SVA *pThis, ModelEvent_t *pMdlEvent);
static MAE_Ret SVA_LoadProcessDialog(MMI_SVA* pThis,u32 nTextID, boolean bAuto);
static MAE_Ret SVA_LoadDialog(MMI_SVA* pThis,u32 nTextID,u32 nViewID ,SVA_Close_Dialog_Method_TYPE_e CloseMethod);
static void SVA_OptUpdateMenu( MMI_SVA *pThis, IMenuModel *pMenuModel, boolean bIsActionKeyPressed );
static void SVA_OptMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
#ifdef MSG_PRIVATE_FOLDER
static void SVA_Get_MoveToLocation( MMI_SVA *pThis, SMI_MsgLocation_e *dLocation);
#endif
//static void SVA_Viewer_Mdlistener(void *pUsrData, ModelEvent_t *pMdlEvent);
static MAE_Ret SVA_Get_NextFocusedItem(MMI_SVA *pThis, u32 *pStart, u32 *pEnd, boolean bForward);
static void SVA_Free_VectorModelItem(void *pData, void *pOwner);
static MAE_Ret SVA_CreateMsgHdr(MMI_SVA* pThis,  SMI_MsgLocation_e msgLoc, SMI_MsgHdr_t **pMsgHdr);
static s32 SVA_isCorrectSoftKey(MMI_SVA* pThis,void *pSM, u32 keyID, u32 keyValue);
static void SVA_Free_PhonebookAp_Param(IBase *pIssuer, u32 Param);

void SVA_ProcessNewMsgIdMdlListener (void *pUsrData, ModelEvent_t *pMdlEvent);
void SVA_GetNewMsgIdReqMdlListener (void *pUsrData, ModelEvent_t *pMdlEvent);
void SVA_MsgIdxInfoDataMdlListener (void *pUsrData, ModelEvent_t *pMdlEvent);
MAE_Ret SVA_UpdateTheMessageContent(MMI_SVA *pThis, u8 *pRawDataBuf, u32 nRawDataBuflen , boolean *pbSetRead);
MAE_Ret  SVA_UpdateClass0Content(SVA_INIT_DATA_t *pData,MMI_SVA *pThis);
void    SVA_Class0Msg_PopFromStack( MMI_SVA *pThis );
MAE_Ret SVA_Class0Msg_PushToStack( MMI_SVA *pThis, SVA_INIT_DATA_t *pData );
MAE_Ret SVA_Class0Msg_SaveContent( MMI_SVA *pThis );
MAE_Ret SVA_Class0Msg_UpdateContent( MMI_SVA *pThis );

/********************************************************** FOR MMS **********************************************************/
#ifdef __MMS_MMI_CDMMS__

static MAE_Ret _MsgvwMmsLoadViewer( MMI_SVA *pThis );
static void _MsgvwMmsSetFocusedObject( MMI_SVA *pThis, s32 nOffsetItem );
static void _MsgvwMmsUpdateView( MMI_SVA *pThis, u8 nAreas );
static void _MsgvwMmsChangeSlide( MMI_SVA *pThis, u8 nIndex );
static void _MsgvwMmsUpdateData( MMI_SVA *pThis, u8 nAreas );
static void _MsgvwMmsDeinitFocusedObjects( MMI_SVA *pThis );
static boolean _MsgvwMmsMainWdgHandleEvent( void *pUsrData, MAE_EventId evt, u32 param1, u32 param2 );
static void _MsgvwMmsMainWdgHandleEventFree( void *pUsrData );

/* sva_mms_SlideSwitchLButtonMdlListener
 */
#ifdef __TOUCH_SCREEN_MMI__
static void sva_mms_SlideSwitchLButtonMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 dwParam,IWidget *pWidget);

/* sva_mms_SlideSwitchRButtonMdlListener
 */
static void sva_mms_SlideSwitchRButtonMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, u32 dwParam,IWidget *pWidget);
#endif

/* sva_mms_ObjectListMenuMdlListener
 */
static void sva_mms_ObjectListMenuMdlListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);

static u32 _MsgvwMmsGetLineHeightByFontCate( MMI_SVA *pThis, u32 eFontCate );
static u32 _MsgvwMmsGetFocusedObjectScrollBarOffset( MMI_SVA *pThis, u16 nIndex, s32 nDirection );

static void _MsgvwMmsGetMmsAllSlidesInitProc( MMI_SVA *pThis, MMI_GetMmsAllSlidesCnf_t *pGetMmsAllSlidesCnf);
static void _MsgvwMmsCreateTempFilesForSlidesObjectsInitProc( MMI_SVA *pThis, u32 objNum);
static void _MsgvwMmsCreateTempFilesForAttachmentsInitProc( MMI_SVA *pThis, u32 attachNum);
static void _MsgvwMmsGetMmsAllAttachmentsInitProc( MMI_SVA *pThis, MMI_GetMmsAllAttachesCnf_t *pGetMmsAllAttachesCnf);
static void _MsgvwMmsGetMmsSenderInitProc( MMI_SVA *pThis, MMI_GetMmsSenderAddrCnf_t *pMmsGetSenderAddrCnf);

static void _MsgvwPlayMessageEntry(MMI_SVA* pThis);
static void _MsgvwPlayMessageExit(MMI_SVA* pThis);
static void _MsgvwMessagePlayingEntry(MMI_SVA* pThis);
static void _MsgvwMessagePlayingExit(MMI_SVA* pThis);
static void _MsgvwStopMessagePlaying(MMI_SVA* pThis);
static void _MsgvwViewImage(MMI_SVA* pThis);
#ifdef __MMS_SUPPORT_PLAY_VIDEO__
static void _MsgvwPlayVideo(MMI_SVA* pThis);
#endif
static void _MsgvwLaunchImageViewer(MMI_SVA *pThis);
static void _MsgvwOpenSimpleAudioPlayer(MMI_SVA *pThis);
static void _MsgvwCloseSimpleAudioPlayer(MMI_SVA *pThis);
#ifdef __MMS_SUPPORT_PLAY_VIDEO__
static void _MsgvwLaunchVideoPlayer(MMI_SVA *pThis);
#endif

void    SVA_MMS_AddSelectedText( MMI_SVA *pThis, u32 nStartPos, u32 nEndPos, u8 nType, MAE_WChar *pText );

MAE_Ret SVA_MMS_CreateTempFilesForAttachments( MMI_SVA *pThis, u8 nIndex );
MAE_Ret SVA_MMS_CreateTempFilesForSlideObjects( MMI_SVA *pThis, u8 nIndex );
void    SVA_MMS_DeleteTempFiles( MMI_SVA *pThis );

MAE_Ret SVA_MMS_InitFocusedImageObject( MMI_SVA *pThis );
void    SVA_MMS_InitFocusedObjects( MMI_SVA *pThis );
void    SVA_MMS_InitSelectedFileInfo( MMI_SVA *pThis, u8 nSelectedIdx );

MAE_Ret SVA_MMS_LoadViewerView( MMI_SVA *pThis );
void    SVA_MMS_ObjectListInitSelectedFileInfo( MMI_SVA *pThis );
void    SVA_MMS_OpenSelectedFile( MMI_SVA *pThis );
void    SVA_MMS_SaveSelectedFile( MMI_SVA *pThis );

void    SVA_MMS_PlayMessage_UpdatePlayingTime( MMI_SVA *pThis );
void    SVA_MMS_ReloadObjectList( MMI_SVA *pThis );
void    SVA_MMS_RemoveTempFolder( MMI_SVA *pThis );
//MAE_Ret SVA_MMS_SaveObjects( MMI_SVA *pThis, MAE_WChar *pFileName, void *pData, u32 nDataSize, u32 *pContentID, boolean bIsTempFile );
MAE_Ret SVA_MMS_CreateSendObjects( MMI_SVA *pThis, MAE_WChar *pFileName, void *pData, u32 nDataSize);
//MAE_Ret SVA_MMS_SaveSelectedFile( MMI_SVA *pThis );
MAE_Ret SVA_MMS_SendSelectedFile( MMI_SVA *pThis );

#ifdef __TOUCH_SCREEN_MMI__
static boolean _MsgvwMmsSetFocusedObjectTOUCH( MMI_SVA *pThis, u16 nPosX, u16 nPosY );
#endif

void    SVA_MMS_UpdateSenderRecipient( MMI_SVA *pThis );

static void _MMS_Free_ImageViewerAp_Param(IBase *pIssuer, u32 Param);
static void _MMS_Free_VdoPlayerAp_Param(IBase *pIssuer, u32 Param);
static void _MMS_SliderList_InitItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType, IWidget *pMenu, u32 u32Index);
static void _MMS_SliderList_FreeItem(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType);
static void SVA_SetMMSOptionItem(MMI_SVA* pThis,u8 MMSObjecttype, IWidget *pOptMenu, u32 idx );
static void _MMS_Handle_PlayCB(void *pData, MediaSrvErrCode_e eErrorCode);
static void _MMS_Handle_StopCB(void *pData, MediaSrvErrCode_e eErrorCode);
static void _MMS_Handle_PlayStatusCB(void *pData, u32 nCusData, AudioSrvPlayStatusEvent_e eEventId, u32 nInfoData);
static void _MMS_Handle_InterruptCB(void *pData, u32 nCusData, MediaSrvInterruptStatus_e eStatus);
static void _MMS_OpenVolumeSettingView(MMI_SVA* pThis);
static void _MMS_VolumeModelListener(void *pUserData,  ModelEvent_t *pModelEvent);
static void _MMS_VolumeDialog_Callback(void* data);
static void SVA_MMSFreeRecipientListVectorItem(void* pData, IBase* pOwner);
void MsgvwGetReceiveFolderCb(void *pvUserData, MAE_Ret nRspCode, AppGetDirRspData_t *psRspData, AppGetDirByBrowseRspDataFreeCb pfnRspDataFreeCb);
#ifdef __CALENDAR_IMPORT_VCS_MMI__
static void _MMS_LoadVCSImportSuccessDialog(MMI_SVA* pThis, u32 nTextID, u8 nCalNum, u8 nToDoNum);
#endif // __CALENDAR_IMPORT_VCS_MMI__
#endif // __MMS_MMI_CDMMS__

static void sva_mms_FreePicViewerAppParams( IBase *pOwner, u32 Param );

/* sva_mms_DecodeNotify
 */
static void _MsgvwMmsDecodeNotify( IImage *pIImage, IBase *pUsrData, ImgStatus_t nStatus );

static MAE_Ret _MsgvwLoadSmsViewer(MMI_SVA* pThis);
static void _MsgvwSmsUpdateMessageSwictchIcon(MMI_SVA *pThis, SMS_VIEWER_VIEW_WdgList *pWdgList);
static boolean _MsgvwSmsViewerFormEvtKeyPressHandle(MMI_SVA* pThis, u32 param1, u32 param2);

#ifdef __MMI_VIEW_MSG_IN_OUTBOX_SUPPORT__
MAE_Ret _MsgvwappDualSimMenuWndHdl(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _MsgvwCreateDualSimMenuWnd(void *pWndHandle, void *pWndData, u32 nWndInitParam);
MAE_Ret _MsgvwLoadDualSimMenuView(MMI_SVA *pThis, DualSimMenuWndData_t *pData);
void _MsgvwDualSimMenuSelectCB (void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
void _MsgvwDualSimMenuBackCB(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
void _MsgvwMsgMgrSrvModifyMsgParamReqCB(void *pThis, SMI_MsgMgrStatus_e eResult);
MAE_Ret _MsgvwMoveToDraft(MMI_SVA *pThis);
#endif

#endif /* __MMI_MESSAGEVIEWERAPP_PRIV_H__ */
