/**
* @file mmi_stkapp_priv.h
*
* State Machine Application - STKAPP
* Generated by XFSM v1.0, CodeVer=v0.24
*
* Class Id: CLSID_STKAPP
*
*
* @version $Id: mmi_stkapp_priv.h 33427 2009-06-16 05:34:28Z sho.ding $
*/
#ifndef __MMI_STKAPP_PRIV_H__
#define __MMI_STKAPP_PRIV_H__

#include "mmi_baseapplet.h"
#include "mmi_stkapp.h"
#include "mmi_stksrv.h"
#include "mmi_ccsrv.h"
#include "mmi_srv_audio.h"
#include "mmi_launcher_cc.h"

#include "mmi_common_vtm.h"
#include "mmi_stkapp_id.h"
#include "stkapp_resource.h"


#define STK_NO_RESPOND_TIMER                        30000 /*30 s*/
#define STK_NOT_SUPPORTED_TIMER                   2000
#define STK_NO_ACTION_TIMER                         10000 /*30 s*/
#define STK_DELAY_TIMER                             8000
#define STK_PLAYTONE_DELAY_TIMER                    2000
#define STK_TONE_INTERVAL_TIMER                     1000
#define STK_DUMMY_EVENTID                           -66
#define cSTKAPP_MODE_STKApp                         0
#define cSTKAPP_MODE_Idle                           1
#define cSTKAPP_MODE_Init                           2
#define cSTKAPP_MODE_Active                         3
#define cSTKAPP_MODE_Active_Wait                    4
#define cSTKAPP_MODE_Active_ShowTitleText           5
#define cSTKAPP_MODE_Active_ShowMenu                6
#define cSTKAPP_MODE_Active_SelectItem              7
#define cSTKAPP_MODE_Active_DisplayText             8
#define cSTKAPP_MODE_Active_GetInput                9
#define cSTKAPP_MODE_Active_GetInput_Check          10
#define cSTKAPP_MODE_Active_GetInput_ShowText       11
#define cSTKAPP_MODE_Active_GetInput_Edit           12
#define cSTKAPP_MODE_Active_GetInput_YesNo          13
#define cSTKAPP_MODE_Active_SetupCall               14
#define cSTKAPP_MODE_Active_SetupCall_CallNotify    15
#define cSTKAPP_MODE_Active_SetupCall_MakeCall      16
#define cSTKAPP_MODE_Active_SendData                17
#define cSTKAPP_MODE_Active_PlayTone                18
#define cSTKAPP_MODE_Active_LaunchBrowser           19
#define cSTKAPP_MODE_Active_Refresh                 20
#define STKAPP_IEVT_InitOK                          (CLSID_STKAPP << 16 | 1)
#define STKAPP_IEVT_OK                              (CLSID_STKAPP << 16 | 2)
#define STKAPP_IEVT_BACK                            (CLSID_STKAPP << 16 | 3)
#define STKAPP_IEVT_tmr_NO_RESPOND                  (CLSID_STKAPP << 16 | 4)
#define STKAPP_IEVT_tmr_DELAY                       (CLSID_STKAPP << 16 | 5)
#define STKAPP_IEVT_Next                            (CLSID_STKAPP << 16 | 6)
#define STKAPP_IEVT_ShowTitleText                   (CLSID_STKAPP << 16 | 7)


typedef struct StkappDrawTextData_TAG {
    MAE_WChar *strTitle ;
    MAE_WChar *strContent ;
    boolean bYesNo;
    boolean bIsOnlyOk ;
} StkappDrawTextData_t;

typedef struct StkappLoadMenuData_TAG {
    boolean bMainMenu ;
} StkappLoadMenuData_t;

typedef struct StkappLaunchEditorData_TAG {
    MAE_WChar *strTitle;
    MAE_WChar *strContent;
    STKSRV_InputFormat_e format;
    u16 u16Min;
    u16 u16Max;
    boolean echo ;
} StkappLaunchEditorData_t;

typedef struct StkAppData_t_ {
    APPLET_BASE_ELEMENTS;
    ISTKSRV     *pStkSrv;
    ICCSRV      *pCcSrv;
    IWidget     *pIInputWdg;
    IWidget     *pIDrawTextInputWdg;
    IWidget     *pIOptionMenuWdg;
    IView *pIView;
    IWidget *pIMenuWdg ;
    STKSRV_CommandType_e AppStartBy;  //Applet is started by which command
    u8 ModuleID;    //This is for SIM1 or SIM2
    u32 u32ToneTimeInterval;
    AudioSrvToneID_e  eToneType;
    MAE_EventId u32EventID;
    HWIN hWin;
    u8 PrevMode;
    u8 CurrentMode;
    STKSRV_InputFormat_e eFormat;
} StkAppData_t;

MAE_Ret StkConstructor(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
MAE_Ret StkDestructor(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkStartCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkStopCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkKeyPressCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkTsPressCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkResumeCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);
boolean StkSuspendCb(IApplet *pApplet, u32 nEvt, u32 param1, u32 param2);

void _StkHandleKeyPressShowTitleText(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressWait(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressDisplayText(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressLaunchBrowser(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressGetInputEdit(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressGetInputShowText(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressGetInputYesNo(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressPlayTone(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressRefresh(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressSendData(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
void _StkHandleKeyPressCallNotify(StkAppData_t*pThis,u32 nEvt, u32 param1, u32 param2);
#ifdef __SIM_NO_RSP_HANDLING__
void _StkSIMNoRspCB(void *pThis, u8 nDual);
#endif //__SIM_NO_RSP_HANDLING__
void _StkDisplayTextCB( void *pThis, u32 nDual ) ;
void _StkGetInkeyCB( void *pThis, u32 nDual ) ;
void _StkGetInputCB( void *pThis, u32 nDual ) ;
void _StkPlayToneCB( void *pThis, u32 nDual ) ;
void _StkRefreshCB( void *pThis, STKSRV_RefreshType_e eType,u32 nDual ) ;
void _StkSelectItemCB( void *pThis, u32 nDual ) ;
void _StkSendDTMFCB( void *pThis, u32 nDual ) ;
void _StkSendSSCB( void *pThis, u32 nDual ) ;
void _StkSendSMSCB( void *pThis, u32 nDual ) ;
void _StkSendUSSDCB( void *pThis, u32 nDual ) ;
void _StkSetupCallCB( void *pThis, u32 nDual ) ;
void _StkSetupErrorIndCB( void *pThis, STKSRV_Error_e eErrorType,u32 nDual ) ;
void _StkCallBackProcess(StkAppData_t* pThis, u32 nDual ,u32 nEvt ) ;
void _StkRegSrvCB(void) ;

MAE_Ret _StkWndHdlShowTitleText(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlShowMenu(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlCallNotify(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlDisplayText(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlGetInputShowText(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlGetInputYesNo(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlGetInputEdit(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlGetInputEditOption(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlSendData(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlPlayTone(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);
MAE_Ret _StkWndHdlRefresh(void *pCusHandle, const WindowMsg_t *pWndMsg, void *pWndData, u32 nWndInitParam);

void _StkInitEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveActC(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveWaitEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveWaitExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveWaitCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveWaitCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveWaitActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowTitleTextEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowTitleTextExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndC(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndD(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndE(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndF(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndG(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveShowTitleTextCndH(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowMenuEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowMenuExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowMenuActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveShowMenuActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSelectItemEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSelectItemExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSelectItemActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveDisplayTextEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveDisplayTextExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StlActiveDisplayTextCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveDisplayTextActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveDisplayTextActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveLaunchBrowserEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveLaunchBrowserExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StlActiveLaunchBrowserCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveLaunchBrowserActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveLaunchBrowserActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputCheckEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputCheckCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputCheckCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputCheckcndC(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputShowTextEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputShowTextExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputShowTextCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputShowTextCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputShowTextActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputEditCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditActC(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputEditActD(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputYesNoEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputYesNoExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveGetInputYesNoCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputYesNoActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveGetInputYesNoActB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSetupCallCallNotifyEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSetupCallCallNotifyExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveSetupCallCallNotifyCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveSetupCallCallNotifyCndB(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSetupCallCallNotifyActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSetupCallMakeCallEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSendDataEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveSendDataExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveSendDataCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActivePlayToneEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActivePlayToneExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActivePlayToneCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActivePlayToneActA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveRefreshEntry(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
void _StkActiveRefreshExit(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
s32  _StkActiveRefreshCndA(StkAppData_t* pThis, u32 nEvt, u32 param1, u32 param2);
boolean _StkIsModeActive(StkAppData_t *pThis, u8 nMode);
void _StkFreeMenuModelDataText(WdgDynamicMenuItemPtr_t *pItemDataPtr, HWIN hWin, WdgMenuItemType_e eItemType);
void _StkLoadMenuData(StkAppData_t *pThis, boolean bMainMenu);
void _StkDrawText(StkAppData_t *pThis, MAE_WChar *strTitle, MAE_WChar *strContent, boolean bYesNo ,  boolean bIsOnlyOk);
void _StkSetDrawText(void *pCusHandle, MAE_WndId nWndId);
void _StkLaunchEditorOption(StkAppData_t *pThis);
void _StkLaunchEditor(StkAppData_t *pThis, MAE_WChar *strTitle, MAE_WChar *strContent, STKSRV_InputFormat_e format, u16 u16Min, u16 u16Max, boolean echo);
void _StkCleanFuncForCCAP(IBase *pIssuer, u32 Param);
void _StkDelayToneTimerCb(void* data);
void _StkNoActionTimerCb(void* data);
boolean _StkInfoDlgCb(void *pApplet, u32 nEvt, u32 param1, u32 param2) ;
void _StkNoRespondTimerCb(void* data);
void _StkDelayTimerCb(void* data);
void _StkMenuWidgetListener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
void _StkTextModelListener (void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, TextInfo *pTextInfo, IWidget *pWidget);
void _StkOptionMenuViewMdlListener (void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
void _StkOptMenuL2Listener(void *pApplet, void *pUsrData, WidgetEvtCode_t nEvtCode, HistoryInfo_t *pHistoryInfo, IWidget *pWidget);
MAE_WChar* _StkGetTitleWChar(StkAppData_t *pThis);
AudioSrvToneID_e _StkConvertToMediaToneID(STKSRV_ToneType_e eToneType);
void _StkLaunchCcInfo(void *pvUserData,MAE_Ret nRspCode) ;
void _StkLaunchBrowserInfo( void *pvUserData,MAE_Ret nRspCode);

#endif /* __MMI_STKAPP_PRIV_H__ */
