////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2006-2009 MStar Semiconductor, Inc.
// All rights reserved.
//
// Unless otherwise stipulated in writing, any and all information contained
// herein regardless in any format shall remain the sole proprietary of
// MStar Semiconductor Inc. and be kept in strict confidence
// (¡§MStar Confidential Information¡¨) by the recipient.
// Any unauthorized act including without limitation unauthorized disclosure,
// copying, use, reproduction, sale, distribution, modification, disassembling,
// reverse engineering and compiling of the contents of MStar Confidential
// Information is unlawful and strictly prohibited. MStar hereby reserves the
// rights to any and all damages, losses, costs and expenses resulting therefrom.
//
////////////////////////////////////////////////////////////////////////////////

#ifndef MDL_IMAGE_CAPTURE_HANDLE_H
#define MDL_IMAGE_CAPTURE_HANDLE_H

/*--------------------------------------------------------------------------*/
/* INCLUDE FILE                                                             */
/*--------------------------------------------------------------------------*/
#include "vm_msgof.hc"
#include "sys_Rtk_Vmoshi.h"
#include "srv_resmgr_mml_forward.h"
#include "MML_Utility.h"
#include "srv_resmgr_mmlimage_types.h"

/*=============================================================*/
// Extern definition
/*=============================================================*/
#define MDL_IMG_CAP_PARS_MBX      VM_MBX_CUS33
#define MDL_IMG_CAP_MAIN_MBX      VM_MBX_CUS34
#define MDL_IMG_CAP_SUB_MBX       VM_MBX_CUS48

/*=============================================================*/
// Macro definition
/*=============================================================*/
#ifndef VM_MSG_DEF
#define VM_MSG_DEF(_ENUM_, _UNION_)		_ENUM_,
#endif
enum{
#include "mdl_imgcapture_message_define__.hi"
};
#define MAX_IMG_CAP_OUTPUT_WIDTH          2592 /* Max output image width in pixels (3M pixel) */
#define MAX_IMG_CAP_OUTPUT_COMPRESS_LEV   1000 /* Max output image compression level */
#define MAX_IMG_CAP_PICS_TAKEN            16 /* Max pictures taken */
#define MAX_IMG_CAP_SKIP_FRAME            15 /* Max skip frame */

#define MDL_IMG_CAP_CMD_TIMEOUT           15000 /**< MMP command time out (ms) */

#define MDL_IMG_CAP_MFREE(pMem)           {if(pMem) MsReleaseMemory(pMem);}

/*=============================================================*/
// Data type definition
/*=============================================================*/

/**
 * @brief Internal msg ID for image-capture
 */
typedef enum
{
  MDL_IMG_CAP_CTL_INTER_MESSAGE = (MDL_IMG_CAP_CTL_DEVMSG + 0x50),
  MDL_IMG_CAP_CTL_INTER_ENCODE_STATUS,
  MDL_IMG_CAP_CTL_INTER_STOP_CONTINUOUS_CAPTURE_STATUS,
  MDL_IMG_CAP_CTL_INTER_STOP_CONTINUOUS_CAPTURE_IGNORE_STATUS,
  MDL_IMG_CAP_CTL_INTER_NOTIFY_ENCODE_COMPLETE_EVENT,   /* Encode complete event              */
  MDL_IMG_CAP_CTL_INTER_NOTIFY_ENCODE_COMPLETE_STATUS,  /* Encode complete state change       */
  MDL_IMG_CAP_CTL_INTER_NOTIFY_ENCODE_ERROR_EVENT,      /* Encode error event                 */
  MDL_IMG_CAP_CTL_INTER_NOTIFY_ENCODE_ERROR_STATUS,     /* Encode error state change          */

  MDL_IMG_CAP_CTL_INTER_SETUP_ERROR_CASE,               /* Setup error case for image-capture */
  MDL_IMG_CAP_CTL_INTER_COUTINUE_TIMER,                 /* Timer to continue unfinished job   */
  MDL_IMG_CAP_CTL_INTER_MAIN_TASK_TIMER,                /* Timer to main task driver   */
  MDL_IMG_CAP_CTL_INTER_GET_CAPTURE_INFO,               /* Encode GET CAPTURE INFO   */
} MdlImgCapCtlMsgId_e;


/**
 * @brief Indicate image-capture unit testing scenerio
 */
typedef enum
{
  MDL_IMG_CAP_ALL_SUCESS,       /* all encode success                                 */
  MDL_IMG_CAP_FOLDER_NOT_EXIST, /* encode happen the designed path is not exist error */
  MDL_IMG_CAP_STOP_ERROR,       /* stop encoding fail                                 */
  MDL_IMG_CAP_NO_FREE_SPACE,    /* encode happen no free space error in Nth capture   */
  MDL_IMG_CAP_UNKNOWN_ERROR,    /* encode happen unknown error in Nth capture         */
} MdlImgCapWbErr_e;


/* Temporarily declare here, if include imgcapture_main.h will compile fail. */
/* Common   (0x0000 ~ 0x0FFF) */
/*
typedef enum {

    MSMERR_OK_TEMP = 0x0000,
    MSMERR_JPE_FAIL_TEMP = 0x5000,
    MSMERR_JPE_IBUFOV_TEMP = 0x5001,
    MSMERR_JPE_OUTOFDISK_TEMP = 0x5002,
    MSMERR_JPE_REDO_TEMP = 0x5003,
    MSMERR_CREATE_FILE_ERR_TEMP = 0x5004,
    MSMERR_JPE_TIMEOUT_TEMP = 0x5005,
    MSMERR_JPE_NOT_SUPP_RESOLUTION_TEMP = 0x5006,
    MSMERR_JPE_SUCCESS_TEMP = 0x5007,
    MSMERR_JPE_SUCCESS_STOP_CONTINUOUS_CAPTURE_TEMP = 0x5008
} MSMIMGCAPErrcode_e;
*/


/**
 * @brief the structure defined the response massage body in main task.
 */
typedef struct
{
  MmlImageOutputType_e              eOutputType;           /* Output destination types */
  u32                               nUseCaseID;            /* Use case ID */

  union
  {
    MmlImageEncodeCompleteInfo_t    tEncodeCompleteInfo;   /* Encode complete info */
    MmlImageCaptureInfo_t           tCaptureInfo;          /* Used with 'Get capture info */
  } uParam;
} MdlImgCapResponse_t;


/**
 * @brief the structure defined the notify massage body in main task.
 */
typedef struct
{
    MmlImageEvent_e	                    eEvent;       ///< Specify the event you want to notify
    MmlImageOutputType_e                eOutputType;  /* Output destination types */
    u32                                 nHandle;      ///< 32-bit decoding/encoding handle

    /* union of MdlImgCapNotify_t parameters */
    union
    {
        MmlImageStateChange_t           tStateChange;           ///< Used with IMAGE_EVENT_STATE_CHANGE event
        MmlImageResult_e                eErrCode;               ///< Used with IMAGE_EVENT_RUNTIME_ERROR event
        MmlImageEncodeCompleteInfo_t    tEncodeCompleteInfo;    ///< Used with IMAGE_EVENT_ENCODE_COMPLETE event
	} uParam;
} MdlImgCapNotify_t;


/**
 * @brief Indicate the value of Nth capture if MDL_IMG_CAP_NO_FREE_SPACE,
 *        or MDL_IMG_CAP_UNKNOWN_ERROR happened.
 */
typedef struct
{
  u32                             nCaptureIndex;  /* indicate which capture will happen error */
} MdlImgCapWbErrNoFreeSpace_t;


/**
 * @brief the structure defined the full error setting
 */
typedef struct
{
  MdlImgCapWbErr_e                errorType;        /* indicate which error will happened                                 */
  union
  {
    MdlImgCapWbErrNoFreeSpace_t   tImgCapErrParam;  /* only for MDL_IMG_CAP_NO_FREE_SPACE, and MDL_IMG_CAP_UNKNOWN_ERROR  */
  } param;
} MdlImgCapWbErr_t;


/**
 * @brief the structure defined the shutter sound task setting
 */
typedef struct
{
  u8    *pAUDIODMABuf;
  u8    *pPCMSrcAddr;
  u32   nPCMSrcDataSize;
} MdlImgCapShutSnd_t;


/*=============================================================*/
// Variable definition
/*=============================================================*/




/*=============================================================*/
// Global function definition
/*=============================================================*/

/**
 * @brief Used to set the parameter to indicate fake driver trigger error to test error handling.
 *        The life cycle is only until the image-capture back to IDLE mode again.
 *
 * @param tErrCaseParam     : Error case parameter
 *
 * @return                  : None
 */
void MdlImgCapSetupErrorCase(MdlImgCapWbErr_t tErrCaseParam);


/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
#if defined(__SDK_SIMULATION__)
u8 ImgJPE_128x96[]={
0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01,
0x00, 0x01, 0x00, 0x00, 0xFF, 0xE1, 0x13, 0x71, 0x45, 0x78, 0x69, 0x66, 0x00, 0x00, 0x49, 0x49,
0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0F, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x10, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
0x12, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1A, 0x01, 0x05, 0x00,
0x01, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x1B, 0x01, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00,
0x76, 0x00, 0x00, 0x00, 0x28, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
0x13, 0x02, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x69, 0x87, 0x04, 0x00,
0x01, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x9A, 0x82,
0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0xB0, 0x01, 0x00, 0x00, 0x9D, 0x82, 0x05, 0x00, 0x01, 0x00,
0x00, 0x00, 0xB8, 0x01, 0x00, 0x00, 0x27, 0x88, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
0x00, 0x00, 0x00, 0x90, 0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x32, 0x32, 0x30, 0x03, 0x90,
0x02, 0x00, 0x14, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x04, 0x90, 0x02, 0x00, 0x14, 0x00,
0x00, 0x00, 0xD4, 0x01, 0x00, 0x00, 0x01, 0x91, 0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x02,
0x03, 0x00, 0x01, 0x92, 0x0A, 0x00, 0x01, 0x00, 0x00, 0x00, 0xE8, 0x01, 0x00, 0x00, 0x02, 0x92,
0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x04, 0x92, 0x0A, 0x00, 0x01, 0x00,
0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x07, 0x92, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
0x00, 0x00, 0x08, 0x92, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x92,
0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x92, 0x05, 0x00, 0x01, 0x00,
0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xA0, 0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x31,
0x30, 0x30, 0x01, 0xA0, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0xA0,
0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x03, 0xA0, 0x04, 0x00, 0x01, 0x00,
0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xA4, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x02, 0xA4, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xA4,
0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0xA4, 0x05, 0x00, 0x01, 0x00,
0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x06, 0xA4, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
0x00, 0x00, 0x07, 0xA4, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x92,
0x07, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xEC, 0xFF, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x03, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1A, 0x01, 0x05, 0x00,
0x01, 0x00, 0x00, 0x00, 0x5E, 0x06, 0x00, 0x00, 0x1B, 0x01, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00,
0x66, 0x06, 0x00, 0x00, 0x28, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
0x01, 0x02, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6E, 0x06, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
0x01, 0x00, 0x00, 0x00, 0xFB, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xD8, 0xFF, 0xDB,
0x00, 0x43, 0x00, 0x08, 0x05, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x06, 0x07, 0x09, 0x08, 0x08,
0x09, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x18, 0x11, 0x12, 0x0E, 0x14, 0x1D, 0x19, 0x1E,
0x1E, 0x1C, 0x19, 0x1C, 0x1B, 0x20, 0x24, 0x2E, 0x27, 0x20, 0x22, 0x2B, 0x22, 0x1B, 0x1C, 0x28,
0x36, 0x28, 0x2B, 0x2F, 0x31, 0x33, 0x34, 0x33, 0x1F, 0x26, 0x38, 0x3C, 0x38, 0x32, 0x3C, 0x2E,
0x32, 0x33, 0x31, 0xFF, 0xC4, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x10, 0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04,
0x03, 0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7D, 0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05,
0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xA1,
0x08, 0x23, 0x42, 0xB1, 0xC1, 0x15, 0x52, 0xD1, 0xF0, 0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0A,
0x16, 0x17, 0x18, 0x19, 0x1A, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x34, 0x35, 0x36, 0x37, 0x38,
0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
0x79, 0x7A, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5,
0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3,
0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9,
0xEA, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xDB, 0x00, 0x43, 0x01,
0x08, 0x09, 0x09, 0x0C, 0x0A, 0x0C, 0x17, 0x0D, 0x0D, 0x17, 0x31, 0x21, 0x1C, 0x21, 0x31, 0x31,
0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
0xFF, 0xC4, 0x00, 0x1F, 0x01, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x11, 0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04, 0x07, 0x05,
0x04, 0x04, 0x00, 0x01, 0x02, 0x77, 0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06,
0x12, 0x41, 0x51, 0x07, 0x61, 0x71, 0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xA1, 0xB1,
0xC1, 0x09, 0x23, 0x33, 0x52, 0xF0, 0x15, 0x62, 0x72, 0xD1, 0x0A, 0x16, 0x24, 0x34, 0xE1, 0x25,
0xF1, 0x17, 0x18, 0x19, 0x1A, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,
0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A,
0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A,
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6,
0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4,
0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF2,
0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x60, 0x00,
0x80, 0x03, 0x01, 0x21, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xDA, 0x00, 0x0C, 0x03,
0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xAA, 0x9E, 0x1A, 0x69, 0xAD, 0x24, 0xFB,
0x34, 0x82, 0x49, 0x81, 0xCF, 0x3F, 0x2E, 0x05, 0x55, 0x4D, 0x0B, 0x5A, 0xB6, 0x94, 0x30, 0x80,
0x96, 0x4E, 0x40, 0x27, 0x23, 0x9A, 0xD1, 0x3E, 0x6A, 0x97, 0x35, 0xA2, 0xEF, 0x16, 0xCE, 0x8D,
0xB5, 0xAD, 0x46, 0x04, 0xF3, 0xE4, 0xD1, 0xF3, 0x73, 0x90, 0x19, 0xF3, 0x90, 0x47, 0xD3, 0x3C,
0x71, 0x8A, 0xD4, 0xD0, 0xBC, 0x65, 0x15, 0xC3, 0x7D, 0x9B, 0x52, 0x51, 0x03, 0x92, 0x70, 0x71,
0xC6, 0x2A, 0x67, 0x1F, 0x7D, 0xA2, 0x23, 0x0B, 0xDC, 0xD2, 0xD7, 0xA2, 0x81, 0x6D, 0xC5, 0xC7,
0x95, 0xB8, 0x80, 0x40, 0x75, 0xE7, 0x19, 0xF7, 0xAF, 0x38, 0xD6, 0x3C, 0x15, 0xFD, 0xBA, 0xCF,
0x75, 0x67, 0x1B, 0x45, 0x71, 0x81, 0xD4, 0x7C, 0xAF, 0x59, 0xDA, 0xCC, 0xC5, 0xBB, 0x34, 0x79,
0xD6, 0xA3, 0x63, 0x77, 0xA6, 0x5C, 0x3D, 0xBD, 0xDC, 0x0F, 0x13, 0x8C, 0x75, 0x1D, 0x78, 0xCF,
0xF5, 0x15, 0x9E, 0x26, 0x74, 0xCE, 0x3A, 0x1A, 0x65, 0x9B, 0x5E, 0x19, 0xD0, 0x27, 0xF1, 0x06,
0xA2, 0x13, 0xE6, 0x5B, 0x74, 0x20, 0xCA, 0xE3, 0xB0, 0xE7, 0x1F, 0x9E, 0x2B, 0xDE, 0x34, 0xBD,
0x32, 0x1D, 0x3E, 0xDA, 0x28, 0x21, 0x40, 0xA8, 0x8A, 0x30, 0xB4, 0x99, 0x33, 0xD8, 0xD4, 0x86,
0x3D, 0xE4, 0x13, 0xDF, 0xA5, 0x6A, 0x43, 0x18, 0x00, 0x9A, 0xCA, 0x9A, 0xD1, 0x91, 0x05, 0xEE,
0x92, 0x04, 0xE6, 0x9D, 0xB7, 0x9A, 0xD5, 0x1A, 0x74, 0x12, 0x9C, 0x39, 0x19, 0xF4, 0xA9, 0xB1,
0x36, 0x32, 0x34, 0xEB, 0x21, 0x00, 0x2D, 0xE6, 0x2C, 0x88, 0xFD, 0x7E, 0x40, 0x0D, 0x3E, 0xF6,
0xE6, 0xC2, 0xCD, 0xCA, 0xCD, 0x10, 0xDE, 0x40, 0xE0, 0x2F, 0x5A, 0x25, 0x3F, 0x67, 0x76, 0x1C,
0xFC, 0x91, 0xB1, 0x92, 0x35, 0x08, 0xD2, 0xF0, 0x6E, 0x8E, 0x26, 0xB7, 0x90, 0x80, 0xBB, 0x46,
0x08, 0xE3, 0x9A, 0xB7, 0x7B, 0xE1, 0xAD, 0x3B, 0x50, 0x87, 0x77, 0x94, 0x39, 0x1B, 0x81, 0xE8,
0x79, 0xF7, 0xA7, 0x46, 0xAF, 0x3A, 0xE6, 0x2E, 0x15, 0x2C, 0xFD, 0x4C, 0x99, 0xEC, 0xAF, 0x74,
0x2D, 0x39, 0xDB, 0x7B, 0x5D, 0x5B, 0x46, 0xA5, 0x99, 0x09, 0xE4, 0x0E, 0xA7, 0x1E, 0xBD, 0x7B,
0xD4, 0xDE, 0x15, 0xD4, 0xB4, 0xBD, 0x4E, 0xD5, 0xC5, 0x9C, 0xB9, 0x6C, 0x92, 0xC8, 0x7A, 0xAE,
0x4F, 0x4C, 0x55, 0xCE, 0x5A, 0xDC, 0x5E, 0x65, 0x5B, 0xED, 0x1A, 0x0D, 0x61, 0xE6, 0x83, 0x51,
0xB5, 0x43, 0xE6, 0x8F, 0xDC, 0x86, 0x1C, 0x92, 0x07, 0x3F, 0x4E, 0xD5, 0xE7, 0xBA, 0xCF, 0xC3,
0x45, 0x59, 0xD5, 0xB4, 0xEB, 0x90, 0x80, 0x92, 0x1A, 0x29, 0x4F, 0x2A, 0x7D, 0xAA, 0x2E, 0x2B,
0x9D, 0xEE, 0x85, 0xE1, 0xB8, 0x74, 0x8D, 0x3E, 0x28, 0xAD, 0xD0, 0x05, 0xE7, 0x7B, 0xF7, 0x3C,
0x93, 0xCF, 0xE6, 0x6B, 0x78, 0x0C, 0x15, 0x3C, 0xE3, 0x00, 0x7B, 0x54, 0xC6, 0x57, 0x4C, 0x99,
0x3F, 0x74, 0xB5, 0x6E, 0x31, 0xE4, 0x2F, 0x7C, 0xB5, 0x6B, 0x46, 0xB8, 0x8C, 0x51, 0x4F, 0x60,
0x87, 0xC2, 0x3B, 0x6D, 0x07, 0xD2, 0xAD, 0x17, 0xD0, 0x69, 0x00, 0x52, 0x03, 0x86, 0xC5, 0x00,
0x53, 0xB7, 0x84, 0xC2, 0x80, 0x70, 0x01, 0xED, 0xE9, 0x59, 0xFA, 0xBE, 0x9E, 0xF7, 0x51, 0x89,
0xE3, 0x90, 0x6F, 0x43, 0xD1, 0xBA, 0x7A, 0x54, 0x4D, 0x5D, 0x13, 0x25, 0x74, 0x73, 0x76, 0x69,
0x71, 0xE5, 0x23, 0x79, 0x40, 0xB0, 0x6E, 0x72, 0x38, 0x07, 0x3C, 0x71, 0x5D, 0x26, 0x87, 0x2E,
0xA0, 0xEC, 0x7E, 0xD2, 0x72, 0x99, 0x3D, 0xBA, 0x0A, 0x9A, 0x51, 0x70, 0x8A, 0x8F, 0x66, 0x44,
0x9B, 0x56, 0xE5, 0x35, 0xEE, 0x20, 0x59, 0x61, 0x91, 0x31, 0x95, 0x75, 0x2A, 0x73, 0xF4, 0xAF,
0x08, 0xD5, 0xA0, 0xBC, 0xF0, 0xFE, 0xB1, 0x25, 0xD6, 0x9C, 0xED, 0x0C, 0xC9, 0x23, 0x74, 0xE8,
0x79, 0x3D, 0x7F, 0x3A, 0xD5, 0x9A, 0xA3, 0xA4, 0xB3, 0xF8, 0x89, 0x6D, 0xA9, 0xC2, 0xB0, 0xDF,
0xC4, 0x2D, 0x6F, 0x00, 0x3B, 0x25, 0x56, 0xC8, 0xCF, 0xB1, 0xED, 0xC0, 0x15, 0xD0, 0x69, 0x48,
0x97, 0x56, 0x32, 0xDD, 0x79, 0x8C, 0x59, 0xFA, 0xB6, 0x73, 0x9A, 0x16, 0xB7, 0x26, 0x5B, 0x1B,
0x44, 0x85, 0x86, 0x28, 0xC1, 0xC0, 0x39, 0xCF, 0x35, 0x4A, 0xE3, 0x59, 0xB6, 0x82, 0xE9, 0x6D,
0xCB, 0xA8, 0xC7, 0xA9, 0xAC, 0xE1, 0xD4, 0x99, 0x7C, 0x25, 0xCB, 0x6B, 0xB8, 0xE5, 0x75, 0x78,
0x98, 0x31, 0x1D, 0xB3, 0x5A, 0x53, 0xEB, 0x76, 0x36, 0x56, 0x6D, 0x3D, 0xDC, 0xE9, 0x02, 0x20,
0xC9, 0x2E, 0x71, 0xF9, 0x53, 0x87, 0x52, 0xD6, 0xC7, 0x0D, 0xA8, 0xFC, 0x55, 0x6F, 0x35, 0xD3,
0x49, 0xD3, 0xBC, 0xE4, 0x5E, 0x92, 0x4A, 0xF8, 0x07, 0xE8, 0x07, 0xE3, 0x5D, 0xA7, 0x87, 0x75,
0x53, 0xAD, 0x68, 0x56, 0xD7, 0xEC, 0x9B, 0x1E, 0x55, 0xCB, 0x2F, 0xA1, 0xAB, 0x43, 0x46, 0x93,
0x1C, 0x9A, 0x69, 0x1D, 0xE8, 0x03, 0x26, 0xE2, 0xFF, 0x00, 0x0C, 0x04, 0x21, 0xE6, 0xCB, 0x0F,
0xF5, 0x63, 0x80, 0x2B, 0x97, 0xBD, 0xF1, 0x15, 0xD5, 0xED, 0xD3, 0x5A, 0xE1, 0x6D, 0xE0, 0x1C,
0x12, 0x4E, 0x0F, 0xF9, 0xE2, 0x91, 0x3D, 0x0D, 0x2F, 0x0F, 0xBC, 0xD7, 0x17, 0x11, 0xC8, 0x8A,
0x4C, 0x44, 0xF3, 0xCF, 0x1D, 0x6B, 0xAF, 0x0A, 0x39, 0xC0, 0xC5, 0x4C, 0x2E, 0x93, 0x6F, 0xB8,
0x41, 0x3B, 0x5C, 0x53, 0x8E, 0x84, 0xD7, 0x9C, 0xF8, 0xDA, 0xDE, 0xDE, 0x2D, 0x48, 0xAC, 0xA0,
0x6C, 0x75, 0x04, 0x7B, 0x1E, 0xF5, 0xA1, 0x67, 0x93, 0xEA, 0x2B, 0x6F, 0x63, 0x7A, 0xDB, 0x9B,
0xCC, 0x1C, 0x6E, 0x42, 0xBD, 0x78, 0x18, 0xC1, 0xFC, 0x6A, 0xCD, 0x97, 0x8C, 0x75, 0x0D, 0x3D,
0x4C, 0x56, 0x52, 0xB0, 0x80, 0x8C, 0x14, 0x73, 0xB8, 0x0A, 0x94, 0x89, 0xB1, 0x62, 0xE3, 0xC6,
0x9A, 0xDC, 0xB3, 0x47, 0x23, 0x5E, 0x15, 0xDB, 0x9C, 0x2A, 0xAE, 0x05, 0x54, 0x9F, 0xC4, 0xB7,
0xF7, 0xB7, 0x62, 0x49, 0xA7, 0x5D, 0xC3, 0xF8, 0x4A, 0xF0, 0x28, 0x4A, 0xC1, 0x6B, 0xAB, 0x1D,
0x15, 0x87, 0x8E, 0xE6, 0xB3, 0x4C, 0x31, 0x80, 0x84, 0x1D, 0x10, 0x10, 0x4F, 0xE5, 0x58, 0x7A,
0x86, 0xB1, 0xA8, 0x78, 0x92, 0xF8, 0xCB, 0x23, 0xB1, 0x8C, 0x7D, 0xD4, 0xC7, 0xCA, 0x05, 0x4A,
0xD0, 0x4F, 0x63, 0x6B, 0x45, 0xD2, 0xE4, 0x6F, 0x95, 0xD3, 0xE5, 0xFF, 0x00, 0xF5, 0xD7, 0xB4,
0x68, 0x96, 0x3F, 0xD9, 0xDA, 0x3D, 0xB5, 0xA0, 0xE0, 0xA2, 0x73, 0xF5, 0xAA, 0x45, 0x2D, 0x8B,
0xE7, 0x03, 0xA5, 0x44, 0xC7, 0x8E, 0x4D, 0x30, 0x38, 0x3B, 0x9F, 0x19, 0x58, 0x43, 0x24, 0x86,
0x29, 0xC1, 0x88, 0xAE, 0x14, 0x2F, 0x5C, 0xFF, 0x00, 0x4A, 0xE5, 0xDE, 0xE6, 0xC6, 0xE2, 0xDD,
0xA4, 0x9E, 0xE8, 0xBC, 0xEE, 0xEC, 0x41, 0x07, 0x05, 0x46, 0x78, 0xFA, 0xF1, 0x4A, 0x5B, 0xDC,
0x97, 0xB9, 0x6F, 0x4A, 0xF1, 0x49, 0xD0, 0xDF, 0x0B, 0x22, 0xC8, 0x87, 0x82, 0x09, 0xF7, 0xCD,
0x76, 0xFA, 0x4F, 0x8D, 0x6C, 0x2F, 0x98, 0x24, 0xAE, 0xB1, 0xB9, 0x19, 0xE0, 0xD5, 0xC7, 0xE1,
0xB9, 0xA1, 0x2F, 0x8A, 0xB5, 0x27, 0x86, 0xCE, 0x38, 0x60, 0x90, 0xA1, 0x98, 0xE4, 0xC8, 0xA7,
0x90, 0x06, 0x3A, 0x57, 0x9E, 0x78, 0xA7, 0x54, 0x6D, 0x5C, 0x5B, 0x46, 0xC0, 0xAD, 0xC2, 0x70,
0xEF, 0xC7, 0x20, 0x0E, 0x2A, 0x13, 0x7A, 0x99, 0x36, 0xD3, 0x47, 0x00, 0xF6, 0xEF, 0x75, 0x76,
0xC2, 0x72, 0x59, 0x53, 0x19, 0x61, 0xCE, 0x2A, 0x1B, 0xE6, 0xB5, 0x85, 0x84, 0x70, 0x36, 0x31,
0xDC, 0x77, 0xA0, 0xA3, 0x6B, 0x43, 0xD0, 0x8E, 0xAE, 0x25, 0x95, 0xC9, 0x11, 0x44, 0x01, 0xE3,
0xBE, 0x73, 0xFE, 0x15, 0x9D, 0xAA, 0xE9, 0x4F, 0x04, 0xCB, 0x1E, 0xCD, 0xAF, 0xD0, 0x03, 0xDC,
0x50, 0xA5, 0x76, 0xD0, 0x5F, 0x5B, 0x19, 0x4D, 0x6F, 0x34, 0x79, 0x3B, 0x48, 0xDB, 0xD7, 0x9A,
0xDD, 0xF0, 0xF3, 0x3C, 0xD2, 0xB0, 0x49, 0x8A, 0xE0, 0x74, 0x26, 0x98, 0xCE, 0xFB, 0x4F, 0xBA,
0x5F, 0x36, 0x18, 0x61, 0x0C, 0x64, 0x24, 0xE7, 0x70, 0xFC, 0x6B, 0xBB, 0xB3, 0xBD, 0xBA, 0x9A,
0xE3, 0x0E, 0x00, 0x02, 0xA5, 0x3F, 0x78, 0x4D, 0x9B, 0x4D, 0x20, 0x8D, 0x32, 0xED, 0x8F, 0xAD,
0x60, 0x6A, 0x1E, 0x22, 0x86, 0x16, 0x75, 0x83, 0xF7, 0xAF, 0xDB, 0x1D, 0x29, 0xDF, 0x50, 0x6F,
0x4B, 0x9F, 0x3F, 0xBE, 0xA1, 0x24, 0xC8, 0x57, 0x21, 0x73, 0xC1, 0x00, 0x54, 0x1F, 0x6F, 0x9A,
0x31, 0xB0, 0x1C, 0xFA, 0x66, 0x8B, 0x6A, 0x2B, 0x6A, 0x34, 0x5E, 0x49, 0xE6, 0x0F, 0x31, 0xB3,
0xF4, 0x35, 0xA1, 0x19, 0x99, 0xC6, 0xFC, 0x15, 0xF4, 0x6E, 0x94, 0xF6, 0x18, 0xE4, 0xD4, 0xF5,
0x1B, 0xBB, 0xA4, 0x88, 0xDE, 0x4A, 0x59, 0x78, 0x5C, 0xB9, 0xE3, 0x3F, 0x5A, 0x9A, 0x55, 0xB9,
0x92, 0xE3, 0xF7, 0xB2, 0xB3, 0x67, 0xE5, 0x3C, 0xF5, 0xC5, 0x17, 0x41, 0xA0, 0xB6, 0xD3, 0x8B,
0x32, 0xFE, 0x6E, 0x48, 0x61, 0xC6, 0xDE, 0x0F, 0xE0, 0x7F, 0x1A, 0xC0, 0xBB, 0x22, 0x4B, 0x86,
0x7E, 0xA0, 0xB1, 0xFA, 0xD0, 0x33, 0xD3, 0xF4, 0x37, 0x16, 0x7E, 0x18, 0x42, 0x9B, 0x55, 0xE5,
0xCE, 0x4F, 0xA8, 0x56, 0x3F, 0xE3, 0x59, 0x92, 0x4B, 0xA7, 0x6A, 0x2E, 0x64, 0x64, 0xB8, 0x24,
0x1C, 0x6F, 0xDB, 0xC5, 0x67, 0x1D, 0xDB, 0x21, 0x6B, 0xA9, 0x89, 0xAA, 0x69, 0x22, 0x26, 0xC4,
0x77, 0x2C, 0xF1, 0xB7, 0xDE, 0xC6, 0x0F, 0xA7, 0x5A, 0xB1, 0x6B, 0xA6, 0x0B, 0x29, 0xBC, 0xD8,
0x02, 0xBB, 0x15, 0x04, 0x6E, 0xE9, 0x4D, 0x48, 0x1C, 0xB4, 0x3B, 0x0F, 0x05, 0xA4, 0xF7, 0x72,
0x49, 0x7B, 0x76, 0xCA, 0x5B, 0x80, 0x80, 0x0E, 0x98, 0xDC, 0x0F, 0xF4, 0xAE, 0xDA, 0x22, 0xC8,
0xDB, 0x94, 0x90, 0xDD, 0x8D, 0x28, 0xF7, 0x07, 0xF0, 0x99, 0x1A, 0xDE, 0xA1, 0x76, 0x67, 0x48,
0xE6, 0x12, 0x7D, 0x9C, 0xF5, 0xF2, 0xC7, 0xB0, 0xEB, 0xF8, 0xD6, 0x7D, 0xDB, 0x90, 0x91, 0x41,
0x6B, 0x6E, 0xEA, 0x26, 0x38, 0xF3, 0x54, 0x64, 0x28, 0xF5, 0x26, 0x9C, 0x35, 0x63, 0x4A, 0xF0,
0x3C, 0x37, 0xCC, 0xC9, 0xDC, 0x0E, 0x0D, 0x58, 0x67, 0x69, 0x62, 0x00, 0xF5, 0x1E, 0xD5, 0x65,
0x16, 0x21, 0x8E, 0x28, 0x86, 0xF6, 0x3B, 0x9C, 0x76, 0x3D, 0x2A, 0xE3, 0x4D, 0x21, 0xB5, 0xDE,
0x38, 0x5E, 0xC0, 0x1A, 0x4C, 0x4C, 0xAB, 0x04, 0xEB, 0x05, 0xE2, 0x48, 0x57, 0x20, 0x11, 0x92,
0x6B, 0xA5, 0x90, 0x7D, 0xB1, 0x55, 0xE1, 0x55, 0xC9, 0x1C, 0x60, 0xE3, 0x34, 0x98, 0xA4, 0x65,
0x5D, 0xC2, 0x81, 0x89, 0xC3, 0xA3, 0x0F, 0xBC, 0xA4, 0xE7, 0xE9, 0x59, 0x46, 0xD6, 0x4F, 0x3F,
0x68, 0xE4, 0x1E, 0x6A, 0xBA, 0x15, 0x6D, 0x0E, 0x97, 0x54, 0xBB, 0x9A, 0x0B, 0x7B, 0x2B, 0x30,
0x4E, 0x23, 0xDF, 0xBB, 0x61, 0xEC, 0xD8, 0x34, 0xCB, 0x30, 0xB2, 0x48, 0x23, 0x67, 0xCA, 0x10,
0x30, 0x31, 0xD2, 0xA2, 0x31, 0xD0, 0x9B, 0x68, 0x69, 0x1B, 0x5B, 0x7B, 0x57, 0x52, 0x65, 0x49,
0x40, 0xCE, 0x77, 0x0E, 0x95, 0x41, 0xF5, 0x48, 0xE0, 0xB9, 0x28, 0x1B, 0x31, 0xA9, 0xC0, 0x00,
0x66, 0x92, 0x44, 0xB5, 0x74, 0x75, 0xFE, 0x0B, 0xBB, 0xCE, 0x9D, 0xF3, 0x10, 0x01, 0x63, 0xC6,
0x31, 0xDC, 0xD7, 0x6B, 0x0C, 0xCA, 0xFD, 0x0D, 0x38, 0xEE, 0x37, 0xF0, 0x8F, 0x9E, 0x15, 0x9A,
0x32, 0x0F, 0xE7, 0x5C, 0xF1, 0xB6, 0x7B, 0x4B, 0xB8, 0xD1, 0x26, 0x28, 0x99, 0xE4, 0x9F, 0xBB,
0x8F, 0x7A, 0x29, 0x3B, 0x4D, 0x8E, 0x0E, 0xD1, 0x67, 0x87, 0x24, 0x71, 0x26, 0xD2, 0xEA, 0x40,
0x34, 0xF7, 0x74, 0x56, 0xC2, 0x83, 0x8A, 0xA1, 0x8D, 0x46, 0x33, 0x4A, 0x38, 0xEF, 0xEB, 0x5A,
0xB7, 0x11, 0xC9, 0x1C, 0x03, 0x6A, 0x01, 0x19, 0x03, 0x9C, 0xF7, 0xA1, 0x83, 0x33, 0x46, 0x19,
0x81, 0x07, 0x6A, 0x93, 0x8E, 0x6B, 0x76, 0xC2, 0x79, 0x2D, 0x63, 0x09, 0x27, 0x31, 0x75, 0x04,
0x76, 0xA4, 0xF6, 0x14, 0x8B, 0x97, 0xB6, 0x93, 0xBC, 0x6B, 0x3D, 0xA4, 0x9B, 0xD8, 0x9E, 0x02,
0x0F, 0xC2, 0xB2, 0x45, 0x8E, 0xA3, 0x3D, 0xD1, 0x68, 0x6D, 0x66, 0x2E, 0x3A, 0x92, 0xA7, 0x8A,
0x22, 0xF4, 0x1A, 0x7A, 0x10, 0x87, 0x30, 0xEE, 0x32, 0x16, 0x12, 0x74, 0xC1, 0xC8, 0xC5, 0x59,
0x85, 0x9A, 0x18, 0x7C, 0xE4, 0x39, 0x91, 0x8F, 0x01, 0x7A, 0x8A, 0xAE, 0x83, 0xE8, 0x4E, 0xB2,
0xCE, 0xC3, 0x7C, 0x8A, 0x58, 0xFB, 0xF7, 0xA0, 0xAC, 0x0B, 0x6C, 0x65, 0x90, 0x08, 0xD9, 0x8F,
0xCB, 0x9A, 0x5B, 0x12, 0xF4, 0x47, 0x5B, 0xE1, 0xDB, 0xA8, 0x52, 0xCC, 0x20, 0xDA, 0x7F, 0xDA,
0x07, 0xDC, 0xD7, 0x4D, 0x6D, 0x76, 0x11, 0x80, 0x0D, 0xC7, 0xBD, 0x42, 0xDC, 0x4F, 0xE1, 0x36,
0x23, 0xB8, 0x0C, 0xA3, 0x9A, 0xAF, 0x77, 0x02, 0x4F, 0x1B, 0x2B, 0x8C, 0x83, 0x53, 0x1F, 0x88,
0x85, 0xB3, 0x3E, 0x75, 0x6D, 0xDB, 0x82, 0x82, 0x4F, 0x3C, 0x0C, 0xD3, 0x9D, 0x5E, 0x32, 0x38,
0xC7, 0xD2, 0xB6, 0x36, 0x25, 0xB7, 0x9E, 0x00, 0x72, 0x49, 0xC9, 0xE8, 0x6A, 0xE4, 0xA6, 0xE5,
0xD0, 0x2F, 0x9F, 0xF2, 0x37, 0x40, 0x7A, 0x52, 0x62, 0x64, 0xF1, 0x5A, 0x79, 0x68, 0xC9, 0x29,
0x27, 0x23, 0x8C, 0x0E, 0x33, 0x50, 0xE2, 0x48, 0xF7, 0x0B, 0x80, 0xFE, 0x57, 0x60, 0x0D, 0x00,
0xC9, 0xF4, 0x7D, 0x5E, 0x4D, 0x2E, 0xFE, 0x26, 0x0C, 0x5E, 0x06, 0x3F, 0x74, 0x9C, 0xF4, 0xFF,
0x00, 0xF5, 0xD7, 0xAF, 0x69, 0xBA, 0xCD, 0xA5, 0xFD, 0xBA, 0xB2, 0x0F, 0xDE, 0x60, 0x64, 0x01,
0xC8, 0xA4, 0xC9, 0x96, 0xC6, 0x6E, 0xA7, 0x6D, 0xA5, 0xDE, 0xCF, 0xB1, 0xAD, 0x23, 0x79, 0x3F,
0xBC, 0x57, 0x07, 0xB5, 0x2C, 0x5A, 0x3D, 0xB5, 0xB5, 0xAB, 0x79, 0x16, 0xD1, 0x17, 0x61, 0x80,
0x0F, 0x6A, 0x84, 0xD9, 0x2D, 0xBB, 0x18, 0x77, 0x5A, 0x71, 0xD3, 0xDB, 0x6E, 0xE0, 0xC8, 0xFD,
0x50, 0xF3, 0x8F, 0xA7, 0xE7, 0x5C, 0xCE, 0xB0, 0x82, 0xE2, 0xFA, 0x28, 0x60, 0x4D, 0xD0, 0xE7,
0x1C, 0x76, 0x35, 0x4B, 0x72, 0xBA, 0x1D, 0xC6, 0x8D, 0xA6, 0xAC, 0x3A, 0x3C, 0x76, 0xEB, 0x0A,
0x09, 0x9F, 0x39, 0x72, 0xB9, 0x2B, 0xCE, 0x6A, 0xDC, 0xD0, 0x4D, 0x61, 0x21, 0x46, 0x26, 0x58,
0x47, 0xF1, 0xE3, 0xA5, 0x34, 0x8A, 0x94, 0x7D, 0xC2, 0xDD, 0xAD, 0xD9, 0x53, 0xD7, 0x22, 0xB4,
0xD6, 0x7D, 0xE2, 0xA1, 0x6E, 0x67, 0xD0, 0xF0, 0x19, 0xAD, 0x5A, 0x09, 0x36, 0x30, 0xE9, 0xD4,
0xE2, 0xA0, 0x76, 0xC1, 0xDA, 0x7E, 0x6A, 0xD4, 0xD4, 0x87, 0xCB, 0x71, 0x92, 0x01, 0xC0, 0xEB,
0xC7, 0x4A, 0xBF, 0x69, 0x71, 0x19, 0x50, 0xB2, 0x67, 0x3E, 0x94, 0x9E, 0xC2, 0x66, 0x85, 0xBA,
0xCE, 0xAC, 0xC3, 0x05, 0xA3, 0xC7, 0xF1, 0x73, 0x51, 0x4F, 0xB0, 0xA3, 0x31, 0xE0, 0x76, 0x5C,
0xD2, 0x13, 0xDC, 0xC9, 0x40, 0xE5, 0xB6, 0x03, 0x82, 0x0F, 0x07, 0x3D, 0x2B, 0xBF, 0xF0, 0x4F,
0x8B, 0x0E, 0x91, 0x75, 0xB2, 0x44, 0x59, 0x98, 0x28, 0x05, 0x41, 0x19, 0x61, 0xD8, 0x0F, 0x7A,
0x6C, 0x24, 0x6A, 0xFD, 0xA2, 0xE7, 0x55, 0xD5, 0xAE, 0x35, 0x39, 0x22, 0x92, 0x14, 0x01, 0x76,
0xC4, 0xC7, 0xA7, 0x18, 0x3D, 0x3E, 0x95, 0x68, 0xC7, 0x2D, 0xCC, 0x67, 0xCA, 0x9D, 0xD1, 0xC8,
0xEC, 0x7A, 0x56, 0x4A, 0x49, 0xB6, 0x65, 0x39, 0x24, 0xAE, 0x72, 0x5E, 0x24, 0xB6, 0xD5, 0xAD,
0x22, 0xF3, 0x0D, 0xD4, 0x8F, 0x12, 0xF5, 0x27, 0xF0, 0xAD, 0x8F, 0x04, 0x8B, 0x1B, 0xBB, 0x71,
0xE6, 0x10, 0x6E, 0x07, 0x24, 0x31, 0xCF, 0xE2, 0x2B, 0x58, 0x2B, 0xA3, 0x7A, 0x6B, 0x98, 0xF4,
0x64, 0xD2, 0xAD, 0xAF, 0xCC, 0x72, 0x07, 0x31, 0x4B, 0x1F, 0x61, 0xD0, 0xE7, 0x8E, 0x7F, 0x2A,
0xAF, 0xAA, 0xD8, 0xC5, 0x63, 0x6E, 0x8C, 0x64, 0x67, 0x66, 0x3B, 0x70, 0x7A, 0x7E, 0x55, 0x4D,
0x68, 0x55, 0xB5, 0xB1, 0xCB, 0xCC, 0x25, 0xB4, 0x02, 0x51, 0xCC, 0x4C, 0x4E, 0x1B, 0xFB, 0xBF,
0xE7, 0x35, 0x72, 0xDA, 0xF4, 0x30, 0x1F, 0x35, 0x62, 0x95, 0xA4, 0x62, 0xD5, 0xAE, 0x71, 0x9A,
0x9D, 0x92, 0xDD, 0xC4, 0x2E, 0x63, 0x55, 0x19, 0xE3, 0x6A, 0xF5, 0x35, 0x84, 0xFA, 0x5D, 0xBB,
0x44, 0xCE, 0x44, 0x81, 0xBD, 0x36, 0xD5, 0x5C, 0x77, 0x20, 0x8A, 0xC0, 0x10, 0x91, 0x3C, 0x99,
0xDC, 0x79, 0x03, 0xA5, 0x36, 0xEF, 0x4D, 0x8A, 0xDF, 0x12, 0xDA, 0x33, 0x38, 0x1F, 0x78, 0x11,
0x4E, 0xE3, 0x6C, 0xD1, 0xD3, 0x35, 0x6B, 0x59, 0x22, 0x09, 0x70, 0x31, 0x20, 0xE3, 0x18, 0xE3,
0xAD, 0x54, 0xD5, 0xE1, 0x08, 0xA5, 0xC7, 0xDC, 0x6E, 0x81, 0x69, 0x2D, 0x04, 0xF4, 0x68, 0xCB,
0x12, 0x42, 0x54, 0xAB, 0x12, 0x0F, 0xAD, 0x55, 0x59, 0x1A, 0x39, 0x77, 0xC6, 0xC4, 0x10, 0x78,
0x20, 0xD6, 0x86, 0x87, 0xAB, 0x78, 0x73, 0x55, 0x8A, 0xEB, 0x4B, 0x8C, 0x4D, 0x28, 0x0F, 0xCE,
0x49, 0x3E, 0xE6, 0xAC, 0x3E, 0xB9, 0x61, 0x69, 0x7A, 0x61, 0x8D, 0xC1, 0x7E, 0xB8, 0x07, 0xAD,
0x73, 0xC6, 0x3A, 0xB3, 0x9E, 0xA4, 0x2E, 0xAC, 0x64, 0xF8, 0x9B, 0x55, 0x86, 0xEE, 0xCE, 0x48,
0x57, 0x21, 0x88, 0x1E, 0xC3, 0xA8, 0xAC, 0x1B, 0x39, 0x23, 0xD2, 0xD6, 0x29, 0x6D, 0xA5, 0x3E,
0x7A, 0x36, 0x73, 0xD4, 0x0A, 0xD6, 0x92, 0xB1, 0xD1, 0x47, 0x49, 0x23, 0xBF, 0xF0, 0xE7, 0x8A,
0x5A, 0xFA, 0x78, 0xD1, 0x98, 0x2D, 0xC7, 0x70, 0xC7, 0x86, 0xE0, 0xFF, 0x00, 0x41, 0x5D, 0x56,
0xA8, 0x46, 0xA7, 0xA7, 0xA4, 0xF0, 0x15, 0x66, 0x8C, 0xEF, 0x0B, 0x9E, 0xBE, 0xD5, 0xB5, 0x4D,
0x11, 0x73, 0xD2, 0x46, 0x4D, 0xB6, 0x9C, 0xD2, 0x68, 0xD3, 0xAC, 0xE0, 0x06, 0x90, 0x80, 0x41,
0xE8, 0x30, 0xD9, 0xAF, 0x3B, 0xD4, 0x75, 0xF6, 0xD2, 0x73, 0x08, 0x5D, 0xD3, 0xE3, 0xBF, 0x18,
0xF7, 0xAC, 0x6D, 0x73, 0x29, 0x2B, 0x8F, 0x8A, 0x7F, 0xB1, 0xC2, 0x04, 0xC7, 0x82, 0x70, 0x1C,
0x1A, 0x6C, 0x97, 0x6A, 0xDF, 0x24, 0x88, 0xB1, 0xA9, 0xE8, 0xFD, 0x73, 0x45, 0x89, 0x68, 0xAE,
0x34, 0xD8, 0xE3, 0xB5, 0x92, 0x4B, 0x59, 0x1A, 0x5C, 0x03, 0x92, 0x4F, 0x27, 0xE9, 0x51, 0xC1,
0x6D, 0x24, 0x21, 0xF2, 0x87, 0x25, 0x41, 0x19, 0xE6, 0xA6, 0x3B, 0x08, 0xC1, 0x99, 0x12, 0x0D,
0x60, 0x80, 0x02, 0xA2, 0x90, 0x70, 0x7E, 0x82, 0xAC, 0x4B, 0x7E, 0x26, 0x94, 0xA3, 0x2E, 0xE8,
0xBD, 0xEA, 0x9E, 0xA5, 0x35, 0x73, 0x36, 0xE2, 0xDC, 0x23, 0x93, 0x1F, 0x2B, 0xFC, 0xAA, 0xBB,
0x02, 0x0F, 0x3D, 0x6A, 0xCB, 0x2E, 0xC3, 0xA8, 0x48, 0x91, 0xA4, 0x60, 0x95, 0x03, 0x3C, 0x8E,
0x29, 0xD1, 0x87, 0x79, 0x1A, 0x46, 0x90, 0xF2, 0x78, 0x24, 0xD4, 0xA5, 0x61, 0x58, 0xE9, 0x34,
0x38, 0x3E, 0xD7, 0x73, 0x6D, 0x0C, 0xF1, 0x99, 0xC4, 0xCC, 0x70, 0x33, 0xFD, 0xDC, 0x9F, 0xE9,
0x5D, 0x67, 0x8A, 0x3C, 0x3F, 0x0C, 0xBF, 0x64, 0x92, 0x13, 0x04, 0x2F, 0x27, 0xCB, 0xE5, 0xAA,
0xE3, 0x03, 0x07, 0x9F, 0x7A, 0x6F, 0x44, 0x38, 0xE8, 0xCC, 0x75, 0xF0, 0xB5, 0xDC, 0x5A, 0x73,
0xDE, 0xC7, 0x2B, 0x79, 0xE9, 0xF7, 0x23, 0x51, 0xC9, 0xE7, 0x07, 0x9F, 0xA7, 0x35, 0xAF, 0xE1,
0x6F, 0x15, 0x2A, 0x95, 0xB6, 0xB9, 0x70, 0x18, 0x9C, 0x72, 0x38, 0x35, 0xA4, 0xF5, 0x8A, 0x29,
0xEA, 0xCE, 0x8F, 0x53, 0xBC, 0xBC, 0x65, 0x09, 0x6A, 0x8A, 0xD1, 0xBF, 0x52, 0x3A, 0x8E, 0x86,
0xBC, 0x9B, 0xC4, 0x76, 0x93, 0x5D, 0x41, 0xFD, 0xA6, 0x42, 0x80, 0x5B, 0x61, 0xF5, 0x35, 0x9C,
0x77, 0x21, 0x1F, 0xFF, 0xD9, 0xFF, 0xD9, 0xFF, 0xFE, 0x00, 0x07, 0x4D, 0x53, 0x54, 0x41, 0x52,
0xFF, 0xDB, 0x00, 0x43, 0x00, 0x50, 0x37, 0x3C, 0x46, 0x3C, 0x32, 0x50, 0x46, 0x41, 0x46, 0x5A,
0x55, 0x50, 0x5F, 0x78, 0xC8, 0x82, 0x78, 0x6E, 0x6E, 0x78, 0xF5, 0xAF, 0xB9, 0x91, 0xC8, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x00, 0x43, 0x01, 0x55, 0x5A, 0x5A, 0x78, 0x69, 0x78,
0xEB, 0x82, 0x82, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00,
0x60, 0x00, 0x80, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xC4, 0x00,
0x18, 0x00, 0x00, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x04, 0xFF, 0xC4, 0x00, 0x26, 0x10, 0x00, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x11,
0x21, 0x31, 0x03, 0x12, 0x41, 0x51, 0x22, 0x61, 0x71, 0x81, 0x04, 0x13, 0x23, 0x52, 0xA2, 0xFF,
0xC4, 0x00, 0x15, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC4, 0x00, 0x16, 0x11, 0x01, 0x01, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11, 0xFF, 0xDA,
0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xDF, 0xF1, 0x8C, 0x6C,
0x0A, 0x13, 0x4D, 0x63, 0x47, 0x4A, 0x54, 0x66, 0xE2, 0xB6, 0x8B, 0xA8, 0x97, 0x79, 0x2C, 0xF4,
0xC8, 0x61, 0xCA, 0x9E, 0x25, 0x86, 0x37, 0x6C, 0xE9, 0x50, 0x5F, 0x1C, 0x64, 0xB4, 0x4D, 0x95,
0x42, 0x69, 0x2C, 0xD1, 0x09, 0x70, 0xF7, 0xB6, 0x95, 0x32, 0xCD, 0x4A, 0x11, 0xF6, 0x91, 0xB8,
0xE5, 0x19, 0x45, 0xD3, 0x03, 0x89, 0xA7, 0x17, 0x4D, 0x53, 0x05, 0x9D, 0xAE, 0x0A, 0x76, 0xA4,
0xB3, 0xE0, 0x8C, 0xBF, 0x8F, 0x9F, 0x8B, 0xFD, 0x30, 0x27, 0xC7, 0xC7, 0xFD, 0x92, 0xFA, 0xF2,
0x76, 0x46, 0x29, 0x24, 0x90, 0xB1, 0x82, 0x8C, 0x52, 0x5A, 0x1C, 0x83, 0x21, 0x90, 0x17, 0x81,
0x80, 0xC6, 0x31, 0x8A, 0x31, 0x8C, 0x60, 0x02, 0x54, 0x2C, 0xE2, 0xDA, 0xB3, 0x37, 0xEB, 0x3F,
0x81, 0x1C, 0xDB, 0x95, 0x69, 0x01, 0x95, 0xD2, 0xC0, 0xF0, 0xED, 0x9B, 0x04, 0x2D, 0xBF, 0xA2,
0x84, 0x19, 0xAC, 0x1C, 0x4D, 0x3E, 0x39, 0x5C, 0x70, 0xD1, 0xDA, 0x43, 0x95, 0x25, 0x2F, 0xC9,
0x42, 0xAE, 0x75, 0x2D, 0xAA, 0x97, 0xB1, 0xE3, 0x98, 0xD9, 0xCA, 0xEA, 0x2C, 0x2B, 0x96, 0x51,
0xC2, 0x78, 0x20, 0xEC, 0xF4, 0x2B, 0x9A, 0xED, 0x47, 0x33, 0xE5, 0x9D, 0xDD, 0x81, 0xF2, 0x49,
0xBB, 0x6C, 0x0E, 0xC4, 0xFD, 0x0C, 0xE7, 0x14, 0xAD, 0xBA, 0xFC, 0x9C, 0xAB, 0x99, 0xAF, 0x44,
0xDC, 0xA5, 0xC8, 0xED, 0x81, 0xD1, 0x2F, 0xE4, 0xFF, 0x00, 0xAC, 0x7F, 0x6C, 0xB4, 0x25, 0xDA,
0x0A, 0x5E, 0xD1, 0xC9, 0x18, 0x9D, 0x71, 0x5D, 0x62, 0x97, 0xA2, 0x82, 0x63, 0x18, 0x08, 0x3E,
0x58, 0xA7, 0xBC, 0x13, 0xB4, 0xD6, 0x5E, 0x49, 0x76, 0xB0, 0x76, 0x60, 0x74, 0x47, 0x97, 0xA1,
0x58, 0xF2, 0xC6, 0x58, 0x38, 0xAC, 0x39, 0x03, 0xB3, 0x92, 0x58, 0x49, 0x3A, 0x23, 0xC9, 0x2E,
0xED, 0x7B, 0x44, 0x7B, 0x49, 0xBD, 0xB0, 0xE5, 0xBC, 0xB2, 0x05, 0xAB, 0x79, 0x33, 0xA5, 0xA1,
0x93, 0xAD, 0x88, 0xF6, 0x51, 0x48, 0xC3, 0xB2, 0x6F, 0xC2, 0x16, 0x51, 0xA7, 0x45, 0xA3, 0x8E,
0x34, 0x2F, 0xC6, 0x59, 0xC9, 0x04, 0x69, 0x8F, 0x0C, 0xBD, 0x9A, 0x51, 0xA7, 0xB0, 0xA8, 0xF5,
0x76, 0x8A, 0x2B, 0x17, 0x95, 0x45, 0x93, 0x6D, 0x91, 0xE2, 0xB6, 0x9C, 0x9E, 0xCA, 0x90, 0x3E,
0x84, 0x7C, 0x89, 0x6B, 0x22, 0xCE, 0x4E, 0xE9, 0xDD, 0x7D, 0x0A, 0xFC, 0x24, 0xB7, 0xE4, 0x0E,
0x40, 0xED, 0x18, 0xC5, 0x05, 0x52, 0x0D, 0xE0, 0x5D, 0xB1, 0x9E, 0xBE, 0x80, 0x09, 0xD3, 0x29,
0xBD, 0x12, 0x1D, 0x3A, 0xDE, 0x88, 0x03, 0x42, 0xD6, 0x4A, 0x34, 0xF6, 0x98, 0xB5, 0x26, 0xF0,
0x99, 0x43, 0x49, 0xB5, 0x51, 0xF4, 0x8C, 0xB6, 0x26, 0x82, 0xB0, 0xAF, 0xC8, 0x14, 0xA4, 0xBD,
0x31, 0x7B, 0x53, 0x05, 0xB3, 0x62, 0xAC, 0x82, 0xDC, 0x4F, 0xE0, 0x55, 0x32, 0x30, 0x6B, 0xA8,
0xE9, 0x80, 0xED, 0x58, 0x95, 0x4F, 0x63, 0xD8, 0x1A, 0xB0, 0x38, 0x4D, 0xA0, 0xD5, 0x30, 0x14,
0x14, 0xD0, 0x73, 0xEC, 0x50, 0xA6, 0x03, 0x56, 0x28, 0x19, 0xF2, 0x15, 0x7F, 0xA0, 0x32, 0x03,
0x09, 0xF5, 0x97, 0xD1, 0xD2, 0xA6, 0xA4, 0x8E, 0x32, 0xFC, 0x5C, 0xBD, 0x5F, 0xB0, 0x1E, 0x4A,
0x2D, 0xE9, 0x07, 0xAA, 0x4B, 0x09, 0x0B, 0x6E, 0x52, 0x72, 0x6A, 0xB3, 0xA0, 0xE5, 0xE9, 0x80,
0xAE, 0x3D, 0x71, 0xE0, 0x9C, 0xB3, 0x2A, 0x5A, 0x0C, 0xD4, 0x97, 0x9C, 0x0F, 0xC5, 0xD5, 0xAF,
0xB2, 0x86, 0x8C, 0x7E, 0x09, 0x56, 0x43, 0x95, 0xF8, 0xF6, 0x53, 0xAA, 0x96, 0x7C, 0x82, 0x49,
0x45, 0x00, 0xA9, 0x8D, 0x64, 0xB2, 0xBF, 0x03, 0x26, 0x41, 0x29, 0x2B, 0xC8, 0x9D, 0x55, 0x0F,
0x74, 0xB2, 0x06, 0xC0, 0x4E, 0xBE, 0x2C, 0xCE, 0x35, 0x94, 0x3F, 0x5A, 0x58, 0x02, 0x54, 0x06,
0x8C, 0x95, 0x64, 0x59, 0x20, 0x6A, 0x41, 0x72, 0xB7, 0xF4, 0x00, 0xC0, 0x3C, 0x99, 0xA0, 0x14,
0x75, 0x42, 0x49, 0xC5, 0x5B, 0x37, 0x78, 0xA9, 0x51, 0xCE, 0xA4, 0x64, 0x4C, 0x15, 0xE4, 0x97,
0x65, 0x42, 0xAA, 0x8D, 0x53, 0xC8, 0x60, 0xBB, 0x35, 0x6A, 0xCA, 0x72, 0x41, 0x36, 0xAA, 0x97,
0xD1, 0x62, 0x0C, 0x39, 0x3B, 0x3F, 0xBF, 0x25, 0x25, 0xF2, 0x8D, 0xA3, 0x9F, 0xFA, 0xDA, 0x8F,
0x6B, 0xC8, 0xFC, 0x7C, 0x9E, 0x19, 0x43, 0xF5, 0xFF, 0x00, 0x1B, 0xBF, 0x24, 0x1C, 0xFA, 0xE3,
0xC9, 0x79, 0x37, 0xE3, 0x47, 0x34, 0xD3, 0x6B, 0xB1, 0x15, 0xFF, 0xD9, 
};
#endif

#endif //MDL_IMAGE_CAPTURE_HANDLE_H
