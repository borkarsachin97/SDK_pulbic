; generated by ARM/Thumb C/C++ Compiler, RVCT2.2 [Build 616]
; commandline armcc [--c90 -S --cpu=5TEJ -O3 --apcs=/noswst/interwork -I./inc -I./itf -I./src -I./src/synth -I./src/arm/armulator -D__arm -D__USE_VM_MEMMGT__ --loose_implicit_cast --signed_chars ./src/synth/SYNTH.c]

        ARM
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2
;===================================================================================

synthVoiceFramef_lpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r9,r2
        LDR      r6,[r1,#0x54]
        LDRSH    r0,[r1,#0x4c]
        LDR      r10,[r1,#0x50]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r7,|L1.3076|
        SUB      r11,r2,r1
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
        MOV      r8,#0
|L1.76|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        ASR      r1,r0,#8
        STR      r1,[sp,#0]
        LDR      r0,[r7,#0]  ; phinc
        LDR      r1,[sp,#4]
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.168|
        CMP      r11,r0
        LDRLT    r1,[sp,#0x10]
        MOVLT    r0,#0
        STRBLT   r0,[r1,#2]
        SUBGE    r4,r4,r11
|L1.168|
        ; r3=lTheta, r10=tvf->z1, r6=tvf->z2 , [sp,#0xc]=tvf_mq, [sp,#0]=sigout        
        LDR      r3,[r7,#4]  ; lTheta
        LDR      r0,[sp,#0]   ; sigout
        MOV      r2,r10,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r6,r2,r3,r6
        SMLAWB   r12,r2,r12,r0
        SUB      r12,r12,r6
        MOV      r12,r12,LSL #2
        SMLAWB   r10,r12,r3,r10
        STR      r6,[sp,#0]   ; sigout
        LDR      r0,[r7,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r7,#0x10]
        ADD      r8,r8,#1
        ADD      r0,r0,r1
        STR      r0,[r7,#8]  ; Aeg_LP
        LDR      r1,[r7,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r7,#0x14]
        MUL      r0,r6,r0
        ADD      r1,r1,r2
        STR      r1,[r7,#0xc]  ; Aeg_RP
        MUL      r1,r6,r1
        ASR      r0,r0,#17
        ASR      r1,r1,#17
        CMP      r8,#0x80
        STM      r9!,{r0,r1}
        BLT      |L1.76|
        STR      r4,[r5,#0xc]!
        STR      r10,[r5,#0x44]!
        STR      r6,[r5,#4]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFrame_lpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r8,r2
        LDR      r6,[r1,#0x54]
        LDRSH    r0,[r1,#0x4c]
        LDR      r10,[r1,#0x50]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r7,|L1.3076|
        SUB      r11,r2,r1
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
        MOV      r9,#0
|L1.396|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        ASR      r1,r0,#8
        STR      r1,[sp,#0]
        LDR      r0,[r7,#0]  ; phinc
        LDR      r1,[sp,#4]
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.488|
        CMP      r11,r0
        LDRLT    r1,[sp,#0x10]
        MOVLT    r0,#0
        STRBLT   r0,[r1,#2]
        SUBGE    r4,r4,r11
|L1.488|
        ; r3=lTheta, r10=tvf->z1, r6=tvf->z2 , [sp,#0xc]=tvf_mq, [sp,#0]=sigout        
        LDR      r3,[r7,#4]  ; lTheta
        LDR      r0,[sp,#0]   ; sigout
        MOV      r2,r10,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r6,r2,r3,r6
        SMLAWB   r12,r2,r12,r0
        SUB      r12,r12,r6
        MOV      r12,r12,LSL #2
        SMLAWB   r10,r12,r3,r10       
        STR      r6,[sp,#0]   ; sigout
        LDR      r0,[r7,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r7,#0x10]
        ADD      r9,r9,#1
        ADD      r0,r0,r1
        STR      r0,[r7,#8]  ; Aeg_LP
        LDR      r1,[r7,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r7,#0x14]
        MUL      r0,r6,r0
        ADD      r1,r1,r2
        STR      r1,[r7,#0xc]  ; Aeg_RP
        LDR      r2,[r8,#0]
        MUL      r1,r6,r1
        ADD      r0,r2,r0,ASR #17
        STR      r0,[r8,#0]
        LDR      r2,[r8,#4]
        CMP      r9,#0x80
        ADD      r1,r2,r1,ASR #17
        STR      r1,[r8,#4]!
        ADD      r8,r8,#4
        BLT      |L1.396|
        STR      r4,[r5,#0xc]!
        STR      r10,[r5,#0x44]!
        STR      r6,[r5,#4]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFramef_hpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r9,r2
        LDR      r7,[r1,#0x54]
        LDRSH    r0,[r1,#0x4c]
        LDR      r10,[r1,#0x50]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r6,|L1.3076|
        SUB      r1,r2,r1
        STR      r1,[sp,#0]
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
        MOV      r8,#0
|L1.736|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        LDR      r1,[sp,#4]
        ASR      r11,r0,#8
        LDR      r0,[r6,#0]  ; phinc
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.832|
        LDR      r1,[sp,#0]
        CMP      r1,r0
        LDRGE    r1,[sp,#0]
        MOVLT    r0,#0
        SUBGE    r4,r4,r1
        LDRLT    r1,[sp,#0x10]
        STRBLT   r0,[r1,#2]
|L1.832|
        ; r3=lTheta, r10=tvf->z1, r7=tvf->z2 , [sp,#0xc]=tvf_mq, r11=sigout        
        LDR      r3,[r6,#4]  ; lTheta
        MOV      r2,r10,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r7,r2,r3,r7
        SMLAWB   r12,r2,r12,r11
        SUB      r12,r12,r7
        MOV      r12,r12,LSL #2
        SMLAWB   r10,r12,r3,r10               
        LDR      r0,[r6,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r6,#0x10]
        ADD      r8,r8,#1
        ADD      r0,r0,r1
        STR      r0,[r6,#8]  ; Aeg_LP
        LDR      r1,[r6,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r6,#0x14]
        MUL      r0,r11,r0
        ADD      r1,r1,r2
        STR      r1,[r6,#0xc]  ; Aeg_RP
        MUL      r1,r11,r1
        ASR      r0,r0,#17
        ASR      r1,r1,#17
        CMP      r8,#0x80
        STM      r9!,{r0,r1}
        BLT      |L1.736|
        STR      r4,[r5,#0xc]!
        STR      r10,[r5,#0x44]!
        STR      r7,[r5,#4]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFrame_hpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r7,r2
        MOV      r9,#0
        LDR      r8,[r1,#0x54]
        LDRSH    r0,[r1,#0x4c]
        LDR      r10,[r1,#0x50]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r6,|L1.3076|
        SUB      r1,r2,r1
        STR      r1,[sp,#0]
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
|L1.1064|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        LDR      r1,[sp,#4]
        ASR      r11,r0,#8
        LDR      r0,[r6,#0]  ; phinc
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.1160|
        LDR      r1,[sp,#0]
        CMP      r1,r0
        LDRGE    r1,[sp,#0]
        MOVLT    r0,#0
        SUBGE    r4,r4,r1
        LDRLT    r1,[sp,#0x10]
        STRBLT   r0,[r1,#2]
|L1.1160|
        ; r3=lTheta, r10=tvf->z1, r8=tvf->z2 , [sp,#0xc]=tvf_mq, r11=sigout        
        LDR      r3,[r6,#4]  ; lTheta
        LDR      r0,[sp,#0]   ; sigout
        MOV      r2,r10,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r8,r2,r3,r8
        SMLAWB   r12,r2,r12,r0
        SUB      r12,r12,r8
        MOV      r12,r12,LSL #2
        SMLAWB   r10,r12,r3,r10
        LDR      r0,[r6,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r6,#0x10]
        ADD      r9,r9,#1
        ADD      r0,r0,r1
        STR      r0,[r6,#8]  ; Aeg_LP
        LDR      r1,[r6,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r6,#0x14]
        MUL      r0,r11,r0
        ADD      r1,r1,r2
        STR      r1,[r6,#0xc]  ; Aeg_RP
        LDR      r2,[r7,#0]
        MUL      r1,r11,r1
        ADD      r0,r2,r0,ASR #17
        STR      r0,[r7,#0]
        LDR      r2,[r7,#4]
        CMP      r9,#0x80
        ADD      r1,r2,r1,ASR #17
        STR      r1,[r7,#4]!
        ADD      r7,r7,#4
        BLT      |L1.1064|
        STR      r4,[r5,#0xc]!
        STR      r10,[r5,#0x44]!
        STR      r8,[r5,#4]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFramef_bpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r9,#0
        LDR      r8,[r1,#0x54]
        LDR      r7,[r1,#0x50]
        LDRSH    r0,[r1,#0x4c]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        MOV      r10,r2
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r6,|L1.3076|
        SUB      r11,r2,r1
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
|L1.1404|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        ASR      r1,r0,#8
        STR      r1,[sp,#0]
        LDR      r0,[r6,#0]  ; phinc
        LDR      r1,[sp,#4]
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.1496|
        CMP      r11,r0
        LDRLT    r1,[sp,#0x10]
        MOVLT    r0,#0
        STRBLT   r0,[r1,#2]
        SUBGE    r4,r4,r11
|L1.1496|
        ; r3=lTheta, r7=tvf->z1, r8=tvf->z2 , [sp,#0xc]=tvf_mq, [sp,#0]=sigout        
        LDR      r3,[r6,#4]  ; lTheta
        LDR      r0,[sp,#0]   ; sigout
        MOV      r2,r7,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r8,r2,r3,r8
        SMLAWB   r12,r2,r12,r0
        SUB      r12,r12,r8
        MOV      r12,r12,LSL #2
        SMLAWB   r7,r12,r3,r7
        STR      r7,[sp,#0]   ; sigout
        LDR      r0,[r6,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r6,#0x10]
        ADD      r9,r9,#1
        ADD      r0,r0,r1
        STR      r0,[r6,#8]  ; Aeg_LP
        LDR      r1,[r6,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r6,#0x14]
        MUL      r0,r7,r0
        ADD      r1,r1,r2
        STR      r1,[r6,#0xc]  ; Aeg_RP
        MUL      r1,r7,r1
        ASR      r0,r0,#17
        ASR      r1,r1,#17
        CMP      r9,#0x80
        STM      r10!,{r0,r1}
        BLT      |L1.1404|
        STR      r4,[r5,#0xc]!
        STR      r7,[r5,#0x44]
        STR      r8,[r5,#0x48]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFrame_bpf PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x10
        MOV      r5,r1
        MOV      r7,r2
        LDR      r9,[r1,#0x54]
        LDR      r8,[r1,#0x50]
        LDRSH    r0,[r1,#0x4c]
        LDR      r1,[r1,#0]
        STR      r1,[sp,#8]
        LDR      r2,[r5,#8]
        LDR      r4,[r5,#0xc]
        STR      r2,[sp,#4]
        LDR      r1,[r5,#4]
        LDR      r6,|L1.3076|
        SUB      r11,r2,r1
        LSL      r1,r0,#16
        ASR      r1,r1,#16
        STR      r1,[sp,#0xc]
        MOV      r10,#0
|L1.1724|
        LDR      r0,[sp,#8]
        ADD      r1,r0,r4,ASR #12
        LDR      r0,|L1.3080|
        LDRSB    r2,[r1],#1
        AND      r0,r4,r0
        LSL      r0,r0,#3
        RSB      r3,r0,#0xff
        ADD      r3,r3,#0x7f00
        LDRSB    r1,[r1,#0]
        MUL      r2,r3,r2
        MLA      r0,r1,r0,r2
        ASR      r1,r0,#8
        STR      r1,[sp,#0]
        LDR      r0,[r6,#0]  ; phinc
        LDR      r1,[sp,#4]
        ADD      r4,r4,r0
        CMP      r4,r1
        BLT      |L1.1816|
        CMP      r11,r0
        LDRLT    r1,[sp,#0x10]
        MOVLT    r0,#0
        STRBLT   r0,[r1,#2]
        SUBGE    r4,r4,r11
|L1.1816|
        ; r3=lTheta, r8=tvf->z1, r9=tvf->z2 , [sp,#0xc]=tvf_mq, [sp,#0]=sigout        
        LDR      r3,[r6,#4]  ; lTheta
        LDR      r0,[sp,#0]   ; sigout
        MOV      r2,r8,LSL #2
        LDRSH    r12,[sp,#0xc]    ; tvf->mq
        RSB      r12,r12,#0
        SMLAWB   r9,r2,r3,r9
        SMLAWB   r12,r2,r12,r0
        SUB      r12,r12,r9
        MOV      r12,r12,LSL #2
        SMLAWB   r8,r12,r3,r8
        STR      r8,[sp,#0]   ; sigout
        LDR      r0,[r6,#8]  ; Aeg_LP, Aeg_Ldelta
        LDR      r1,[r6,#0x10]
        ADD      r10,r10,#1
        ADD      r0,r0,r1
        STR      r0,[r6,#8]  ; Aeg_LP
        LDR      r1,[r6,#0xc]  ; Aeg_RP, Aeg_Rdelta
        LDR      r2,[r6,#0x14]
        MUL      r0,r8,r0
        ADD      r1,r1,r2
        STR      r1,[r6,#0xc]  ; Aeg_RP
        LDR      r2,[r7,#0]
        MUL      r1,r8,r1
        ADD      r0,r2,r0,ASR #17
        STR      r0,[r7,#0]
        LDR      r2,[r7,#4]
        CMP      r10,#0x80
        ADD      r1,r2,r1,ASR #17
        STR      r1,[r7,#4]!
        ADD      r7,r7,#4
        BLT      |L1.1724|
        STR      r4,[r5,#0xc]!
        STR      r8,[r5,#0x44]
        STR      r9,[r5,#0x48]
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
        ENDP
;===================================================================================
synthVoiceFramef_thru PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#4
        LDR      r12,[r1,#0]
        STR      r12,[sp,#0]
        LDR      r4,|L1.3076|
        LDMIB    r1,{r3,r7}
        LDR      r10,[r4,#0x10]
        LDR      r9,[r4,#0x14]
        LDR      r6,[r4,#0]
        LDR      r0,[r1,#0xc]
        SUB      r5,r7,r3
        MOV      r3,#0
|L1.2032|
        LDR      r12,[sp,#0]
        ADD      lr,r12,r0,ASR #12
        LDR      r12,|L1.3080|
        LDRSB    r8,[lr],#1
        AND      r12,r0,r12
        LSL      r12,r12,#3
        RSB      r11,r12,#0xff
        ADD      r11,r11,#0x7f00
        LDRSB    lr,[lr,#0]
        MUL      r8,r11,r8
        ADD      r0,r0,r6
        MLA      r12,lr,r12,r8
        CMP      r0,r7
        ASR      r12,r12,#8
        BLT      |L1.2112|
        CMP      r5,r6
        LDRLT    r8,[sp,#4]
        MOVLT    lr,#0
        STRBLT   lr,[r8,#2]
        SUBGE    r0,r0,r5
|L1.2112|
        LDR      lr,[r4,#8]  ; Aeg_LP
        ADD      r3,r3,#1
        ADD      r8,lr,r10
        STR      r8,[r4,#8]  ; Aeg_LP
        LDR      lr,[r4,#0xc]  ; Aeg_RP
        MUL      r8,r12,r8
        ADD      lr,lr,r9
        MUL      r12,lr,r12
        ASR      r8,r8,#17
        ASR      r12,r12,#17
        STR      lr,[r4,#0xc]  ; Aeg_RP
        CMP      r3,#0x80
        STM      r2!,{r8,r12}
        BLT      |L1.2032|
        STR      r0,[r1,#0xc]
        POP      {r0-r11,pc}
        ENDP
;===================================================================================
synthVoiceFrame_thru PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#4
        LDR      r12,[r1,#0]
        STR      r12,[sp,#0]
        LDR      r9,|L1.3076|
        LDMIB    r1,{r3,r5}
        LDR      r11,[r9,#0x10]
        LDR      r10,[r9,#0x14]
        LDR      r4,[r9,#0]
        LDR      r0,[r1,#0xc]
        SUB      lr,r5,r3
        MOV      r3,#0
|L1.2224|
        LDR      r12,[sp,#0]
        ADD      r6,r12,r0,ASR #12
        LDR      r12,|L1.3080|
        LDRSB    r7,[r6],#1
        AND      r12,r0,r12
        LSL      r12,r12,#3
        RSB      r8,r12,#0xff
        ADD      r8,r8,#0x7f00
        LDRSB    r6,[r6,#0]
        MUL      r7,r8,r7
        ADD      r0,r0,r4
        MLA      r12,r6,r12,r7
        CMP      r0,r5
        ASR      r12,r12,#8
        BLT      |L1.2304|
        CMP      lr,r4
        LDRLT    r7,[sp,#4]
        MOVLT    r6,#0
        STRBLT   r6,[r7,#2]
        SUBGE    r0,r0,lr
|L1.2304|
        LDR      r6,[r9,#8]  ; Aeg_LP
        ADD      r3,r3,#1
        ADD      r6,r6,r11
        STR      r6,[r9,#8]  ; Aeg_LP
        LDR      r7,[r9,#0xc]  ; Aeg_RP
        MUL      r6,r12,r6
        ADD      r7,r7,r10
        STR      r7,[r9,#0xc]  ; Aeg_RP
        LDR      r8,[r2,#0]
        MUL      r12,r7,r12
        ADD      r6,r8,r6,ASR #17
        STR      r6,[r2],#4
        LDR      r6,[r2,#0]
        CMP      r3,#0x80
        ADD      r12,r6,r12,ASR #17
        STR      r12,[r2],#4
        BLT      |L1.2224|
        STR      r0,[r1,#0xc]
        POP      {r0-r11,pc}
        ENDP
;===================================================================================
synthVoiceFrame PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r1
        LDRH     r0,[r1,#0xdc]
        CMP      r0,#0
        ADDEQ    r4,r5,#4
        ADDNE    r4,r5,#0x70
        LDR      r0,[r4,#0x58]
        LDR      r1,[r4,#0x5c]
        ADD      r0,r0,r1,LSL #7
        STR      r0,[r4,#0x58]
        ASRS     r0,r0,#16
        LDRSH    r1,[r4,#0x6a]
        MVNMI    r0,r0
        SUB      r0,r0,#0x4000
        MUL      r1,r0,r1
        LDRSH    r7,[r4,#0x1a]
        ASR      r12,r1,#14
        LDRSH    r1,[r4,#0x68]
        ADD      r6,r12,#0x2000
        LDRSH    r12,[r4,#0x66]
        MUL      r1,r0,r1
        MUL      r0,r12,r0
        LDRSH    r12,[r4,#0x20]
        ASR      r0,r0,#14
        ADD      lr,r0,#0x2000
        LDRSH    r0,[r4,#0x18]
        ASR      r1,r1,#14
        SUB      r12,r12,r0
        MUL      r12,r7,r12
        ADD      r1,r1,#0x2000
        ADD      r12,r0,r12,ASR #15
        STRH     r12,[r4,#0x18]
        LDR      r12,[r4,#0x10]
        MUL      r12,lr,r12
        ASR      lr,r12,#13
        MUL      r0,lr,r0
        LDR      r12,|L1.3076|
        ASR      r0,r0,#13
        STR      r0,[r12,#0]  ; phinc
        LDRSH    r0,[r4,#0x38]
        LDRSH    lr,[r4,#0x40]
        LDRSH    r7,[r4,#0x3a]
        SUB      lr,lr,r0
        MUL      lr,r7,lr
        ADD      lr,r0,lr,ASR #15
        STRH     lr,[r4,#0x38]
        LDRH     lr,[r4,#0x46]
        MUL      lr,r6,lr
        ASR      lr,lr,#13
        MUL      r0,lr,r0
        ASR      lr,r0,#13
        STR      lr,[r12,#4]  ; lTheta
        LDRH     r0,[r4,#0x4a]
        CMP      r0,lr
        BLT      |L1.2612|
        LDRH     r0,[r4,#0x48]
        CMP      r0,lr
        BLE      |L1.2616|
|L1.2612|
        STR      r0,[r12,#4]  ; lTheta
|L1.2616|
        LDRSH    lr,[r4,#0x24]
        LDRSH    r0,[r4,#0x2c]
        LDRSH    r6,[r4,#0x26]
        SUB      r0,r0,lr
        MUL      r0,r6,r0
        ADD      r0,lr,r0,ASR #15
        STRH     r0,[r4,#0x24]
        LDRSH    r0,[r4,#0x30]
        LDRSH    r6,[r4,#0x32]
        MUL      r0,r1,r0
        MUL      r1,r6,r1
        ASR      r0,r0,#15
        LDRSH    r6,[r4,#0x34]
        MUL      r0,lr,r0
        ASR      r1,r1,#15
        ASR      r0,r0,#15
        STR      r6,[r12,#8]  ; Aeg_LP
        MUL      r1,lr,r1
        SUB      r7,r0,r6
        LDRSH    lr,[r4,#0x36]
        CMP      r0,r6
        STR      r7,[r12,#0x10]  ; Aeg_RP, Aeg_Ldelta
        RSBLT    r7,r7,#0
        ASR      r7,r7,#3
        RSBLT    r7,r7,#0
        STR      lr,[r12,#0xc]
        ASR      r1,r1,#15
        STR      r7,[r12,#0x10]  ; Aeg_Ldelta
        SUB      r7,r1,lr
        CMP      r1,lr
        STR      r7,[r12,#0x14]  ; Aeg_Rdelta
        RSBLT    r7,r7,#0
        ADD      r12,r12,#4
        LSL      lr,lr,#4
        LSL      r6,r6,#4
        ASR      r7,r7,#3
        STMIB    r12!,{r6,lr}  ; Aeg_Rdelta, Aeg_LP, Aeg_RP
        RSBLT    r7,r7,#0
        STR      r7,[r12,#8]
        STRH     r0,[r4,#0x34]
        STRH     r1,[r4,#0x36]
        LDRSH    r0,[r4,#0x64]
        CMP      r0,#0
        BLT      |L1.2808|
        LDREQ    r1,[r4,#0x60]
        SUB      r0,r0,#1
        STREQ    r1,[r4,#0x5c]
        STRH     r0,[r4,#0x64]
|L1.2808|
        LDRSH    r0,[r4,#0x1e]
        CMP      r0,#0
        BLT      |L1.2844|
        LDRHEQ   r1,[r4,#0x22]
        STRHEQ   r1,[r4,#0x20]
        LDRHEQ   r1,[r4,#0x1c]
        SUB      r0,r0,#1
        STRHEQ   r1,[r4,#0x1a]
        STRH     r0,[r4,#0x1e]
|L1.2844|
        LDRSH    r0,[r4,#0x3e]
        CMP      r0,#0
        BLT      |L1.2880|
        LDRHEQ   r1,[r4,#0x42]
        STRHEQ   r1,[r4,#0x40]
        LDRHEQ   r1,[r4,#0x3c]
        SUB      r0,r0,#1
        STRHEQ   r1,[r4,#0x3a]
        STRH     r0,[r4,#0x3e]
|L1.2880|
        LDRB     r0,[r5,#2]
        TST      r0,#0x10
        BEQ      |L1.2948|
        LDRSH    r0,[r4,#0x2a]
        CMP      r0,#0
        BLT      |L1.2948|
        BNE      |L1.2936|
        LDRH     r0,[r4,#0x2e]
        STRH     r0,[r4,#0x2c]
        LDRH     r0,[r4,#0x28]
        STRH     r0,[r4,#0x26]
        LDRB     r0,[r5,#2]
        BIC      r0,r0,#0x10
        STRB     r0,[r5,#2]
|L1.2936|
        LDRH     r0,[r4,#0x2a]
        SUB      r0,r0,#1
        STRH     r0,[r4,#0x2a]
|L1.2948|
        LDR      r1,|L1.3084|
        MOVS     r0,r3
        MOVNE    r0,#1
        ADD      r0,r1,r0,LSL #4
        LDRH     r1,[r4,#0x44]
        LDR      r3,[r0,r1,LSL #2]
        MOV      r1,r4
        MOV      r0,r5
        BLX      r3
        LDRB     r0,[r5,#3]
        CMP      r0,#0
        BEQ      |L1.3052|
        LDRB     r1,[r5,#2]
        CMP      r1,#0
        SUBNE    r0,r0,#1
        ANDNE    r0,r0,#0xff
        STRBNE   r0,[r5,#3]
        CMPNE    r0,#0
        BNE      |L1.3068|
        MOV      r0,#0x31
        STRB     r0,[r5,#2]
        MOV      r0,#0
        STRB     r0,[r5,#3]
        LDRH     r0,[r5,#0xdc]
        MVN      r0,r0
        STRH     r0,[r5,#0xdc]
|L1.3052|
        LDRB     r0,[r5,#2]
        TST      r0,#0x10
        LDRHEQ   r0,[r4,#0x24]
        POPEQ    {r4-r8,pc}
|L1.3068|
        LDR      r0,|L1.3088|
        POP      {r4-r8,pc}
|L1.3076|
        DCD      ||.data$0||
|L1.3080|
        DCD      0x00000ff8
|L1.3084|
        DCD      ||.data$0|| + 24
|L1.3088|
        DCD      0x00007fff
        ENDP
;===================================================================================

        AREA ||.data||, DATA, ALIGN=2

||.data$0||
phinc
        DCD      0x00000000
lTheta
        DCD      0x00000000
Aeg_LP
        DCD      0x00000000
Aeg_RP
        DCD      0x00000000
Aeg_Ldelta
        DCD      0x00000000
Aeg_Rdelta
        DCD      0x00000000
||synthfunc@synthVoiceFrame_0||
        DCD      synthVoiceFramef_thru
        DCD      synthVoiceFramef_lpf
        DCD      synthVoiceFramef_hpf
        DCD      synthVoiceFramef_bpf
        DCD      synthVoiceFrame_thru
        DCD      synthVoiceFrame_lpf
        DCD      synthVoiceFrame_hpf
        DCD      synthVoiceFrame_bpf


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

||.arm_vfe_header$6||
        DCD      0x00000000


        EXPORT synthVoiceFramef_lpf
        EXPORT synthVoiceFrame_lpf
        EXPORT synthVoiceFramef_hpf
        EXPORT synthVoiceFrame_hpf
        EXPORT synthVoiceFramef_bpf
        EXPORT synthVoiceFrame_bpf
        EXPORT synthVoiceFramef_thru
        EXPORT synthVoiceFrame_thru
        EXPORT synthVoiceFrame

        IMPORT ||Lib$$Request$$armlib|| [WEAK]

        KEEP ||BuildAttributes$$ARM_ISAv5$M$E$P$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$REQ8$PRES8$EABIv2||
||BuildAttributes$$ARM_ISAv5$M$E$P$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$REQ8$PRES8$EABIv2|| EQU 0

        ASSERT {ENDIAN} = "little"
        ASSERT {SWST} = {FALSE}
        ASSERT {NOSWST} = {TRUE}
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {NOT_SHL} = {TRUE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        ASSERT {SHL1} = {FALSE}
        ASSERT {SHL2} = {FALSE}
        END
