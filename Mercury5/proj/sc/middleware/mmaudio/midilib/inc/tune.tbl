/*****************************************************************************/
/* SynthDRV_tune_tbl(32000)                                                  */
/* tune.tbl                                                                  */
/* 2007/08                                                                   */
/* Copyright 2007 FAITH,INC.                                                 */
/* H.M.                                                                      */
/*****************************************************************************/

#if 0
const
unsigned short
tblTune[ 1536 ] = {
    0x5833, 0x583D, 0x5848, 0x5852, 0x585C, 0x5866, 0x5870, 0x587B,
    0x5885, 0x588F, 0x5899, 0x58A4, 0x58AE, 0x58B8, 0x58C2, 0x58CD,
    0x58D7, 0x58E1, 0x58EB, 0x58F6, 0x5900, 0x590A, 0x5914, 0x591F,
    0x5929, 0x5933, 0x593E, 0x5948, 0x5952, 0x595D, 0x5967, 0x5971,
    0x597C, 0x5986, 0x5990, 0x599B, 0x59A5, 0x59AF, 0x59BA, 0x59C4,
    0x59CE, 0x59D9, 0x59E3, 0x59EE, 0x59F8, 0x5A02, 0x5A0D, 0x5A17,
    0x5A22, 0x5A2C, 0x5A36, 0x5A41, 0x5A4B, 0x5A56, 0x5A60, 0x5A6B,
    0x5A75, 0x5A80, 0x5A8A, 0x5A94, 0x5A9F, 0x5AA9, 0x5AB4, 0x5ABE,
    0x5AC9, 0x5AD3, 0x5ADE, 0x5AE8, 0x5AF3, 0x5AFD, 0x5B08, 0x5B12,
    0x5B1D, 0x5B27, 0x5B32, 0x5B3C, 0x5B47, 0x5B52, 0x5B5C, 0x5B67,
    0x5B71, 0x5B7C, 0x5B86, 0x5B91, 0x5B9C, 0x5BA6, 0x5BB1, 0x5BBB,
    0x5BC6, 0x5BD1, 0x5BDB, 0x5BE6, 0x5BF0, 0x5BFB, 0x5C06, 0x5C10,
    0x5C1B, 0x5C26, 0x5C30, 0x5C3B, 0x5C45, 0x5C50, 0x5C5B, 0x5C65,
    0x5C70, 0x5C7B, 0x5C86, 0x5C90, 0x5C9B, 0x5CA6, 0x5CB0, 0x5CBB,
    0x5CC6, 0x5CD0, 0x5CDB, 0x5CE6, 0x5CF1, 0x5CFB, 0x5D06, 0x5D11,
    0x5D1C, 0x5D26, 0x5D31, 0x5D3C, 0x5D47, 0x5D51, 0x5D5C, 0x5D67,
    0x5D72, 0x5D7D, 0x5D87, 0x5D92, 0x5D9D, 0x5DA8, 0x5DB3, 0x5DBE,
    0x5DC8, 0x5DD3, 0x5DDE, 0x5DE9, 0x5DF4, 0x5DFF, 0x5E09, 0x5E14,
    0x5E1F, 0x5E2A, 0x5E35, 0x5E40, 0x5E4B, 0x5E56, 0x5E61, 0x5E6B,
    0x5E76, 0x5E81, 0x5E8C, 0x5E97, 0x5EA2, 0x5EAD, 0x5EB8, 0x5EC3,
    0x5ECE, 0x5ED9, 0x5EE4, 0x5EEF, 0x5EFA, 0x5F05, 0x5F10, 0x5F1B,
    0x5F26, 0x5F31, 0x5F3C, 0x5F47, 0x5F52, 0x5F5D, 0x5F68, 0x5F73,
    0x5F7E, 0x5F89, 0x5F94, 0x5F9F, 0x5FAA, 0x5FB5, 0x5FC0, 0x5FCB,
    0x5FD6, 0x5FE1, 0x5FEC, 0x5FF7, 0x6002, 0x600D, 0x6019, 0x6024,
    0x602F, 0x603A, 0x6045, 0x6050, 0x605B, 0x6066, 0x6072, 0x607D,
    0x6088, 0x6093, 0x609E, 0x60A9, 0x60B4, 0x60C0, 0x60CB, 0x60D6,
    0x60E1, 0x60EC, 0x60F8, 0x6103, 0x610E, 0x6119, 0x6124, 0x6130,
    0x613B, 0x6146, 0x6151, 0x615D, 0x6168, 0x6173, 0x617E, 0x618A,
    0x6195, 0x61A0, 0x61AB, 0x61B7, 0x61C2, 0x61CD, 0x61D9, 0x61E4,
    0x61EF, 0x61FB, 0x6206, 0x6211, 0x621D, 0x6228, 0x6233, 0x623F,
    0x624A, 0x6255, 0x6261, 0x626C, 0x6277, 0x6283, 0x628E, 0x629A,
    0x62A5, 0x62B0, 0x62BC, 0x62C7, 0x62D3, 0x62DE, 0x62E9, 0x62F5,
    0x6300, 0x630C, 0x6317, 0x6323, 0x632E, 0x633A, 0x6345, 0x6350,
    0x635C, 0x6367, 0x6373, 0x637E, 0x638A, 0x6395, 0x63A1, 0x63AC,
    0x63B8, 0x63C3, 0x63CF, 0x63DB, 0x63E6, 0x63F2, 0x63FD, 0x6409,
    0x6414, 0x6420, 0x642B, 0x6437, 0x6443, 0x644E, 0x645A, 0x6465,
    0x6471, 0x647D, 0x6488, 0x6494, 0x649F, 0x64AB, 0x64B7, 0x64C2,
    0x64CE, 0x64DA, 0x64E5, 0x64F1, 0x64FD, 0x6508, 0x6514, 0x6520,
    0x652B, 0x6537, 0x6543, 0x654E, 0x655A, 0x6566, 0x6571, 0x657D,
    0x6589, 0x6595, 0x65A0, 0x65AC, 0x65B8, 0x65C4, 0x65CF, 0x65DB,
    0x65E7, 0x65F3, 0x65FE, 0x660A, 0x6616, 0x6622, 0x662E, 0x6639,
    0x6645, 0x6651, 0x665D, 0x6669, 0x6675, 0x6680, 0x668C, 0x6698,
    0x66A4, 0x66B0, 0x66BC, 0x66C8, 0x66D3, 0x66DF, 0x66EB, 0x66F7,
    0x6703, 0x670F, 0x671B, 0x6727, 0x6733, 0x673F, 0x674B, 0x6756,
    0x6762, 0x676E, 0x677A, 0x6786, 0x6792, 0x679E, 0x67AA, 0x67B6,
    0x67C2, 0x67CE, 0x67DA, 0x67E6, 0x67F2, 0x67FE, 0x680A, 0x6816,
    0x6822, 0x682E, 0x683A, 0x6846, 0x6852, 0x685E, 0x686A, 0x6877,
    0x6883, 0x688F, 0x689B, 0x68A7, 0x68B3, 0x68BF, 0x68CB, 0x68D7,
    0x68E3, 0x68EF, 0x68FC, 0x6908, 0x6914, 0x6920, 0x692C, 0x6938,
    0x6944, 0x6951, 0x695D, 0x6969, 0x6975, 0x6981, 0x698E, 0x699A,
    0x69A6, 0x69B2, 0x69BE, 0x69CB, 0x69D7, 0x69E3, 0x69EF, 0x69FB,
    0x6A08, 0x6A14, 0x6A20, 0x6A2D, 0x6A39, 0x6A45, 0x6A51, 0x6A5E,
    0x6A6A, 0x6A76, 0x6A83, 0x6A8F, 0x6A9B, 0x6AA7, 0x6AB4, 0x6AC0,
    0x6ACC, 0x6AD9, 0x6AE5, 0x6AF1, 0x6AFE, 0x6B0A, 0x6B17, 0x6B23,
    0x6B2F, 0x6B3C, 0x6B48, 0x6B54, 0x6B61, 0x6B6D, 0x6B7A, 0x6B86,
    0x6B93, 0x6B9F, 0x6BAB, 0x6BB8, 0x6BC4, 0x6BD1, 0x6BDD, 0x6BEA,
    0x6BF6, 0x6C03, 0x6C0F, 0x6C1C, 0x6C28, 0x6C35, 0x6C41, 0x6C4E,
    0x6C5A, 0x6C67, 0x6C73, 0x6C80, 0x6C8C, 0x6C99, 0x6CA5, 0x6CB2,
    0x6CBE, 0x6CCB, 0x6CD8, 0x6CE4, 0x6CF1, 0x6CFD, 0x6D0A, 0x6D17,
    0x6D23, 0x6D30, 0x6D3C, 0x6D49, 0x6D56, 0x6D62, 0x6D6F, 0x6D7C,
    0x6D88, 0x6D95, 0x6DA1, 0x6DAE, 0x6DBB, 0x6DC7, 0x6DD4, 0x6DE1,
    0x6DEE, 0x6DFA, 0x6E07, 0x6E14, 0x6E20, 0x6E2D, 0x6E3A, 0x6E47,
    0x6E53, 0x6E60, 0x6E6D, 0x6E7A, 0x6E86, 0x6E93, 0x6EA0, 0x6EAD,
    0x6EB9, 0x6EC6, 0x6ED3, 0x6EE0, 0x6EED, 0x6EFA, 0x6F06, 0x6F13,
    0x6F20, 0x6F2D, 0x6F3A, 0x6F47, 0x6F53, 0x6F60, 0x6F6D, 0x6F7A,
    0x6F87, 0x6F94, 0x6FA1, 0x6FAE, 0x6FBA, 0x6FC7, 0x6FD4, 0x6FE1,
    0x6FEE, 0x6FFB, 0x7008, 0x7015, 0x7022, 0x702F, 0x703C, 0x7049,
    0x7056, 0x7063, 0x7070, 0x707D, 0x708A, 0x7097, 0x70A4, 0x70B1,
    0x70BE, 0x70CB, 0x70D8, 0x70E5, 0x70F2, 0x70FF, 0x710C, 0x7119,
    0x7126, 0x7133, 0x7140, 0x714D, 0x715B, 0x7168, 0x7175, 0x7182,
    0x718F, 0x719C, 0x71A9, 0x71B6, 0x71C3, 0x71D1, 0x71DE, 0x71EB,
    0x71F8, 0x7205, 0x7212, 0x7220, 0x722D, 0x723A, 0x7247, 0x7254,
    0x7262, 0x726F, 0x727C, 0x7289, 0x7297, 0x72A4, 0x72B1, 0x72BE,
    0x72CC, 0x72D9, 0x72E6, 0x72F3, 0x7301, 0x730E, 0x731B, 0x7328,
    0x7336, 0x7343, 0x7350, 0x735E, 0x736B, 0x7378, 0x7386, 0x7393,
    0x73A0, 0x73AE, 0x73BB, 0x73C9, 0x73D6, 0x73E3, 0x73F1, 0x73FE,
    0x740C, 0x7419, 0x7426, 0x7434, 0x7441, 0x744F, 0x745C, 0x746A,
    0x7477, 0x7484, 0x7492, 0x749F, 0x74AD, 0x74BA, 0x74C8, 0x74D5,
    0x74E3, 0x74F0, 0x74FE, 0x750B, 0x7519, 0x7526, 0x7534, 0x7541,
    0x754F, 0x755D, 0x756A, 0x7578, 0x7585, 0x7593, 0x75A0, 0x75AE,
    0x75BC, 0x75C9, 0x75D7, 0x75E4, 0x75F2, 0x7600, 0x760D, 0x761B,
    0x7629, 0x7636, 0x7644, 0x7652, 0x765F, 0x766D, 0x767B, 0x7688,
    0x7696, 0x76A4, 0x76B1, 0x76BF, 0x76CD, 0x76DB, 0x76E8, 0x76F6,
    0x7704, 0x7712, 0x771F, 0x772D, 0x773B, 0x7749, 0x7756, 0x7764,
    0x7772, 0x7780, 0x778E, 0x779B, 0x77A9, 0x77B7, 0x77C5, 0x77D3,
    0x77E1, 0x77EE, 0x77FC, 0x780A, 0x7818, 0x7826, 0x7834, 0x7842,
    0x7850, 0x785D, 0x786B, 0x7879, 0x7887, 0x7895, 0x78A3, 0x78B1,
    0x78BF, 0x78CD, 0x78DB, 0x78E9, 0x78F7, 0x7905, 0x7913, 0x7921,
    0x792F, 0x793D, 0x794B, 0x7959, 0x7967, 0x7975, 0x7983, 0x7991,
    0x799F, 0x79AD, 0x79BB, 0x79C9, 0x79D7, 0x79E5, 0x79F3, 0x7A01,
    0x7A10, 0x7A1E, 0x7A2C, 0x7A3A, 0x7A48, 0x7A56, 0x7A64, 0x7A72,
    0x7A81, 0x7A8F, 0x7A9D, 0x7AAB, 0x7AB9, 0x7AC7, 0x7AD6, 0x7AE4,
    0x7AF2, 0x7B00, 0x7B0E, 0x7B1D, 0x7B2B, 0x7B39, 0x7B47, 0x7B56,
    0x7B64, 0x7B72, 0x7B80, 0x7B8F, 0x7B9D, 0x7BAB, 0x7BB9, 0x7BC8,
    0x7BD6, 0x7BE4, 0x7BF3, 0x7C01, 0x7C0F, 0x7C1E, 0x7C2C, 0x7C3A,
    0x7C49, 0x7C57, 0x7C65, 0x7C74, 0x7C82, 0x7C91, 0x7C9F, 0x7CAD,
    0x7CBC, 0x7CCA, 0x7CD9, 0x7CE7, 0x7CF6, 0x7D04, 0x7D12, 0x7D21,
    0x7D2F, 0x7D3E, 0x7D4C, 0x7D5B, 0x7D69, 0x7D78, 0x7D86, 0x7D95,
    0x7DA3, 0x7DB2, 0x7DC0, 0x7DCF, 0x7DDD, 0x7DEC, 0x7DFA, 0x7E09,
    0x7E18, 0x7E26, 0x7E35, 0x7E43, 0x7E52, 0x7E60, 0x7E6F, 0x7E7E,
    0x7E8C, 0x7E9B, 0x7EAA, 0x7EB8, 0x7EC7, 0x7ED5, 0x7EE4, 0x7EF3,
    0x7F01, 0x7F10, 0x7F1F, 0x7F2D, 0x7F3C, 0x7F4B, 0x7F5A, 0x7F68,
    0x7F77, 0x7F86, 0x7F94, 0x7FA3, 0x7FB2, 0x7FC1, 0x7FCF, 0x7FDE,
    0x7FED, 0x7FFC, 0x800B, 0x8019, 0x8028, 0x8037, 0x8046, 0x8055,
    0x8063, 0x8072, 0x8081, 0x8090, 0x809F, 0x80AE, 0x80BD, 0x80CB,
    0x80DA, 0x80E9, 0x80F8, 0x8107, 0x8116, 0x8125, 0x8134, 0x8143,
    0x8152, 0x8161, 0x8170, 0x817F, 0x818D, 0x819C, 0x81AB, 0x81BA,
    0x81C9, 0x81D8, 0x81E7, 0x81F6, 0x8205, 0x8214, 0x8223, 0x8233,
    0x8242, 0x8251, 0x8260, 0x826F, 0x827E, 0x828D, 0x829C, 0x82AB,
    0x82BA, 0x82C9, 0x82D8, 0x82E7, 0x82F7, 0x8306, 0x8315, 0x8324,
    0x8333, 0x8342, 0x8352, 0x8361, 0x8370, 0x837F, 0x838E, 0x839D,
    0x83AD, 0x83BC, 0x83CB, 0x83DA, 0x83EA, 0x83F9, 0x8408, 0x8417,
    0x8427, 0x8436, 0x8445, 0x8454, 0x8464, 0x8473, 0x8482, 0x8492,
    0x84A1, 0x84B0, 0x84C0, 0x84CF, 0x84DE, 0x84EE, 0x84FD, 0x850C,
    0x851C, 0x852B, 0x853A, 0x854A, 0x8559, 0x8569, 0x8578, 0x8588,
    0x8597, 0x85A6, 0x85B6, 0x85C5, 0x85D5, 0x85E4, 0x85F4, 0x8603,
    0x8613, 0x8622, 0x8632, 0x8641, 0x8651, 0x8660, 0x8670, 0x867F,
    0x868F, 0x869E, 0x86AE, 0x86BD, 0x86CD, 0x86DD, 0x86EC, 0x86FC,
    0x870B, 0x871B, 0x872B, 0x873A, 0x874A, 0x8759, 0x8769, 0x8779,
    0x8788, 0x8798, 0x87A8, 0x87B7, 0x87C7, 0x87D7, 0x87E6, 0x87F6,
    0x8806, 0x8816, 0x8825, 0x8835, 0x8845, 0x8855, 0x8864, 0x8874,
    0x8884, 0x8894, 0x88A3, 0x88B3, 0x88C3, 0x88D3, 0x88E3, 0x88F2,
    0x8902, 0x8912, 0x8922, 0x8932, 0x8942, 0x8951, 0x8961, 0x8971,
    0x8981, 0x8991, 0x89A1, 0x89B1, 0x89C1, 0x89D1, 0x89E1, 0x89F0,
    0x8A00, 0x8A10, 0x8A20, 0x8A30, 0x8A40, 0x8A50, 0x8A60, 0x8A70,
    0x8A80, 0x8A90, 0x8AA0, 0x8AB0, 0x8AC0, 0x8AD0, 0x8AE0, 0x8AF0,
    0x8B00, 0x8B10, 0x8B21, 0x8B31, 0x8B41, 0x8B51, 0x8B61, 0x8B71,
    0x8B81, 0x8B91, 0x8BA1, 0x8BB1, 0x8BC2, 0x8BD2, 0x8BE2, 0x8BF2,
    0x8C02, 0x8C12, 0x8C23, 0x8C33, 0x8C43, 0x8C53, 0x8C63, 0x8C74,
    0x8C84, 0x8C94, 0x8CA4, 0x8CB5, 0x8CC5, 0x8CD5, 0x8CE5, 0x8CF6,
    0x8D06, 0x8D16, 0x8D27, 0x8D37, 0x8D47, 0x8D58, 0x8D68, 0x8D78,
    0x8D89, 0x8D99, 0x8DA9, 0x8DBA, 0x8DCA, 0x8DDA, 0x8DEB, 0x8DFB,
    0x8E0C, 0x8E1C, 0x8E2C, 0x8E3D, 0x8E4D, 0x8E5E, 0x8E6E, 0x8E7F,
    0x8E8F, 0x8EA0, 0x8EB0, 0x8EC1, 0x8ED1, 0x8EE2, 0x8EF2, 0x8F03,
    0x8F13, 0x8F24, 0x8F34, 0x8F45, 0x8F55, 0x8F66, 0x8F76, 0x8F87,
    0x8F98, 0x8FA8, 0x8FB9, 0x8FC9, 0x8FDA, 0x8FEB, 0x8FFB, 0x900C,
    0x901D, 0x902D, 0x903E, 0x904E, 0x905F, 0x9070, 0x9081, 0x9091,
    0x90A2, 0x90B3, 0x90C3, 0x90D4, 0x90E5, 0x90F6, 0x9106, 0x9117,
    0x9128, 0x9139, 0x9149, 0x915A, 0x916B, 0x917C, 0x918D, 0x919D,
    0x91AE, 0x91BF, 0x91D0, 0x91E1, 0x91F2, 0x9202, 0x9213, 0x9224,
    0x9235, 0x9246, 0x9257, 0x9268, 0x9279, 0x928A, 0x929B, 0x92AC,
    0x92BC, 0x92CD, 0x92DE, 0x92EF, 0x9300, 0x9311, 0x9322, 0x9333,
    0x9344, 0x9355, 0x9366, 0x9377, 0x9388, 0x939A, 0x93AB, 0x93BC,
    0x93CD, 0x93DE, 0x93EF, 0x9400, 0x9411, 0x9422, 0x9433, 0x9444,
    0x9456, 0x9467, 0x9478, 0x9489, 0x949A, 0x94AB, 0x94BC, 0x94CE,
    0x94DF, 0x94F0, 0x9501, 0x9513, 0x9524, 0x9535, 0x9546, 0x9557,
    0x9569, 0x957A, 0x958B, 0x959D, 0x95AE, 0x95BF, 0x95D0, 0x95E2,
    0x95F3, 0x9604, 0x9616, 0x9627, 0x9638, 0x964A, 0x965B, 0x966C,
    0x967E, 0x968F, 0x96A1, 0x96B2, 0x96C3, 0x96D5, 0x96E6, 0x96F8,
    0x9709, 0x971B, 0x972C, 0x973E, 0x974F, 0x9761, 0x9772, 0x9784,
    0x9795, 0x97A7, 0x97B8, 0x97CA, 0x97DB, 0x97ED, 0x97FE, 0x9810,
    0x9821, 0x9833, 0x9845, 0x9856, 0x9868, 0x9879, 0x988B, 0x989D,
    0x98AE, 0x98C0, 0x98D2, 0x98E3, 0x98F5, 0x9907, 0x9918, 0x992A,
    0x993C, 0x994D, 0x995F, 0x9971, 0x9982, 0x9994, 0x99A6, 0x99B8,
    0x99C9, 0x99DB, 0x99ED, 0x99FF, 0x9A11, 0x9A22, 0x9A34, 0x9A46,
    0x9A58, 0x9A6A, 0x9A7C, 0x9A8D, 0x9A9F, 0x9AB1, 0x9AC3, 0x9AD5,
    0x9AE7, 0x9AF9, 0x9B0B, 0x9B1C, 0x9B2E, 0x9B40, 0x9B52, 0x9B64,
    0x9B76, 0x9B88, 0x9B9A, 0x9BAC, 0x9BBE, 0x9BD0, 0x9BE2, 0x9BF4,
    0x9C06, 0x9C18, 0x9C2A, 0x9C3C, 0x9C4E, 0x9C60, 0x9C72, 0x9C84,
    0x9C97, 0x9CA9, 0x9CBB, 0x9CCD, 0x9CDF, 0x9CF1, 0x9D03, 0x9D15,
    0x9D28, 0x9D3A, 0x9D4C, 0x9D5E, 0x9D70, 0x9D82, 0x9D95, 0x9DA7,
    0x9DB9, 0x9DCB, 0x9DDE, 0x9DF0, 0x9E02, 0x9E14, 0x9E27, 0x9E39,
    0x9E4B, 0x9E5D, 0x9E70, 0x9E82, 0x9E94, 0x9EA7, 0x9EB9, 0x9ECB,
    0x9EDE, 0x9EF0, 0x9F02, 0x9F15, 0x9F27, 0x9F3A, 0x9F4C, 0x9F5E,
    0x9F71, 0x9F83, 0x9F96, 0x9FA8, 0x9FBA, 0x9FCD, 0x9FDF, 0x9FF2,
    0xA004, 0xA017, 0xA029, 0xA03C, 0xA04E, 0xA061, 0xA073, 0xA086,
    0xA099, 0xA0AB, 0xA0BE, 0xA0D0, 0xA0E3, 0xA0F5, 0xA108, 0xA11B,
    0xA12D, 0xA140, 0xA152, 0xA165, 0xA178, 0xA18A, 0xA19D, 0xA1B0,
    0xA1C2, 0xA1D5, 0xA1E8, 0xA1FB, 0xA20D, 0xA220, 0xA233, 0xA245,
    0xA258, 0xA26B, 0xA27E, 0xA291, 0xA2A3, 0xA2B6, 0xA2C9, 0xA2DC,
    0xA2EF, 0xA301, 0xA314, 0xA327, 0xA33A, 0xA34D, 0xA360, 0xA372,
    0xA385, 0xA398, 0xA3AB, 0xA3BE, 0xA3D1, 0xA3E4, 0xA3F7, 0xA40A,
    0xA41D, 0xA430, 0xA443, 0xA456, 0xA469, 0xA47C, 0xA48F, 0xA4A2,
    0xA4B5, 0xA4C8, 0xA4DB, 0xA4EE, 0xA501, 0xA514, 0xA527, 0xA53A,
    0xA54D, 0xA560, 0xA573, 0xA587, 0xA59A, 0xA5AD, 0xA5C0, 0xA5D3,
    0xA5E6, 0xA5F9, 0xA60D, 0xA620, 0xA633, 0xA646, 0xA659, 0xA66D,
    0xA680, 0xA693, 0xA6A6, 0xA6BA, 0xA6CD, 0xA6E0, 0xA6F3, 0xA707,
    0xA71A, 0xA72D, 0xA741, 0xA754, 0xA767, 0xA77B, 0xA78E, 0xA7A1,
    0xA7B5, 0xA7C8, 0xA7DB, 0xA7EF, 0xA802, 0xA816, 0xA829, 0xA83D,
    0xA850, 0xA863, 0xA877, 0xA88A, 0xA89E, 0xA8B1, 0xA8C5, 0xA8D8,
    0xA8EC, 0xA8FF, 0xA913, 0xA926, 0xA93A, 0xA94E, 0xA961, 0xA975,
    0xA988, 0xA99C, 0xA9AF, 0xA9C3, 0xA9D7, 0xA9EA, 0xA9FE, 0xAA12,
    0xAA25, 0xAA39, 0xAA4D, 0xAA60, 0xAA74, 0xAA88, 0xAA9B, 0xAAAF,
    0xAAC3, 0xAAD6, 0xAAEA, 0xAAFE, 0xAB12, 0xAB25, 0xAB39, 0xAB4D,
    0xAB61, 0xAB75, 0xAB88, 0xAB9C, 0xABB0, 0xABC4, 0xABD8, 0xABEC,
    0xAC00, 0xAC13, 0xAC27, 0xAC3B, 0xAC4F, 0xAC63, 0xAC77, 0xAC8B,
    0xAC9F, 0xACB3, 0xACC7, 0xACDB, 0xACEF, 0xAD03, 0xAD17, 0xAD2B,
    0xAD3F, 0xAD53, 0xAD67, 0xAD7B, 0xAD8F, 0xADA3, 0xADB7, 0xADCB,
    0xADDF, 0xADF3, 0xAE07, 0xAE1B, 0xAE2F, 0xAE44, 0xAE58, 0xAE6C,
    0xAE80, 0xAE94, 0xAEA8, 0xAEBC, 0xAED1, 0xAEE5, 0xAEF9, 0xAF0D,
    0xAF22, 0xAF36, 0xAF4A, 0xAF5E, 0xAF73, 0xAF87, 0xAF9B, 0xAFAF,
    0xAFC4, 0xAFD8, 0xAFEC, 0xB001, 0xB015, 0xB029, 0xB03E, 0xB052,
};

/*---------------------------------------------------------------------------*/
#else
	//extern unsigned short miditblTune[1536];
	extern unsigned short *gU8MIDItblTune;
#endif

static
unsigned long
getPhInc(
    long            keyTune,
    unsigned long   wavTune
)
{
    unsigned long   h = ( wavTune >> 16 );
    unsigned long   l = ( wavTune & 0x0000FFFF );
    int             shift = 6;
    unsigned short  tbl;

    keyTune -= 8454144;
    while ( keyTune < 0 )
    {
        keyTune += 786432;
        shift ++;
    }
//    tbl = tblTune[ keyTune >> 9 ];
	tbl = gU8MIDItblTune[ keyTune >> 9 ]; //ccc

    if ( shift < 16 )
    {
        return ( ( ( h * tbl ) >> shift ) + ( ( l * tbl ) >> ( shift + 16 ) ) );
    }
    return ( ( h * tbl ) >> shift );
}

/*---------------------------------------------------------------------------*/

#define TBL_TUNE_PHINC( coarse, fine, wavTune ) \
        getPhInc( ( ( (long)coarse ) << 16 ) + fine, wavTune )

/*****************************************************************************/
