#ifndef __MDL_VDR_MSG_DEF_H__
#define __MDL_VDR_MSG_DEF_H__

// ref : "ema_prim.hc"
VM_MSG_DEF(MDLVDR_MSG_BASE=(VM_CUS27_BASE + 0x0000), void DUMMY) // Message Base ID

VM_MSG_DEF(MDLVDR_CMD_INIT= MDLVDR_MSG_BASE, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_RECORD, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_STOP, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_PAUSE, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_RESUME, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_SAVE, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_DISCARD, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_ABORT, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_DEINIT, void DUMMY)
VM_MSG_DEF(MDLVDR_CMD_DESTROY, void DUMMY)

VM_MSG_DEF(MDLVDR_RESPONSE_VIDEO= (MDLVDR_MSG_BASE + 0x0010), void DUMMY)   // General purpose video task response
VM_MSG_DEF(MDLVDR_RESPONSE_VIDEO_STOPPED, void DUMMY)// Video Task Stopped Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_VIDEO_PAUSED, void DUMMY)// Video Task Paused Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_VIDEO_RESUMED, void DUMMY)// Video Task Resumed Successfully

VM_MSG_DEF(MDLVDR_RESPONSE_AUDIO= (MDLVDR_MSG_BASE + 0x0020), void DUMMY)   // General purpose audio task response
VM_MSG_DEF(MDLVDR_RESPONSE_AUDIO_STOPPED, void DUMMY)// Audio Task Stopped Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_AUDIO_PAUSED, void DUMMY)// Audio Task Paused Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_AUDIO_RESUMED, void DUMMY)// Audio Task Resumed Successfully

VM_MSG_DEF(MDLVDR_RESPONSE_WRITE= (MDLVDR_MSG_BASE + 0x0030), void DUMMY)   // General purpose write task response
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_STOPPED, void DUMMY)// Write Task Stopped Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_PAUSED, void DUMMY)// Write Task Paused Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_RESUMED, void DUMMY)// Write Task Resumed Successfully
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_START_SAVE, void DUMMY)// Write Task Starts Saving
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_SAVE_DONE, void DUMMY)// Write Task Saves File Done
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_START_DISCARD, void DUMMY)// Write Task Starts Discard
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_DISCARD_DONE, void DUMMY)// Write Task Discards Files Done
VM_MSG_DEF(MDLVDR_RESPONSE_WRITE_ABORT_SAVING, void DUMMY)// Write Task Abort Saving

VM_MSG_DEF(MDLVDR_INTERNAL_VIDEO= (MDLVDR_MSG_BASE + 0x0040), void DUMMY)   // Internal Command to Video Task
VM_MSG_DEF(MDLVDR_INTERNAL_VIDEO_ENCODE, void DUMMY)// Video Task to Fire Encode One Frame
VM_MSG_DEF(MDLVDR_INTERNAL_VIDEO_GETBITS, void DUMMY)// Video Task to Get Encoded Bitstream

VM_MSG_DEF(MDLVDR_INTERNAL_AUDIO= (MDLVDR_MSG_BASE + 0x0050), void DUMMY)   // Internal Command to Video Task
VM_MSG_DEF(MDLVDR_INTERNAL_AUDIO_ENCODE, void DUMMY)// Video Task to Fire Encode One Frame

VM_MSG_DEF(MDLVDR_INTERNAL_WRITE= (MDLVDR_MSG_BASE + 0x0060), void DUMMY)   // Internal Command to Write Task
VM_MSG_DEF(MDLVDR_INTERNAL_WRITE_SAVE_DONE, void DUMMY)// Write Task Saves File Done
VM_MSG_DEF(MDLVDR_INTERNAL_WRITE_DISCARD_START, void DUMMY)// Write Task Discards Files
VM_MSG_DEF(MDLVDR_INTERNAL_WRITE_DATA, void DUMMY)// Write Task Write Buffer


VM_MSG_DEF(MDLVDR_MBOX_NONE= (MDLVDR_MSG_BASE + 0x007F), void DUMMY)   // NOTE: this should not be error

VM_MSG_DEF(MDLVDR_ERROR_MASK= (MDLVDR_MSG_BASE + 0x0080), void DUMMY)   // Error Mask
VM_MSG_DEF(MDLVDR_ERROR_MAIN, void DUMMY)
VM_MSG_DEF(MDLVDR_ERROR_VIDEO, void DUMMY)
VM_MSG_DEF(MDLVDR_ERROR_AUDIO, void DUMMY)
VM_MSG_DEF(MDLVDR_ERROR_WRITE, void DUMMY)
VM_MSG_DEF(MDLVDR_ERROR_DISK_FULL, void DUMMY)// disk full
VM_MSG_DEF(MDLVDR_ERROR_MASK_TIMER= (MDLVDR_MSG_BASE + 0x0090), void DUMMY)   // Error Mask for Timer

VM_MSG_DEF(MDLVDR_TIMER_BASE=(MDLVDR_ERROR_MASK_TIMER), void DUMMY)
// Timer
//VM_MSG_DEF(MDLVDR_TIMER_BASE=(MDLVDR_MBX_MAIN + MDLVDR_ERROR_MASK_TIMER), void DUMMY) // sync. with Error Mask below
VM_MSG_DEF(MDLVDR_TIMER_MAIN=(MDLVDR_TIMER_BASE), void DUMMY)
VM_MSG_DEF(MDLVDR_TIMER_VIDEO=(MDLVDR_TIMER_BASE + 1), void DUMMY) // timer to simulate video event from driver
VM_MSG_DEF(MDLVDR_TIMER_AUDIO=(MDLVDR_TIMER_BASE + 2), void DUMMY) // timer to simulate audio event from driver
VM_MSG_DEF(MDLVDR_TIMER_WRITE=(MDLVDR_TIMER_BASE + 3), void DUMMY)
VM_MSG_DEF(MDLVDR_TIMER_NOTIFY=(MDLVDR_TIMER_BASE + 4), void DUMMY) // timer to update record time
VM_MSG_DEF(MDLVDR_TIMER_VIDEO_ENCODE=(MDLVDR_TIMER_BASE + 5), void DUMMY) // timer to check if video encode timeout
VM_MSG_DEF(MDLVDR_TIMER_AUDIO_ENCODE=(MDLVDR_TIMER_BASE + 6), void DUMMY) // timer to check if video encode timeout


#endif

