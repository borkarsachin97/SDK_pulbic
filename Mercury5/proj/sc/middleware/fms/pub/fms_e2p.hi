/****************************************************************************/
/*  $Workfile::   fms_e2p.hi                                              $ */
/*--------------------------------------------------------------------------*/
/*  Scope   :  Flash Memory Services                                        */
/*             EEPROM simulation - Public header file                       */
/*  Contents:                                                               */
/*            fms_E2pRead                    |  Basic features              */
/*            fms_E2pReadMirror              |                              */
/*            fms_E2pWrite                   |                              */
/*                                                                          */
/*            fms_E2pBuildWmMirror           |  Mirror management           */
/*            fms_E2pBuildCustomMirror       |                              */
/*            fms_E2pRestoreWavecomMirror    |                              */
/*                                                                          */
/*            fms_E2pSaveParameters          |  Parameters backup           */
/*            fms_E2pSaveOneParameter        |                              */
/*            fms_E2pAddParamToContainer     |                              */
/*                                                                          */
/*            fms_E2pSetProtection           |  Parameters protection       */
/*            fms_E2pUnsetProtection         |                              */
/*                                                                          */
/*--------------------------------------------------------------------------*/
/*  $Revision::   0.4  $                                                    */
/*-------------------------------+------------------------------------------*/
/*  $Author::   kod    $         |     $Date::   24 Nov 2004 15:53:00 $     */
/****************************************************************************
 *   $Log:   U:/projet/gsm/pvcsarch/archives/fms/itf/fms_e2p.hi-arc  $
 *
 *   Rev 0.4   24 Nov 2004 15:53:00   kod
 *Resolution for 26275: Two allocations with undefined size are allowed
 *Resolution for 26611: [FMS] Xmodem downloader needs some FMS modifications
 *Version v1a18
 *
 *   Rev 0.3   Mar 02 2004 16:21:42   kod
 *Fixed fms_E2pBuildCusMirror function name.
 *Resolution for 19477: [FMS] Security and maintenance update
 *
 *   Rev 0.2   25 Feb 2003 11:59:58   kod
 *Initial release for integration
 ****************************************************************************/



#ifndef __FMS_E2P_HI__
#define __FMS_E2P_HI__

#include "mdl_fms_e2p.h"

/****************************************************************************/
/* MACRO FOR MIRROR UPDATE                                                  */
/****************************************************************************/

/*
 * Use this macro to create and initialise a container
 * for use with fms_E2pAddParamToContainer and fms_E2pSaveParameters
 *
 * FMS_E2P_PARAMCONTAINER(_size, _name)
 * _size = number of parameters to save
 * _name = name of the container.
 *
 * example:
 * int foo() {
 *    FMS_E2P_PARAMCONTAINER(2, params);
 *    fms_E2pAddParamToContainer(E2P_DUMMY1, &params);
 *    fms_E2pAddParamToContainer(E2P_DUMMY2, &params);
 *    fms_E2pSaveParameters(&params);
 * }
 *
 */
#define FMS_E2P_PARAMCONTAINER(_size, _name) struct { u16 foobar[(_size)*2+2]; } _name = {{ (_size), 0, }}
/* Async flush e2p feature {Patrick Yang */

/**
 *  @brief The enumeration defines the return code of flush E2P
 */
#ifdef __FMS_E2P_FAC_ITF__
s32 fms_E2pLoad_Async(factory_E2pCb factoryE2pCb);

#else
typedef enum
{
    LOAD_E2P_OK,
    LOAD_E2P_FAIL,
    LOAD_E2P_REJECT,
    LOAD_E2P_TIMEOUT,
    LOAD_E2P_UNDEFINED,
    LOAD_E2P_SIGNERR,
    LOAD_E2P_CKSMERR
} load_E2pErrCode;

typedef void (*load_E2pCb)(load_E2pErrCode errCode);

s32 fms_E2pLoad_Async(load_E2pCb loadE2pCb);
#endif




/* Async flush e2p feature Patrick Yang} */


/****************************************************************************/
/* EXPORTED FUNCTIONS                                                       */
/****************************************************************************/

/****************************************************************************/
/*  Function:  fms_E2pWriteEx                                               */
/*--------------------------------------------------------------------------*/
/*  Scope   :  Writes a parameter in EEPROM                                 */
/*                                                                          */
/*                                                                          */
/*  Return    : (s32) FMS_OK or error code                                  */
/*                                                                          */
/*  Interface :                                                             */
/*--------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Use                                    */
/*--------------------+---+---+---+-----------------------------------------*/
/*  i__u32_ParamAddr  | X |   |   |  Address in EEPROM of the parameter     */
/*  i__u32_ParamSize  | X |   |   |  Size of the parameter                  */
/*  i__p_Buffer       | X |   |   |  Source buffer                          */
/*  i__e_WriteMethod  | X |   |   |  Write through or write back            */
/*--------------------+---+---+---+-----------------------------------------*/
/****************************************************************************/
typedef enum {E2P_WRITE_THROUGH, E2P_WRITE_BACK} e2p_write_t;
s32 fms_E2pWriteEx(u32 i__u32_ParamAddr, u32 i__u32_ParamSize, void *i__p_Buffer, e2p_write_t i__e_WriteMethod);

/****************************************************************************/
/*  SAVING PARAMETERS IN MIRRORS                                            */
/****************************************************************************/



/****************************************************************************/
/*   PROTECTED PARAMETERS MANAGEMENT                                        */
/****************************************************************************/


#endif /* __FMS_E2P_HI__ not defined  */
