/****************************************************************************/
/* File :   FCM.HI                                                         */
/*--------------------------------------------------------------------------*/
/* Scope:   Flow Control Manager.                                           */
/*                                                                          */
/* Interface for FCM access                                                 */
/*--------------------------------------------------------------------------*/
/* Date     |   Author  | Modification                                      */
/*----------+-----------+---------------------------------------------------*/
/* 19/09/00 |    FGA    | Creation                                          */
/*----------+-----------+---------------------------------------------------*/
/* 31/05/01 |    FGA    | Changed fcm_DataBlock type (more headroom for v24)*/
/*          |           | fcm_Open (added MaxPacketSize) +fcm_Openflowind   */
/****************************************************************************/
/****************************************************************************
 $LogWavecom: U:\projet\gsm\pvcsarch\archives\fcm\itf\fcm.hi-arc $
 *--------------------------------------------------------------------------
 * Date     | Author | Revision       | Description
 *----------+--------+----------------+-------------------------------------
 * 28.11.03 | fga    | 1.7            | corrected typo, added block msg id
 *          |        |                | primitives  17336 : Resolution for
 *          |        |                | FCM: better separation of constants
 *          |        |                |  in interface
 *----------+--------+----------------+-------------------------------------
 * 25.11.03 | fga    | 1.4            | changed function prototype to macth
 *          |        |                |  fcm_fal.c  17172 : Resolution for
 *          |        |                | Compilation problem with FCM v1a02
 *----------+--------+----------------+-------------------------------------
 * 19.11.03 | fga    | 1.3            | aded FAL related interface.  17046
 *          |        |                | : Resolution for FCM: create open M
 *          |        |                | MI interface - FAL
 *----------+--------+----------------+-------------------------------------
 * 19.11.03 | fga    | 1.2            | added UART2/§USB flows for FAL  170
 *          |        |                | 46 : Resolution for FCM: create ope
 *          |        |                | n MMI interface - FAL
 *----------+--------+----------------+-------------------------------------
 * 04.11.03 | fga    | 1.0            | Initial revision.
 *----------+--------+----------------+-------------------------------------
****************************************************************************/

#ifndef __FCM_HI__
#define __FCM_HI__

#include "v24.hi"

#include "vm_fcm.ho"
#include "wmh_fcm.ho"

// FGA FCM v2.0
// keep FlowId definition around for convenience
typedef vm_sysFcmFlowId_t fcm_FlowId_t;

/* Error codes */
#define FCM_EOK              VM_FCM_EOK
#define FCM_EOK_NO_CREDIT    VM_FCM_EOK_NO_CREDIT
#define FCM_ERR_NO_CREDIT    VM_FCM_ERR_NO_CREDIT
#define FCM_ERR_NO_LINK      VM_FCM_ERR_NO_LINK
#define FCM_ERR_UNKNOWN_FLOW VM_FCM_ERR_UNKNOWN_FLOW

/* message primitives */
#define FCM_DATA_BLOCK_REQ       VM_FCM_DATA_BLOCK_REQ
#define FCM_OPEN_FLOW_IND        VM_FCM_OPEN_FLOW_IND
#define FCM_RESUME_FLOW_IND      VM_FCM_RESUME_FLOW_IND
#define FCM_CLOSE_FLOW_IND       VM_FCM_CLOSE_FLOW_IND

#define FCM_PRIO_BLOCK_REQ       VM_FCM_PRIO_BLOCK_REQ
#define FCM_DUMMY_BLOCK_REQ      VM_FCM_DUMMY_BLOCK_REQ

typedef vm_fcmDataBlock_t fcm_DataBlock_t;
typedef vm_fcmOpenFlowInd_t fcm_OpenFlowInd_t;
typedef vm_fcmResumeDataFlowInd_t fcm_ResumeDataFlowInd_t;
typedef vm_fcmCloseFlowInd_t fcm_CloseFlowInd_t;
// add Open params Type
typedef vm_fcmOpenParams_t fcm_OpenParams_t;

#define MAX_UNIT_FCM_DEPORT  VM_FCM_MAX_UNIT_FCM_DEPORT
#define THRESHOLD_FCM_DEPORT VM_FCM_THRESHOLD_FCM_DEPORT

/* from LLC */
#define FCM_LLC_TO_SNDCP_CREDIT           70
#define FCM_LLC_TO_SNDCP_MAX_PDU_LENGTH   1560
#define FCM_LLC_TO_SNDCP_THRESHOLD        20

/* From PPS */
#define FCM_PPS_TO_SNDCP_CREDIT           10
#define FCM_PPS_TO_SNDCP_MAX_PDU_LENGTH   1560
#define FCM_PPS_TO_SNDCP_THRESHOLD        5

/* From SNDCP */
#define FCM_SNDCP_TO_LLC_CREDIT   4
#define FCM_SNDCP_TO_LLC_MAX_PDU_LENGTH 550
#define FCM_SNDCP_TO_LLC_THRESHOLD   1

/* From RLU */
/* RLU_LLC_TO_RLU_MAX_UNITS set to 40            */
/* To ensure sending of all blocks in the window size */
/* 256 in class 10 and PDU length 500                 */
/* Shall be increased for higher window size          */
#define FCM_LLC_TO_RLU_MAX_UNITS       40
#define FCM_LLC_TO_RLU_MAX_PDU_LENGTH  550
#define FCM_LLC_TO_RLU_THRESHOLD       1

#if defined(__3G__)
/* From MUX */
#define FCM_MUX_TO_CONN_CREDIT          (3)
#define FCM_MUX_TO_CONN_THRESHOLD       (2)
#define FCM_MUX_TO_CONN_MAX_PDU_LENGTH  (4096)

#define FCM_MUX_TO_PPP_CREDIT           (15)
#define FCM_MUX_TO_PPP_THRESHOLD        (14)
#define FCM_MUX_TO_PPP_MAX_PDU_LENGTH   (2048)

/* From PPP */
#define FCM_IP_TO_PPP_CREDIT            (15)
#define FCM_IP_TO_PPP_THRESHOLD         (14)
#define FCM_IP_TO_PPP_MAX_PDU_LENGTH    (2048)


/* From IP */
#define FCM_PPP_TO_IP_CREDIT            (15)
#define FCM_PPP_TO_IP_THRESHOLD         (14)
#define FCM_PPP_TO_IP_MAX_PDU_LENGTH    (2048)


/* From Conn To MUX */
#define FCM_CONN_TO_MUX_CREDIT          (3)
#define FCM_CONN_TO_MUX_THRESHOLD       (2)
#define FCM_CONN_TO_MUX_MAX_PDU_LENGTH  (4096)


/* From MUX to VT */
#define FCM_MUX_TO_VT_CREDIT             (15)
#define FCM_MUX_TO_VT_THRESHOLD          (14)
#define FCM_MUX_TO_VT_MAX_PDU_LENGTH    (512)


/* From VT to MUX */
#define FCM_VT_TO_MUX_CREDIT              (15)
#define FCM_VT_TO_MUX_THRESHOLD           (14)
#define FCM_VT_TO_MUX_MAX_PDU_LENGTH     (512)


#endif

/* FAL related definitions */
typedef vm_falCusFuncTab_t cus_FuncTab_t;

/* and functions will use opic opec */

/* exported FCM functions */
extern s8   fcm_Init                ( void );
extern s8   fcm_Open              (u16 TxMbox,u16 RxMbox, u32 ChanId, u16 MaxUnits, u16 Threshold, u16 MaxSize);
extern s8   fcm_Close               (u16 Mbox,u32 ChanId);
extern s8   fcm_Submit              (u16 Mbox,u32 ChanId, void *RtkMsgPtr);
extern s8   fcm_Release             (u16 Mbox,u32 ChanId, u16 Credits);

extern bool fcm_Query               (u16 Mbox,u32 ChanId);



extern s8   fcm_OpenDeport        (u16 TxMbox, u16 RxMbox, u32 ChanId , u16 MaxSize);
extern s8   fcm_SubmitDataDeport  (void *Msg, u16 Mbox, u32 ChanId);

/* FAL API */
extern void fcm_FalInit(void);
extern s32 fcm_FalOpen(u16, cus_FuncTab_t *, v24_UartUsed_t);
extern s32 fcm_FalClose(void);
extern s32 fcm_FalSubmitData(u8 *,u16);
extern void fcm_FalParseFcmMsg(void *Msg);


#endif
